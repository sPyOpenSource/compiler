#BlueJ class context
comment0.target=JVM
comment0.text=\n\ MyCPU\:\ Architecture\ backend\ for\ MyCPU\ by\ Dennis\ Kuschel\n\ \n\ @author\ S.\ Frenz\n\ @version\ 160522\ fixed\ error\ messages\n\ \ version\ 160324\ removed\ unneccessary\ needsAlignedVrbls\n\ \ version\ 150929\ added\ support\ for\ exceptions\n\ \ version\ 150928\ added\ optimized\ genStore*\ and\ genBinOp*,\ fixed\ some\ details\n\ \ version\ 150927\ added\ interface\ support,\ fixed\ some\ important\ details\n\ \ version\ 150926\ fixed\ many\ details\n\ \ version\ 150922\ added\ new\ inlineCodeOffset,\ implemented\ some\ more\ functions\n\ \ version\ 150921\ fixed\ some\ details\ and\ implemented\ some\ more\ functions\n\ \ version\ 150919\ implemented\ some\ more\ functions\n\ \ version\ 150917\ fixed\ some\ details\n\ \ version\ 150916\ implemented\ some\ more\ functions\n\ \ version\ 150915\ added\ basic\ behavior\n\ \ version\ 150831\ initial\ version\n
comment1.params=
comment1.target=JVM()
comment10.params=type
comment10.target=int\ getByteCount(int)
comment11.params=ignoreReg1\ ignoreReg2\ keepReg1\ keepReg2
comment11.target=int\ ensureFreeRegs(int,\ int,\ int,\ int)
comment12.params=avoidReg1\ avoidReg2\ reUseReg\ type
comment12.target=int\ prepareFreeReg(int,\ int,\ int,\ int)
comment13.params=regs
comment13.target=void\ deallocReg(int)
comment14.params=
comment14.target=int\ allocReg()
comment15.params=deallocRegs\ keepRegs\ restore
comment15.target=void\ deallocRestoreReg(int,\ int,\ int)
comment16.params=nr\ reg\ type\ firstWrite
comment16.target=int\ getRegZPAddr(int,\ int,\ int,\ boolean)
comment17.params=mthd
comment17.target=sjc.compbase.Mthd\ prepareMethodCoding(sjc.compbase.Mthd)
comment18.params=
comment18.target=void\ codeProlog()
comment19.params=outline
comment19.target=void\ codeEpilog(sjc.compbase.Mthd)
comment2.params=loc\ offset\ ptr\ ptrOff
comment2.target=void\ putRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment20.params=first
comment20.target=void\ finalizeInstructions(sjc.backend.Instruction)
comment21.params=generatingMthd\ first\ loc\ offset
comment21.target=void\ finalizeInstructionAddresses(sjc.compbase.Mthd,\ sjc.backend.Instruction,\ java.lang.Object,\ int)
comment22.params=first\ dest
comment22.target=int\ getRelativeAddressOfInstruction(sjc.backend.Instruction,\ sjc.backend.Instruction)
comment23.params=dst\ val\ type
comment23.target=void\ genLoadConstVal(int,\ int,\ int)
comment24.params=dst\ val\ asDouble
comment24.target=void\ genLoadConstDoubleOrLongVal(int,\ long,\ boolean)
comment25.params=dst\ src\ loc\ off
comment25.target=void\ genLoadVarAddr(int,\ int,\ java.lang.Object,\ int)
comment26.params=dst\ src\ loc\ off\ type
comment26.target=void\ genLoadVarVal(int,\ int,\ java.lang.Object,\ int,\ int)
comment27.params=dst\ src\ toType\ fromType
comment27.target=void\ genConvertVal(int,\ int,\ int,\ int)
comment28.params=dst\ src\ type
comment28.target=void\ genDup(int,\ int,\ int)
comment29.params=val\ type
comment29.target=void\ genPushConstVal(int,\ int)
comment3.params=loc\ offset\ ptr\ ptrOff
comment3.target=void\ putCodeRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment30.params=val\ asDouble
comment30.target=void\ genPushConstDoubleOrLongVal(long,\ boolean)
comment31.params=src\ type
comment31.target=void\ genPush(int,\ int)
comment32.params=dst\ type
comment32.target=void\ genPop(int,\ int)
comment33.params=dst\ src\ type
comment33.target=void\ genAssign(int,\ int,\ int)
comment34.params=dst\ src1\ src2\ op\ type
comment34.target=void\ genBinOp(int,\ int,\ int,\ int,\ int)
comment35.params=dst\ src\ op\ type
comment35.target=void\ genUnaOp(int,\ int,\ int,\ int)
comment36.params=dst\ type
comment36.target=void\ genIncMem(int,\ int)
comment37.params=dst\ type
comment37.target=void\ genDecMem(int,\ int)
comment38.params=
comment38.target=void\ genSaveUnitContext()
comment39.params=
comment39.target=void\ genRestUnitContext()
comment4.params=reg
comment4.target=int\ getZPAddrOfReg(int)
comment40.params=dst\ off
comment40.target=void\ genLoadUnitContext(int,\ int)
comment41.params=dst\ unitLoc
comment41.target=void\ genLoadConstUnitContext(int,\ java.lang.Object)
comment42.params=
comment42.target=void\ genSaveInstContext()
comment43.params=
comment43.target=void\ genRestInstContext()
comment44.params=src
comment44.target=void\ genLoadInstContext(int)
comment45.params=off\ clssReg\ parSize
comment45.target=void\ genCall(int,\ int,\ int)
comment46.params=intfReg\ off\ parSize
comment46.target=void\ genCallIndexed(int,\ int,\ int)
comment47.params=obj\ parSize
comment47.target=void\ genCallConst(sjc.compbase.Mthd,\ int)
comment48.params=dest
comment48.target=void\ genJmp(sjc.backend.Instruction)
comment49.params=dest\ cond
comment49.target=void\ genCondJmp(sjc.backend.Instruction,\ int)
comment5.params=value\ hit
comment5.target=int\ bitSearch(int,\ int)
comment50.params=src1\ src2\ type\ cond
comment50.target=int\ genComp(int,\ int,\ int,\ int)
comment51.params=src\ val\ type\ cond
comment51.target=int\ genCompValToConstVal(int,\ int,\ int,\ int)
comment52.params=src\ val\ asDouble\ cond
comment52.target=int\ genCompValToConstDoubleOrLongVal(int,\ long,\ boolean,\ int)
comment53.params=reg\ cond
comment53.target=int\ genCompPtrToNull(int,\ int)
comment54.params=dst\ src\ type\ memLoc
comment54.target=void\ genWriteIO(int,\ int,\ int,\ int)
comment55.params=dst\ src\ type\ memLoc
comment55.target=void\ genReadIO(int,\ int,\ int,\ int)
comment56.params=src\ type
comment56.target=void\ genMoveToPrimary(int,\ int)
comment57.params=dst\ type
comment57.target=void\ genMoveFromPrimary(int,\ int)
comment58.params=dst
comment58.target=void\ genMoveIntfMapFromPrimary(int)
comment59.params=type
comment59.target=void\ genSavePrimary(int)
comment6.params=reg
comment6.target=int\ getBitPos(int)
comment60.params=type
comment60.target=void\ genRestPrimary(int)
comment61.params=addrReg\ offReg\ checkToOffset\ onSuccess
comment61.target=void\ genCheckBounds(int,\ int,\ int,\ sjc.backend.Instruction)
comment62.params=maxValueReg\ onSuccess
comment62.target=void\ genCheckStackExtreme(int,\ sjc.backend.Instruction)
comment63.params=destReg\ objReg\ indReg\ baseOffset\ entrySize
comment63.target=void\ genLoadDerefAddr(int,\ int,\ int,\ int,\ int)
comment64.params=globalAddrReg\ dest\ throwBlockOffset
comment64.target=void\ genThrowFrameBuild(int,\ sjc.backend.Instruction,\ int)
comment65.params=oldDest\ newDest\ throwBlockOffset
comment65.target=void\ genThrowFrameUpdate(sjc.backend.Instruction,\ sjc.backend.Instruction,\ int)
comment66.params=globalAddrReg\ throwBlockOffset
comment66.target=void\ genThrowFrameReset(int,\ int)
comment67.params=inlineMode\ objReg\ loc\ offset\ baseValue
comment67.target=void\ inlineVarOffset(int,\ int,\ java.lang.Object,\ int,\ int)
comment68.params=defineHere\ addOffset
comment68.target=void\ inlineCodeAddress(boolean,\ int)
comment69.params=objReg\ loc\ off\ valReg\ type
comment69.target=void\ genStoreVarVal(int,\ java.lang.Object,\ int,\ int,\ int)
comment7.params=mask\ type
comment7.target=int\ freeRegSearch(int,\ int)
comment70.params=objReg\ loc\ off\ val\ type
comment70.target=void\ genStoreVarConstVal(int,\ java.lang.Object,\ int,\ int,\ int)
comment71.params=objReg\ loc\ off\ val\ asDouble
comment71.target=void\ genStoreVarConstDoubleOrLongVal(int,\ java.lang.Object,\ int,\ long,\ boolean)
comment72.params=dst\ src1\ val\ op\ type
comment72.target=void\ genBinOpConstRi(int,\ int,\ int,\ int,\ int)
comment73.params=dst\ src1\ val\ op\ asDouble
comment73.target=void\ genBinOpConstDoubleOrLongRi(int,\ int,\ long,\ int,\ boolean)
comment74.params=op
comment74.target=void\ ins(int)
comment75.params=op\ par
comment75.target=void\ ins(int,\ int)
comment76.params=op\ par1\ par2
comment76.target=void\ ins(int,\ int,\ int)
comment77.params=refMthd\ parSize
comment77.target=sjc.backend.Instruction\ insPatchedCall(sjc.compbase.Mthd,\ int)
comment78.params=op\ dest
comment78.target=sjc.backend.Instruction\ insPatchedJmp(int,\ sjc.backend.Instruction)
comment79.params=parSize
comment79.target=void\ insCleanStackAfterCall(int)
comment8.params=regs
comment8.target=int\ storeReg(int)
comment9.params=regs
comment9.target=void\ restoreReg(int)
numComments=80
