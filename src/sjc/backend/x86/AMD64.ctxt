#BlueJ class context
comment0.target=AMD64
comment0.text=\n\ AMD64\:\ architecture\ implementation\ for\ 64\ bit\ long\ mode\ AMD64/EM64T\ processors\n\ \n\ @author\ S.\ Frenz\n\ @version\ 110223\ removed\ debug\ code\n\ \ version\ 110222\ fixed\ MOVSX*\ and\ MOVZX*\ instructions\ for\ 16\ bit\ register\n\ \ version\ 110219\ fixed\ MOVSX*\ and\ MOVZX*\ instructions\ for\ 16\ bit\ register\n\ \ version\ 110218\ fixed\ ADDmemimm\ instruction\n\ \ version\ 110208\ added\ some\ instructions\ used\ in\ optimizer\n\ \ version\ 110127\ added\ some\ instructions\ used\ in\ optimizer\n\ \ version\ 110120\ fixed\ MOVmemimm\ for\ upper\ regs\n\ \ version\ 110115\ fixed\ MOVregimmL\ for\ upper\ regs\n\ \ version\ 101210\ adopted\ changed\ Architecture\n\ \ version\ 101125\ added\ support\ for\ native\ callback\ epilog\ style\n\ \ version\ 101124\ fixed\ shift\ in\ memory\ instructions\ (used\ in\ optimier)\n\ \ version\ 101119\ added\ some\ encoding\ of\ instructions\ (used\ in\ optimizer)\n\ \ version\ 101107\ fixed\ codeAriRegImm\ for\ R8-based\ operations\n\ \ version\ 101105\ flipped\ prefix\ byte\ order\n\ \ version\ 101104\ added\ some\ encoding\ of\ instructions\ (used\ in\ optimizer)\n\ \ version\ 101101\ adopted\ changed\ Architecture\n\ \ version\ 101027\ fixed\ sign\ handling\ for\ logical\ bitshift\ of\ byte\ and\ short\ values\n\ \ version\ 100927\ fixed\ unsignedness\ of\ chars\n\ \ version\ 100924\ fixed\ access\ to\ parameter\ in\ interrupt\ method\ after\ inline\ method,\ fixed\ codeAriRegImm,\ fixed\ code\ for\ I_ANDmemimm\n\ \ version\ 100922\ made\ some\ private\ variables\ protected,\ added\ some\ instruction-types,\ fixed\ I_ORmemreg\n\ \ version\ 100824\ fixed\ coding\ of\ MOVSX\ for\ new\ amd64\ registers\n\ \ version\ 100428\ fixed\ coding\ of\ NEG\ and\ NOT\ for\ new\ amd64\ registers\n\ \ version\ 100115\ adopted\ changed\ error\ reporting\ and\ codeStart-movement\n\ \ version\ 091105\ fixed\ invalid\ stack\ size\ adjustment\ in\ epilog\ of\ inlined\ methods\ with\ vars+pars\n\ \ version\ 091026\ added\ optimized\ version\ of\ genBinOpConst*\n\ \ version\ 091013\ adopted\ changed\ method\ signature\ of\ genStore*\n\ \ version\ 091005\ fixed\ genStore*\ after\ memory\ interface\ changes\n\ \ version\ 091004\ removed\ getSpecialValue\n\ \ version\ 091001\ adopted\ changed\ memory\ interface\n\ \ version\ 090717\ adopted\ changed\ Architecture\n\ \ version\ 090626\ added\ support\ for\ stack\ extreme\ check\n\ \ version\ 090619\ adopted\ changed\ Architecture\n\ \ version\ 090609\ added\ check\ for\ null-pointers\ in\ putRef\ in\ "image\ relocated"\ mode\n\ \ version\ 090430\ added\ support\ for\ native\ "return\ missing"\ hint\n\ \ version\ 090409\ added\ implementation\ of\ newly\ inserted\ getSpecialValue\n\ \ version\ 090408\ added\ support\ for\ images\ starting\ above\ 2gb\ with\ architecture\ option\ "-T\ rXXX"\n\ \ version\ 090219\ adopted\ changed\ X86Base\n\ \ version\ 090218\ clarified\ genLoadConstDoubleOrLongVal\n\ \ version\ 090208\ removed\ genClearMem\n\ \ version\ 090207\ added\ copyright\ notice\n\ \ version\ 090206\ added\ support\ for\ optimized\ genStoreVar*l\n\ \ version\ 081209\ added\ support\ for\ method\ printing\n\ \ version\ 081021\ adopted\ changes\ in\ Architecture\n\ \ version\ 080607\ added\ support\ for\ language\ throwables\n\ \ version\ 080316\ added\ support\ for\ native\ calls\ with\ parameters\ in\ registers\ \n\ \ version\ 080313\ added\ support\ for\ native\ calls\n\ \ version\ 080205\ added\ support\ for\ noStackOptimization\n\ \ version\ 080127\ fixed\ bug\ in\ XCHG\ opcode\n\ \ version\ 080122\ fixed\ setting\ of\ usedRegs\ in\ getReg\ on\ firstWrite\n\ \ version\ 080105\ added\ genSavePrimary\ and\ genRestPrimary\n\ \ version\ 071011\ fixed\ invalid\ optimization\ of\ constant\ long-push\n\ \ version\ 070917\ pre-initialization\ of\ stack\ variables\ with\ "0"\n\ \ version\ 070913\ moved\ curVarOffParam\ to\ X86Base,\ added\ support\ for\ genClearMem\n\ \ version\ 070910\ added\ support\ for\ inling\ methods\ with\ unclear\ FPU-stack\n\ \ version\ 070830\ bugfix\ in\ long\ division\n\ \ version\ 070816\ added\ float/double-optimization\ with\ FCOMIP\n\ \ version\ 070815\ added\ support\ for\ float/double\n\ \ version\ 070812\ dummy-handling\ of\ float\ and\ double\ to\ enable\ self-compilation\ (still\ without\ float/double)\n\ \ version\ 070809\ adopted\ changes\ for\ float\ and\ double\n\ \ version\ 070723\ changed\ bound\ exception\ interrupt\ number\ from\ 0x21\ to\ 0x05\n\ \ version\ 070628\ added\ allocClearBits\n\ \ version\ 070615\ removed\ no\ longer\ needed\ getRef\n\ \ version\ 070610\ optimized\ access\ to\ different\ jump\ offset\ sizes\n\ \ version\ 070606\ moved\ common\ methods\ and\ variables\ to\ X86Base\n\ \ version\ 070601\ optimized\ genBinOp,\ externalized\ Strings\ to\ X86Base\n\ \ version\ 070531\ adopted\ removal\ of\ Architecture.genLoadFromMem\n\ \ version\ 070505\ adopted\ naming\ of\ Clss\ to\ Unit,\ changed\ OutputObject\ to\ int\n\ \ version\ 070501\ optimized\ insPatched\n\ \ version\ 070422\ fixed\ param-offset\ in\ interrupt\ routines\n\ \ version\ 070127\ optimized\ information\ output\n\ \ version\ 070114\ removed\ never\ called\ genGetClassOfResult,\ reduced\ access\ level\ where\ possible\n\ \ version\ 070113\ adopted\ change\ of\ genCheckNull\ to\ genCompPtrToNull\n\ \ version\ 070104\ optimized\ register\ allocation\n\ \ version\ 070101\ fixed\ fixJump,\ adopted\ change\ in\ genCall\n\ \ version\ 061231\ removed\ coding\ of\ unused\ instruction,\ rolled\ out\ coding\ of\ ari-instructions\n\ \ version\ 061229\ removed\ access\ to\ firstInstr\n\ \ version\ 061225\ adopted\ change\ in\ codeProlog\n\ \ version\ 061203\ optimized\ assign/check\ and\ calls\ to\ printPos\ and\ compErr\n\ \ version\ 061202\ adopted\ change\ of\ genCall\n\ \ version\ 061111\ adopted\ change\ of\ Architecture.codeEpilog\n\ \ version\ 061109\ adapted\ Ops.C_BO\n\ \ version\ 061107\ fixed\ genLoadDerefAddr\ for\ odd\ values\n\ \ version\ 061105\ optimized\ genLoadVarAddr\ if\ offset\=\=0\ and\ src\=\=dst\n\ \ version\ 060628\ added\ support\ for\ static\ compilation\n\ \ version\ 060621\ fixed\ genLoadConstVal\n\ \ version\ 060616\ inserted\ genCopyInstContext\n\ \ version\ 060607\ initial\ version\n
comment1.params=
comment1.target=AMD64()
comment10.params=regs
comment10.target=void\ restoreReg(int)
comment11.params=nr\ reg\ type\ firstWrite
comment11.target=int\ internalGetReg(int,\ int,\ int,\ boolean)
comment12.params=mthd
comment12.target=sjc.compbase.Mthd\ prepareMethodCoding(sjc.compbase.Mthd)
comment13.params=
comment13.target=void\ codeProlog()
comment14.params=outline
comment14.target=void\ codeEpilog(sjc.compbase.Mthd)
comment15.params=dst\ val\ type
comment15.target=void\ genLoadConstVal(int,\ int,\ int)
comment16.params=dst\ val\ asDouble
comment16.target=void\ genLoadConstDoubleOrLongVal(int,\ long,\ boolean)
comment17.params=dst\ src\ loc\ off
comment17.target=void\ genLoadVarAddr(int,\ int,\ java.lang.Object,\ int)
comment18.params=dstR\ src\ loc\ off\ type
comment18.target=void\ genLoadVarVal(int,\ int,\ java.lang.Object,\ int,\ int)
comment19.params=dst\ src\ toType\ fromType
comment19.target=void\ genConvertVal(int,\ int,\ int,\ int)
comment2.params=parm\ v
comment2.target=boolean\ setParameter(java.lang.String,\ sjc.osio.TextPrinter)
comment20.params=dstR\ srcR\ type
comment20.target=void\ genDup(int,\ int,\ int)
comment21.params=val\ type
comment21.target=void\ genPushConstVal(int,\ int)
comment22.params=val\ asDouble
comment22.target=void\ genPushConstDoubleOrLongVal(long,\ boolean)
comment23.params=srcR\ type
comment23.target=void\ genPush(int,\ int)
comment24.params=dstR\ type
comment24.target=void\ genPop(int,\ int)
comment25.params=dst\ srcR\ type
comment25.target=void\ genAssign(int,\ int,\ int)
comment26.params=objReg\ loc\ off\ src\ type
comment26.target=void\ genStoreVarVal(int,\ java.lang.Object,\ int,\ int,\ int)
comment27.params=objReg\ loc\ off\ val\ type
comment27.target=void\ genStoreVarConstVal(int,\ java.lang.Object,\ int,\ int,\ int)
comment28.params=objReg\ loc\ off\ val\ asDouble
comment28.target=void\ genStoreVarConstDoubleOrLongVal(int,\ java.lang.Object,\ int,\ long,\ boolean)
comment29.params=dstR\ src1\ src2\ op\ type
comment29.target=void\ genBinOp(int,\ int,\ int,\ int,\ int)
comment3.params=v
comment3.target=void\ printParameter(sjc.osio.TextPrinter)
comment30.params=dstR\ src1R\ val\ op\ type
comment30.target=void\ genBinOpConstRi(int,\ int,\ int,\ int,\ int)
comment31.params=dstR\ srcR\ op\ type
comment31.target=void\ genUnaOp(int,\ int,\ int,\ int)
comment32.params=dst\ type
comment32.target=void\ genIncMem(int,\ int)
comment33.params=dst\ type
comment33.target=void\ genDecMem(int,\ int)
comment34.params=dst\ unitLoc
comment34.target=void\ genLoadConstUnitContext(int,\ java.lang.Object)
comment35.params=off\ clssReg\ parSize
comment35.target=void\ genCall(int,\ int,\ int)
comment36.params=intfReg\ off\ parSize
comment36.target=void\ genCallIndexed(int,\ int,\ int)
comment37.params=mthd\ parSize
comment37.target=void\ genCallConst(sjc.compbase.Mthd,\ int)
comment38.params=src1\ src2\ type\ cond
comment38.target=int\ genComp(int,\ int,\ int,\ int)
comment39.params=src\ val\ type\ cond
comment39.target=int\ genCompValToConstVal(int,\ int,\ int,\ int)
comment4.params=imem\ ilev\ ictx
comment4.target=void\ init(sjc.memory.MemoryImage,\ int,\ sjc.compbase.Context)
comment40.params=srcR\ val\ asDouble\ cond
comment40.target=int\ genCompValToConstDoubleOrLongVal(int,\ long,\ boolean,\ int)
comment41.params=destReg\ objReg\ ind\ baseOffset\ entrySize
comment41.target=void\ genLoadDerefAddr(int,\ int,\ int,\ int,\ int)
comment42.params=srcR\ type
comment42.target=void\ genMoveToPrimary(int,\ int)
comment43.params=dstR\ type
comment43.target=void\ genMoveFromPrimary(int,\ int)
comment44.params=dst
comment44.target=void\ genMoveIntfMapFromPrimary(int)
comment45.params=type
comment45.target=void\ genSavePrimary(int)
comment46.params=type
comment46.target=void\ genRestPrimary(int)
comment47.params=loc\ off\ relative\ parSize\ noCleanUp
comment47.target=void\ genCallNative(java.lang.Object,\ int,\ boolean,\ int,\ boolean)
comment48.params=size
comment48.target=void\ genReserveNativeStack(int)
comment49.params=offset\ src\ type
comment49.target=void\ genStoreNativeParameter(int,\ int,\ int)
comment5.params=loc\ offset\ ptr\ ptrOff
comment5.target=void\ putRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment50.params=reg
comment50.target=java.lang.String\ getRegName(int)
comment51.params=type\ reg0\ reg1\ disp\ imm
comment51.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int)
comment52.params=me\ stackCells
comment52.target=void\ internalFixStackExtremeAdd(sjc.backend.Instruction,\ int)
comment53.params=type\ reg0\ reg1\ disp\ imm\ immL\ par
comment53.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int,\ long,\ int)
comment54.params=i\ code\ sizeprefix\ wordflag\ reg0\ rex0\ nrg0\ imm
comment54.target=void\ codeAriRegImm(sjc.backend.Instruction,\ int,\ boolean,\ int,\ int,\ boolean,\ boolean,\ int)
comment55.params=i\ code\ reg0\ disp\ imm\ par
comment55.target=void\ codeAriMemImm(sjc.backend.Instruction,\ int,\ int,\ int,\ int,\ int)
comment56.params=i\ code\ sizeprefix\ wordflag\ reg0\ rex0\ nrg0\ imm
comment56.target=void\ codeShiftRegImm(sjc.backend.Instruction,\ int,\ boolean,\ int,\ int,\ boolean,\ boolean,\ int)
comment57.params=i\ sizeprefix\ rex\ nrg0\ nrg1
comment57.target=void\ putPrefix(sjc.backend.Instruction,\ boolean,\ boolean,\ boolean,\ boolean)
comment58.params=i\ reg0\ reg1
comment58.target=void\ putRegReg(sjc.backend.Instruction,\ int,\ int)
comment59.params=i\ reg0\ reg1\ disp
comment59.target=void\ putMem(sjc.backend.Instruction,\ int,\ int,\ int)
comment6.params=loc\ offset\ ptr\ ptrOff
comment6.target=void\ putCodeRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment60.params=i\ reg0\ imm
comment60.target=void\ putImm(sjc.backend.Instruction,\ int,\ int)
comment61.params=i\ reg0\ reg1\ reg2\ scale\ disp
comment61.target=void\ putRegMemInx(sjc.backend.Instruction,\ int,\ int,\ int,\ int,\ int)
comment7.params=avoidRegs\ type
comment7.target=int\ getFreeReg(int,\ int)
comment8.params=mask\ type
comment8.target=int\ freeRegSearch(int,\ int)
comment9.params=regs
comment9.target=int\ storeReg(int)
numComments=62
