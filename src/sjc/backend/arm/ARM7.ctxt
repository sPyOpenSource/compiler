#BlueJ class context
comment0.target=ARM7
comment0.text=\n\ ARM7\:\ Architecture\ backend\ for\ ARM7\ processors\n\ \n\ @author\ S.\ Frenz\n\ @version\ 150914\ removed\ unneccessary\ createNewInstruction\n\ \ version\ 120509\ beautyfied\ and\ fixed\ genLoadDerefAddr,\ fixed\ genThrowFrameBuild\ and\ print\n\ \ version\ 120501\ added\ support\ for\ negative\ entrySizes\ in\ genLoadDerefAddr\n\ \ version\ 110211\ added\ support\ for\ stack\ extreme\ test\ and\ arithmetic\ shift\ right\n\ \ version\ 101222\ setting\ newly\ inserted\ needsAlignedVrbls\n\ \ version\ 101210\ adopted\ changed\ Architecture\n\ \ version\ 101207\ added\ support\ for\ programmed\ exceptions\n\ \ version\ 101111\ added\ more\ functions,\ fixed\ some\ bugs\n\ \ version\ 101101\ adopted\ changed\ Architecture\n\ \ version\ 101027\ added\ more\ functions,\ fixed\ some\ bugs\n\ \ version\ 101024\ restructured\ instruction\ coding,\ added\ more\ functions\n\ \ version\ 101021\ added\ more\ functions\n\ \ version\ 101020\ added\ more\ functions\n\ \ version\ 101018\ added\ more\ functions,\ prepared\ "nice"\ instruction\ encoding\n\ \ version\ 101016\ re-ordered\ registers,\ added\ better\ load\ strategy\n\ \ version\ 101015\ added\ temporary\ load/store\ routines\n\ \ version\ 100929\ added\ basic\ register\ management\n\ \ version\ 100805\ initial\ version\n
comment1.params=
comment1.target=ARM7()
comment10.params=avoidReg1\ avoidReg2\ reUseReg\ type
comment10.target=int\ prepareFreeReg(int,\ int,\ int,\ int)
comment11.params=regs
comment11.target=void\ deallocReg(int)
comment12.params=
comment12.target=int\ allocReg()
comment13.params=deallocRegs\ keepRegs\ restore
comment13.target=void\ deallocRestoreReg(int,\ int,\ int)
comment14.params=nr\ reg\ firstWrite
comment14.target=int\ getReg(int,\ int,\ boolean)
comment15.params=first
comment15.target=void\ finalizeInstructions(sjc.backend.Instruction)
comment16.params=mthd
comment16.target=sjc.compbase.Mthd\ prepareMethodCoding(sjc.compbase.Mthd)
comment17.params=
comment17.target=void\ codeProlog()
comment18.params=outline
comment18.target=void\ codeEpilog(sjc.compbase.Mthd)
comment19.params=dst\ val\ type
comment19.target=void\ genLoadConstVal(int,\ int,\ int)
comment2.params=loc\ offset\ ptr\ ptrOff
comment2.target=void\ putRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment20.params=dst\ val\ asDouble
comment20.target=void\ genLoadConstDoubleOrLongVal(int,\ long,\ boolean)
comment21.params=dst\ src\ loc\ off
comment21.target=void\ genLoadVarAddr(int,\ int,\ java.lang.Object,\ int)
comment22.params=dstReg\ src\ loc\ off\ type
comment22.target=void\ genLoadVarVal(int,\ int,\ java.lang.Object,\ int,\ int)
comment23.params=dst\ src\ toType\ fromType
comment23.target=void\ genConvertVal(int,\ int,\ int,\ int)
comment24.params=dst\ src\ type
comment24.target=void\ genDup(int,\ int,\ int)
comment25.params=val\ type
comment25.target=void\ genPushConstVal(int,\ int)
comment26.params=val\ asDouble
comment26.target=void\ genPushConstDoubleOrLongVal(long,\ boolean)
comment27.params=src\ type
comment27.target=void\ genPush(int,\ int)
comment28.params=dst\ type
comment28.target=void\ genPop(int,\ int)
comment29.params=dst\ srcReg\ type
comment29.target=void\ genAssign(int,\ int,\ int)
comment3.params=loc\ offset\ ptr\ ptrOff
comment3.target=void\ putCodeRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment30.params=dst\ src1\ src2\ op\ type
comment30.target=void\ genBinOp(int,\ int,\ int,\ int,\ int)
comment31.params=dst\ src\ op\ type
comment31.target=void\ genUnaOp(int,\ int,\ int,\ int)
comment32.params=dst\ type
comment32.target=void\ genIncMem(int,\ int)
comment33.params=dst\ type
comment33.target=void\ genDecMem(int,\ int)
comment34.params=
comment34.target=void\ genSaveUnitContext()
comment35.params=
comment35.target=void\ genRestUnitContext()
comment36.params=dst\ off
comment36.target=void\ genLoadUnitContext(int,\ int)
comment37.params=dst\ unitLoc
comment37.target=void\ genLoadConstUnitContext(int,\ java.lang.Object)
comment38.params=
comment38.target=void\ genSaveInstContext()
comment39.params=
comment39.target=void\ genRestInstContext()
comment4.params=value\ hit\ prefere
comment4.target=int\ bitSearch(int,\ int,\ int)
comment40.params=src
comment40.target=void\ genLoadInstContext(int)
comment41.params=off\ clssReg\ parSize
comment41.target=void\ genCall(int,\ int,\ int)
comment42.params=intfReg\ off\ parSize
comment42.target=void\ genCallIndexed(int,\ int,\ int)
comment43.params=obj\ parSize
comment43.target=void\ genCallConst(sjc.compbase.Mthd,\ int)
comment44.params=dest
comment44.target=void\ genJmp(sjc.backend.Instruction)
comment45.params=dest\ condHnd
comment45.target=void\ genCondJmp(sjc.backend.Instruction,\ int)
comment46.params=src1\ src2\ type\ cond
comment46.target=int\ genComp(int,\ int,\ int,\ int)
comment47.params=src\ val\ type\ cond
comment47.target=int\ genCompValToConstVal(int,\ int,\ int,\ int)
comment48.params=src\ val\ asDouble\ cond
comment48.target=int\ genCompValToConstDoubleOrLongVal(int,\ long,\ boolean,\ int)
comment49.params=reg\ cond
comment49.target=int\ genCompPtrToNull(int,\ int)
comment5.params=reg
comment5.target=int\ getBitPos(int)
comment50.params=dst\ src\ type\ memLoc
comment50.target=void\ genWriteIO(int,\ int,\ int,\ int)
comment51.params=dst\ src\ type\ memLoc
comment51.target=void\ genReadIO(int,\ int,\ int,\ int)
comment52.params=srcR\ type
comment52.target=void\ genMoveToPrimary(int,\ int)
comment53.params=dstR\ type
comment53.target=void\ genMoveFromPrimary(int,\ int)
comment54.params=dst
comment54.target=void\ genMoveIntfMapFromPrimary(int)
comment55.params=type
comment55.target=void\ genSavePrimary(int)
comment56.params=type
comment56.target=void\ genRestPrimary(int)
comment57.params=addr\ off\ checkToOffset\ onSuccess
comment57.target=void\ genCheckBounds(int,\ int,\ int,\ sjc.backend.Instruction)
comment58.params=maxValueReg\ onSuccess
comment58.target=void\ genCheckStackExtreme(int,\ sjc.backend.Instruction)
comment59.params=destReg\ objReg\ indReg\ baseOffset\ entrySize
comment59.target=void\ genLoadDerefAddr(int,\ int,\ int,\ int,\ int)
comment6.params=mask\ type
comment6.target=int\ freeRegSearch(int,\ int)
comment60.params=globalAddrReg\ dest\ throwBlockOffset
comment60.target=void\ genThrowFrameBuild(int,\ sjc.backend.Instruction,\ int)
comment61.params=oldDest\ newDest\ throwBlockOffset
comment61.target=void\ genThrowFrameUpdate(sjc.backend.Instruction,\ sjc.backend.Instruction,\ int)
comment62.params=globalAddrReg\ throwBlockOffset
comment62.target=void\ genThrowFrameReset(int,\ int)
comment63.params=inlineMode\ objReg\ loc\ offset\ baseValue
comment63.target=void\ inlineVarOffset(int,\ int,\ java.lang.Object,\ int,\ int)
comment64.params=
comment64.target=void\ genNativeBoundException()
comment65.params=value\ bits
comment65.target=int\ rotateLeft(int,\ int)
comment66.params=val
comment66.target=int\ getEvenByteRol(int)
comment67.params=code
comment67.target=sjc.backend.Instruction\ ins(int)
comment68.params=cond\ op\ dstReg\ src1Reg\ src2Reg
comment68.target=void\ insDataReg(int,\ int,\ int,\ int,\ int)
comment69.params=cond\ op\ dstReg\ src1Reg\ src2Reg\ shiftRegOrImm\ shiftType
comment69.target=void\ insDataReg(int,\ int,\ int,\ int,\ int,\ int,\ int)
comment7.params=regs
comment7.target=int\ storeReg(int)
comment70.params=cond\ op\ dstReg\ srcReg\ val\ rotateLeftEven
comment70.target=void\ insDataImm(int,\ int,\ int,\ int,\ int,\ int)
comment71.params=cond\ op\ valReg\ memReg\ memOff
comment71.target=void\ insSingleTransfer(int,\ int,\ int,\ int,\ int)
comment72.params=cond\ op\ valReg\ memReg\ memOff
comment72.target=void\ insSingleReducedTransfer(int,\ int,\ int,\ int,\ int)
comment73.params=cond\ op\ ptrReg\ regMask
comment73.target=void\ insBlockTransfer(int,\ int,\ int,\ int)
comment74.params=cond\ op\ dst\ src1\ src2\ addReg
comment74.target=void\ insMul(int,\ int,\ int,\ int,\ int,\ int)
comment75.params=cond\ op\ dstHi\ dstLo\ src1\ src2
comment75.target=void\ insMulLong(int,\ int,\ int,\ int,\ int,\ int)
comment76.params=cond\ dstReg\ val\ maxDiff
comment76.target=void\ insMoveConst(int,\ int,\ int,\ int)
comment77.params=cond\ dest
comment77.target=void\ insBranch(int,\ sjc.backend.Instruction)
comment78.params=refMthd\ parSize
comment78.target=sjc.backend.Instruction\ insPatchedCall(sjc.compbase.Mthd,\ int)
comment79.params=cond\ dstReg\ value\ acceptDiff
comment79.target=void\ insLoadLit(int,\ int,\ int,\ int)
comment8.params=regs
comment8.target=void\ restoreReg(int)
comment80.params=from\ to
comment80.target=void\ insPatchedAdd(sjc.backend.Instruction,\ sjc.backend.Instruction)
comment81.params=i\ cond\ op\ valReg\ memReg\ memOff
comment81.target=void\ encodeSingleTransfer(sjc.backend.Instruction,\ int,\ int,\ int,\ int,\ int)
comment82.params=me
comment82.target=boolean\ fixBranch(sjc.backend.Instruction)
comment83.params=me\ doRealEncode
comment83.target=boolean\ fixAddPatched(sjc.backend.Instruction,\ boolean)
comment84.params=me
comment84.target=void\ fixStex(sjc.backend.Instruction)
comment85.params=me
comment85.target=void\ fixLoadLit(sjc.backend.Instruction)
comment86.params=from\ to
comment86.target=int\ getRelative(sjc.backend.Instruction,\ sjc.backend.Instruction)
comment87.params=first\ comment
comment87.target=void\ printCode(sjc.backend.Instruction,\ java.lang.String)
comment88.params=i
comment88.target=int\ print(sjc.backend.Instruction)
comment9.params=ignoreReg1\ ignoreReg2\ keepReg1\ keepReg2
comment9.target=int\ ensureFreeRegs(int,\ int,\ int,\ int)
numComments=89
