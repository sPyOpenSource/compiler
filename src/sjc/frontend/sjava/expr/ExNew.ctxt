#BlueJ class context
comment0.target=ExNew
comment0.text=\n\ ExNew\:\ new-expression\n\ \n\ @author\ S.\ Frenz\n\ @version\ 210408\ fixed\ check\ to\ not-allow\ new\ STRUCT\ array\n\ \ version\ 120925\ added\ support\ for\ code\ printer\n\ \ version\ 120404\ adopted\ changed\ ExAbsCall,\ again\ fixed\ reference\ to\ imported\ unit,\ added\ register\ saving\ for\ explicit\ constructor\ call\n\ \ version\ 120312\ added\ resolve\ variant\ for\ named\ new\n\ \ version\ 101231\ adopted\ changed\ Unit\n\ \ version\ 101210\ adopted\ changed\ Architecture\n\ \ version\ 101019\ fixed\ in\ optimization\ of\ 101018\n\ \ version\ 101018\ fixed\ write-once\ semantic\ in\ new\n\ \ version\ 101015\ adopted\ changed\ Expr\n\ \ version\ 100409\ adopted\ changed\ TypeRef\n\ \ version\ 100114\ reorganized\ constant\ object\ handling,\ version\ 100114\ adopted\ changed\ Architecture\n\ \ version\ 091125\ optimized\ reg-copy\ if\ result\ is\ never\ read\n\ \ version\ 091026\ adopted\ changed\ minimumAccessLevel\ return\ value\n\ \ version\ 091021\ adopted\ changed\ modifier\ declarations\ and\ added\ relation\ tracking\n\ \ version\ 091013\ adopted\ changed\ method\ signature\ of\ genStore*\n\ \ version\ 091005\ adopted\ changed\ Expr\n\ \ version\ 091001\ adopted\ changed\ memory\ interface\n\ \ version\ 090724\ adopted\ changed\ Expr\n\ \ version\ 090718\ adopted\ changed\ Expr\n\ \ version\ 090619\ adopted\ changed\ Architecture\n\ \ version\ 090219\ adopted\ changed\ Architecture\n\ \ version\ 090218\ fixed\ genOutputVal\ for\ reg\=\=0\ and\ made\ use\ of\ centralized\ access\ level\ check\n\ \ version\ 090207\ added\ copyright\ notice\ and\ optimized\ assign\ structure\ to\ make\ use\ of\ changed\ Architecture\n\ \ version\ 080622\ made\ constNew\ protected\ to\ allow\ Clss/Intf\ access\ to\ it\n\ \ version\ 080616\ added\ compile-time-allocation\ for\ trivially\ initialized\ objects\n\ \ version\ 080614\ adopted\ changed\ Unit.searchVariable\n\ \ version\ 080613\ adopted\ hasEffect->effectType\n\ \ version\ 080202\ added\ support\ for\ alternate\ newInstance-signature\n\ \ version\ 071223\ added\ support\ for\ inner\ new\n\ \ version\ 070909\ optimized\ signature\ of\ Expr.resolve\n\ \ version\ 070727\ replaced\ exSubResolve\ by\ resolve\ as\ there\ is\ nothing\ done\ anymore\n\ \ version\ 070628\ adopted\ changes\ for\ "Expr\ extends\ TypeRef"\n\ \ version\ 070527\ added\ support\ for\ allocation\ of\ objects\ with\ inline\ arrays\n\ \ version\ 070513\ changed\ order\ of\ freeregs/instcontext-saving\ for\ optimizations\n\ \ version\ 070505\ adopted\ change\ in\ Architecture\n\ \ version\ 070303\ added\ support\ for\ indirect\ movable\ scalars\n\ \ version\ 070208\ fixed\ bug\ in\ array-allocation\n\ \ version\ 070114\ reduced\ access\ level\ where\ possible\n\ \ version\ 070111\ adapted\ change\ in\ printPos\ and\ compErr\n\ \ version\ 070108\ optimized\ static\ runtime\ call\n\ \ version\ 070106\ removed\ genOutputAddr\n\ \ version\ 070101\ adopted\ change\ in\ genCall\n\ \ version\ 061229\ removed\ access\ to\ firstInstr\n\ \ version\ 061203\ optimized\ calls\ to\ printPos\ and\ compErr\n\ \ version\ 061202\ adopted\ change\ of\ genCall\n\ \ version\ 061129\ static\ TypeRef\ object\ moved\ dynamically\ to\ Context\n\ \ version\ 061111\ bugfix\ if\ moveable\ code\n\ \ version\ 061102\ added\ support\ for\ structs\n\ \ version\ 061030\ changed\ detection\ of\ indirectCall\n\ \ version\ 060628\ added\ support\ for\ static\ compilation\n\ \ version\ 060616\ fixed\ genOutputVal\ for\ explicit\ constructors\n\ \ version\ 060607\ initial\ version\n
comment1.params=fid\ il\ ic
comment1.target=ExNew(int,\ int,\ int)
comment2.params=codePrnt
comment2.target=void\ printExpression(sjc.debug.CodePrinter)
comment3.params=unitContext\ mthdContext\ resolveFlags\ preferredType\ ctx
comment3.target=boolean\ resolve(sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.TypeRef,\ sjc.compbase.Context)
comment4.params=enclosingMthd\ unitContext\ mthdContext\ resolveFlags\ preferredType\ ctx
comment4.target=boolean\ resolve(sjc.compbase.Mthd,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.TypeRef,\ sjc.compbase.Context)
comment5.params=ctx
comment5.target=boolean\ isCompInitConstObject(sjc.compbase.Context)
comment6.params=ctx
comment6.target=sjc.compbase.ExConstInitObj\ getConstInitObj(sjc.compbase.Context)
comment7.params=reg\ ctx
comment7.target=void\ genOutputVal(int,\ sjc.compbase.Context)
comment8.params=reg\ outerClassReg\ ctx
comment8.target=void\ genOutputVal(int,\ int,\ sjc.compbase.Context)
numComments=9
