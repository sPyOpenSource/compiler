#BlueJ class context
comment0.target=Magic
comment0.text=\n\ Magic\:\ all\ the\ magic\ functionality\ used\ for\ system\ programming\n\ \n\ @author\ S.\ Frenz\n\ @version\ 160818\ added\ support\ for\ assembler\ text\ inling\n\ \ version\ 150922\ added\ support\ for\ inlineCodeAddress\n\ \ version\ 121029\ added\ error\ message\ for\ too\ many\ parameters\ in\ mthdOff-call\n\ \ version\ 120925\ added\ support\ for\ expression\ printer\n\ \ version\ 120228\ cleaned\ up\ "import\ sjc."\ typo\n\ \ version\ 120227\ cleaned\ up\ "package\ sjc."\ typo\n\ \ version\ 110626\ ordering\ static\ inits\ regarding\ type\ hierarchy\n\ \ version\ 101218\ adopted\ changed\ Pack/Unit\n\ \ version\ 101103\ respecting\ write\ once\ semantic\ in\ genOutputBtsMem\n\ \ version\ 101015\ adopted\ changed\ Expr\n\ \ version\ 100923\ enabled\ access\ to\ compressed\ image\ state\ variables\ even\ if\ no\ compressed\ image\ existing\ (then\ showing\ not-existing-values)\n\ \ version\ 100906\ made\ resolveClsDest\ re-resolvable\n\ \ version\ 100623\ enabled\ re-resolving\n\ \ version\ 100605\ fixed\ check\ in\ toXArray\n\ \ version\ 100602\ fixed\ comprImage\ check\ in\ access\ to\ comprRelocation\n\ \ version\ 100429\ split\ clssDesc\ into\ clssDesc\ and\ intfDesc\n\ \ version\ 100428\ added\ support\ for\ interface\ parameter\ in\ cast2Ref,\ fixed\ MA_ACCSD\ and\ interface-check\ in\ clssDesc\n\ \ version\ 100401\ got\ ignore\ and\ stopBlockCoding\ from\ Marker,\ added\ assign\n\ \ version\ 100115\ adopted\ codeStart-movement\n\ \ version\ 100114\ reorganized\ constant\ object\ handling\n\ \ version\ 100113\ added\ support\ for\ constant\ references\n\ \ version\ 091209\ added\ import\ of\ moved\ ExVal\n\ \ version\ 091102\ adopted\ changed\ storage\ of\ codeblocks\n\ \ version\ 091021\ adopted\ changed\ modifier\ declarations\n\ \ version\ 091013\ adopted\ changed\ method\ signature\ of\ genStore*\n\ \ version\ 091005\ adopted\ changed\ Expr\n\ \ version\ 091004\ replaced\ specialValue\ by\ relocation,\ fixed\ inlineVarOffset\ after\ memory\ interface\ changes\n\ \ version\ 091003\ replaced\ ramStart\ by\ ramLoc\n\ \ version\ 091001\ adopted\ changed\ memory\ interface,\ added\ support\ for\ embConstRAM-flag\n\ \ version\ 090724\ adopted\ changed\ Expr\n\ \ version\ 090718\ added\ support\ for\ non-static\ final\ variables,\ adopted\ changed\ Expr\n\ \ version\ 090625\ beautified\ error\ message\ for\ genInlineBlock\n\ \ version\ 090619\ adopted\ changed\ Architecture\n\ \ version\ 090616\ adopted\ changed\ ExVar\ and\ ExCall\n\ \ version\ 090409\ added\ archSpecialValue\ and\ comprArchSpecialValue\n\ \ version\ 090303\ adopted\ changed\ osio\ package\ structure\n\ \ version\ 090228\ added\ support\ for\ getNamedString\n\ \ version\ 090207\ added\ copyright\ notice\ and\ optimized\ assign\ structure\ to\ make\ use\ of\ changed\ Architecture\n\ \ version\ 081021\ added\ support\ for\ different\ memory\ locations\ in\ IOs\n\ \ version\ 080622\ added\ support\ for\ static\ code\ initialization,\ changed\ semantics\ of\ MAGIC.inlineVarOffset\n\ \ version\ 080614\ removed\ data-searching\ from\ inlineBlock-resolving\ (enough\ during\ genOutput)\n\ \ version\ 080613\ adopted\ hasEffect->effectType,\ added\ inlineBlock\n\ \ version\ 080405\ removed\ setStruct\ (with\ cast2Struct\ it\ is\ not\ needed\ anymore)\n\ \ version\ 080402\ moved\ final\ type\ check\ for\ 32\ bit\ cast2Obj/Struct\ to\ genOutputCast2ObjStruct\n\ \ version\ 080401\ added\ cast2Struct\ as\ special\ case\ of\ cast2Obj\n\ \ version\ 080331\ moved\ final\ type\ check\ for\ 32\ bit\ setStruct\ to\ genOutputSetStruct\n\ \ version\ 080119\ adopted\ changed\ signature\ of\ Expr.canGenAddr\n\ \ version\ 070929\ allowing\ cast2Ref\ for\ STRUCTs\n\ \ version\ 070912\ added\ inlineOffset\n\ \ version\ 070909\ optimized\ signature\ of\ Expr.resolve\n\ \ version\ 070829\ cleaned\ up\ magicType\ for\ variables,\ added\ toByte/CharArray\n\ \ version\ 070816\ added\ checks\ for\ constant\ parameter\ in\ MAGIC.addr\n\ \ version\ 070727\ adopted\ changed\ type\ of\ id\ from\ PureID\ to\ String\n\ \ version\ 070703\ added\ getConstMemorySize\n\ \ version\ 070628\ adopted\ changes\ for\ "Expr\ extends\ TypeRef",\ fixed\ arrDim-checking\n\ \ version\ 070617\ fixed\ multiple\ instruction\ inlines,\ added\ inline16\n\ \ version\ 070531\ adopted\ removal\ of\ Architecture.genLoadFromMem\n\ \ version\ 070527\ added\ support\ for\ inline\ array\ allocation\n\ \ version\ 070505\ adopted\ change\ in\ Architecture\n\ \ version\ 070331\ added\ special\ variable\ indirScalars\ and\ support\ for\ getInstIndirScalarSize\n\ \ version\ 070114\ reduced\ access\ level\ where\ possible\n\ \ version\ 070111\ adapted\ change\ in\ printPos\ and\ compErr\n\ \ version\ 061231\ prevention\ of\ automatic\ method\ inlining\ if\ inline\ code\ is\ used\n\ \ version\ 061229\ removed\ access\ to\ firstInstr\n\ \ version\ 061203\ optimized\ calls\ to\ printPos\ and\ compErr\n\ \ version\ 061129\ static\ TypeRef\ object\ moved\ dynamically\ to\ Context\n\ \ version\ 061128\ added\ support\ for\ embedded\ mode\n\ \ version\ 061107\ fixed\ setStruct\ to\ work\ with\ SSA\n\ \ version\ 061102\ added\ setStruct\n\ \ version\ 060818\ added\ compressedImageBase\n\ \ version\ 060707\ added\ inline32\n\ \ version\ 060629\ added\ several\ information-variables\n\ \ version\ 060628\ added\ support\ for\ static\ compilation\n\ \ version\ 060607\ initial\ version\n
comment1.params=ctx
comment1.target=Magic(sjc.compbase.Context)
comment10.params=obj\ call\ unitContext\ mthdContext\ resolveFlags\ preferredType\ ctx
comment10.target=sjc.compbase.expr.Expr\ resolveCast2ObjStruct(boolean,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.TypeRef,\ sjc.compbase.Context)
comment11.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment11.target=boolean\ resolveAddr(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment12.params=isIntf\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment12.target=boolean\ resolveClssIntfDesc(boolean,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment13.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment13.target=boolean\ resolveMthdOff(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment14.params=cmd\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment14.target=boolean\ resolveNoParam(java.lang.String,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment15.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment15.target=boolean\ resolveClsDest(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment16.params=isIO\ type\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment16.target=boolean\ resolveBtsMem(boolean,\ int,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment17.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment17.target=boolean\ resolveUseAsThis(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment18.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment18.target=boolean\ resolveInlineOffset(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment19.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment19.target=boolean\ resolveInlineCodeAddress(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment2.params=ex\ prnt
comment2.target=void\ printExpression(sjc.compbase.expr.Expr,\ sjc.debug.CodePrinter)
comment20.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment20.target=boolean\ resolveDoStaticInit(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment21.params=type\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment21.target=sjc.compbase.expr.Expr\ resolveStringToArray(int,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment22.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment22.target=sjc.compbase.expr.Expr\ resolveGetNamedString(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment23.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment23.target=boolean\ resolveAssign(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment24.params=type\ call\ ctx
comment24.target=void\ genOutputInline(int,\ expr.ExCall,\ sjc.compbase.Context)
comment25.params=call\ ctx
comment25.target=void\ genOutputInlineBlock(expr.ExCall,\ sjc.compbase.Context)
comment26.params=isIO\ type\ call\ ctx
comment26.target=void\ genOutputWMem(boolean,\ int,\ expr.ExCall,\ sjc.compbase.Context)
comment27.params=isIO\ reg\ type\ call\ ctx
comment27.target=void\ genOutputRMem(boolean,\ int,\ int,\ expr.ExCall,\ sjc.compbase.Context)
comment28.params=reg\ call\ ctx
comment28.target=void\ genOutputCast2Ref(int,\ expr.ExCall,\ sjc.compbase.Context)
comment29.params=reg\ call\ ctx
comment29.target=void\ genOutputCast2ObjStruct(int,\ expr.ExCall,\ sjc.compbase.Context)
comment3.params=ex\ unitContext\ mthdContext\ resolveFlags\ preferredType\ ctx
comment3.target=sjc.compbase.expr.Expr\ resolve(sjc.compbase.expr.Expr,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.TypeRef,\ sjc.compbase.Context)
comment30.params=reg\ call\ ctx
comment30.target=void\ genOutputAddr(int,\ expr.ExCall,\ sjc.compbase.Context)
comment31.params=reg\ call\ ctx
comment31.target=void\ genOutputClssDesc(int,\ expr.ExCall,\ sjc.compbase.Context)
comment32.params=reg\ call\ ctx
comment32.target=void\ genOutputMthdOff(int,\ expr.ExCall,\ sjc.compbase.Context)
comment33.params=reg\ ctx
comment33.target=void\ genOutputGetCodeOff(int,\ sjc.compbase.Context)
comment34.params=dest\ reg\ call\ ctx
comment34.target=void\ genOutputUnitProp(int,\ int,\ expr.ExCall,\ sjc.compbase.Context)
comment35.params=isIO\ type\ call\ ctx
comment35.target=void\ genOutputBtsMem(boolean,\ int,\ expr.ExCall,\ sjc.compbase.Context)
comment36.params=reg\ ctx
comment36.target=void\ genOutputGetRamAddr(int,\ sjc.compbase.Context)
comment37.params=reg\ ctx
comment37.target=void\ genOutputGetRamSize(int,\ sjc.compbase.Context)
comment38.params=reg\ ctx
comment38.target=void\ genOutputGetRamInitAddr(int,\ sjc.compbase.Context)
comment39.params=call\ ctx
comment39.target=void\ genOutputUseAsThis(expr.ExCall,\ sjc.compbase.Context)
comment4.params=reg\ ex\ ctx
comment4.target=void\ genOutput(int,\ sjc.compbase.expr.Expr,\ sjc.compbase.Context)
comment40.params=reg\ ctx
comment40.target=void\ genOutputGetConstMemorySize(int,\ sjc.compbase.Context)
comment41.params=call\ ctx
comment41.target=void\ genOutputInlineOffset(expr.ExCall,\ sjc.compbase.Context)
comment42.params=call\ ctx
comment42.target=void\ genOutputInlineCodeAddress(expr.ExCall,\ sjc.compbase.Context)
comment43.params=call\ ctx
comment43.target=void\ genOutputDoStaticInit(expr.ExCall,\ sjc.compbase.Context)
comment44.params=call\ ctx
comment44.target=void\ genAssign(expr.ExCall,\ sjc.compbase.Context)
comment5.params=type\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment5.target=boolean\ resolveInline(int,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment6.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment6.target=boolean\ resolveInlineBlock(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment7.params=isIO\ type\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment7.target=boolean\ resolveWMem(boolean,\ int,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment8.params=isIO\ type\ call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment8.target=boolean\ resolveRMem(boolean,\ int,\ expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
comment9.params=call\ unitContext\ mthdContext\ resolveFlags\ ctx
comment9.target=boolean\ resolveCast2Ref(expr.ExCall,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.Context)
numComments=45
