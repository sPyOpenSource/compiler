#BlueJ class context
comment0.target=JParser
comment0.text=\n\ JParser\:\ parser\ for\ the\ SJava-language\n\ \n\ @author\ S.\ Frenz\n\ @version\ 140507\ added\ support\ for\ RefToFlash\ annotation\n\ \ version\ 140124\ added\ support\ for\ Flash\ annotation\ at\ local\ variables\n\ \ version\ 121031\ fixed\ inner\ unit\ order\n\ \ version\ 121020\ fixed\ enhanced\ for\ loop\ for\ full\ qualified\ types\n\ \ version\ 120413\ added\ support\ for\ annotations\ at\ variable\ declarations\ inside\ method\ blocks\n\ \ version\ 120227\ cleaned\ up\ "package\ sjc."\ typo\n\ \ version\ 110705\ added\ support\ for\ additional\ semicolon\ after\ class\ declaration\ and\ alternative\ array\ dimension\ declaration\ for\ methods,\ inserted\ valid\ error\ message\ for\ local\ classes\ inside\ methods,\ made\ all\ top-level\ units\ static\n\ \ version\ 110626\ added\ support\ for\ multiple\ static\ init\ blocks\ per\ class\n\ \ version\ 110624\ doing\ package\ check\ even\ ignored\ units,\ too\n\ \ version\ 101222\ added\ SJC.GenDesc\n\ \ version\ 101125\ added\ NativeCallback\n\ \ version\ 101027\ adopted\ changed\ assign+op\ encoding\n\ \ version\ 101021\ added\ support\ for\ assert\ statement\ and\ SJC.CheckAssert\ annotation\n\ \ version\ 100924\ allowed\ dispensable\ semicolons\ between\ unit-fields\n\ \ version\ 100923\ allowed\ package\ private\ for\ inner\ units\n\ \ version\ 100902\ fixed\ modifier\ checks\ for\ inner\ interfaces\n\ \ version\ 100512\ adopted\ changed\ Modifier/Marks\n\ \ version\ 100510\ adopted\ changed\ ExClssMthdName\n\ \ version\ 100504\ adopted\ changed\ StBreakable\ structure,\ adopted\ changed\ ExClssMthdName\n\ \ version\ 100419\ added\ support\ for\ annotated\ parameters\ in\ method\ declarations\n\ \ version\ 100411\ added\ support\ for\ enhanced\ for\ loop\ syntax\ of\ jdk1.5\n\ \ version\ 100402\ replaced\ IGNORECLASS\ semantic\ by\ SJC.IgnoreUnit\ annotation\n\ \ version\ 100401\ added\ support\ for\ annotations\n\ \ version\ 091209\ adopted\ movement\ of\ Scanner\ to\ frontend\ package\n\ \ version\ 091208\ added\ support\ for\ array\ initialization\ in\ dynamic\ context\ and\ new\ with\ array\ initialization\n\ \ version\ 091123\ added\ support\ for\ trailing\ comma\ in\ array\ initialization,\ optimized\ arrayInit\n\ \ version\ 091116\ added\ support\ for\ empty\ array\ initialization\n\ \ version\ 091109\ removed\ optimization\ of\ outer-block\ list\ to\ support\ abbreviated\ block\ detection,\ added\ empty\ statement\ for\ potential\ switch-destinations\n\ \ version\ 091103\ fixed\ source\ hinting\ for\ expressions\ and\ expression\ lists\n\ \ version\ 091102\ added\ support\ for\ srcStart\ and\ srcLength\ filling\ in\ token\n\ \ version\ 091021\ adopted\ changed\ modifier\ declarations\n\ \ version\ 091018\ optimized\ implementation\ of\ stmt(.)\n\ \ version\ 091013\ giving\ each\ variable\ its\ own\ TypeRef\n\ \ version\ 090918\ added\ support\ for\ default\ modifier\ "package\ private"\n\ \ version\ 090916\ fixed\ valid\ modifiers\ for\ interface\ fields\ and\ methods\n\ \ version\ 090718\ added\ support\ for\ MF_WRITTEN\ flag\ for\ global\ variables\ and\ filled\ parameters,\ added\ support\ for\ final\ modifier\ for\ locals\ and\ params\n\ \ version\ 090616\ adopted\ changed\ ExVar\ and\ ExCall\n\ \ version\ 090506\ always\ inserting\ return-missing\ object,\ check\ for\ coding\ is\ done\ in\ StRetMissing\n\ \ version\ 090430\ added\ support\ for\ inserted\ "return\ missing"\ exceptions\n\ \ version\ 090306\ added\ naming\ for\ static\ init\ methods\n\ \ version\ 090221\ fixed\ default\ access\ level\ modifier\ for\ classes\ and\ interfaces\n\ \ version\ 090219\ optimized\ modifier\ checks\n\ \ version\ 090218\ added\ support\ for\ "synchronized"\ method\ and\ block\ modifier,\ changed\ modifier\ checks\ from\ opt-out\ to\ opt-in\n\ \ version\ 090207\ added\ copyright\ notice\n\ \ version\ 080622\ added\ support\ for\ static\ class\ initialization\n\ \ version\ 080619\ added\ throwUsed-setting\ for\ throw-statement\n\ \ version\ 080614\ allowed\ constant\ objects\ for\ interfaces\n\ \ version\ 080603\ added\ support\ for\ try-catch-finally\ statement\ and\ throws-declaration\n\ \ version\ 080506\ fixed\ setting\ of\ curMthd\ for\ var-init\n\ \ version\ 080118\ better\ comments,\ ignoring\ annotations\n\ \ version\ 080106\ added\ support\ for\ anonymous\ inner\ classes\n\ \ version\ 071222\ added\ support\ for\ inner\ units\n\ \ version\ 071004\ fixed\ interface\ field\ modifier\ check\n\ \ version\ 071001\ added\ support\ for\ "native"\ method\ modifier\n\ \ version\ 070918\ added\ support\ for\ multidimensional\ initialized\ arrays\n\ \ version\ 070917\ added\ support\ for\ optimized\ zero-initialization\ of\ local\ variables\n\ \ version\ 070913\ changed\ handling\ of\ declaration\ of\ local\ variables\n\ \ version\ 070910\ fixed\ ?\:-assoviativeness\n\ \ version\ 070909\ added\ support\ for\ labels\n\ \ version\ 070829\ detection\ of\ unsupported\ array\ declaration\ in\ interfaces\n\ \ version\ 070808\ added\ support\ for\ float\ and\ double\n\ \ version\ 070731\ changed\ QualID[]\ to\ QualIDList,\ adopted\ renaming\ of\ id\ to\ name\n\ \ version\ 070727\ adopted\ change\ of\ Mthd.id\ from\ PureID\ to\ String\n\ \ version\ 070628\ adopted\ changes\ for\ "Expr\ extends\ TypeRef",\ inserted\ abort\ if\ invalid\ ExEnc-expression\n\ \ version\ 070519\ moved\ setting\ of\ variable\ owner\ hereto\n\ \ version\ 070114\ reduced\ access\ level\ where\ possible,\ default\ modifier\ protected\ for\ clss-/intfFields\n\ \ version\ 070113\ fixed\ instanceof\ for\ arrays\n\ \ version\ 070106\ replaced\ array\ detection\n\ \ version\ 061228\ added\ method\ statement\ statistic\n\ \ version\ 061202\ minimal\ changes\n\ \ version\ 061129\ optimized\ assign/check-sequences\n\ \ version\ 061128\ added\ support\ for\ expression\ list\ in\ for\ loop\n\ \ version\ 061126\ added\ support\ for\ ?\:-operator\n\ \ version\ 061027\ moved\ addUnit\ to\ Context\n\ \ version\ 060623\ added\ progress\ bar\n\ \ version\ 060607\ initial\ version\n
comment1.params=is\ fileID\ ic
comment1.target=boolean\ tokenize(sjc.frontend.Scanner,\ int,\ sjc.compbase.Context)
comment10.params=c
comment10.target=boolean\ clssFields(Clss)
comment11.params=outer\ mod\ mark\ declSym\ syl\ syc
comment11.target=boolean\ innerUnit(JUnit,\ int,\ int,\ int,\ int,\ int)
comment12.params=outer\ inner
comment12.target=void\ insertInnerUnit(JUnit,\ JUnit)
comment13.params=
comment13.target=sjc.compbase.Param\ getParam()
comment14.params=mod\ anno\ retType\ inIntf\ syl\ syr
comment14.target=JMthd\ methodDecl(int,\ sjc.compbase.FilledAnno,\ sjc.compbase.TypeRef,\ boolean,\ int,\ int)
comment15.params=m
comment15.target=boolean\ fillMethodBlock(JMthd)
comment16.params=
comment16.target=sjc.compbase.ExArrayInit\ arrayInit()
comment17.params=owner\ mod\ anno\ varType
comment17.target=sjc.compbase.Vrbl\ varDecl(sjc.compbase.Unit,\ int,\ sjc.compbase.FilledAnno,\ sjc.compbase.TypeRef)
comment18.params=ip\ ii\ ia\ il\ ic
comment18.target=Intf\ intfDecl(sjc.compbase.QualID,\ sjc.compbase.QualIDList,\ int,\ int,\ int)
comment19.params=ip\ ii\ ia\ il\ ic
comment19.target=Anno\ annoDecl(sjc.compbase.QualID,\ sjc.compbase.QualIDList,\ int,\ int,\ int)
comment2.params=
comment2.target=boolean\ doTokenize()
comment20.params=c
comment20.target=boolean\ intfFields(Intf)
comment21.params=outer\ labels\ addReturnMissingStatement
comment21.target=StBlock\ stmtBlock(StBreakable,\ sjc.compbase.StringList,\ boolean)
comment22.params=outer\ noUnreadyExpr
comment22.target=Stmt\ stmt(StBreakable,\ boolean)
comment23.params=allowSpecialsOfForLoop
comment23.target=Stmt\ exprVarDecl(boolean)
comment24.params=ex
comment24.target=sjc.compbase.TypeRef\ getTypeRefOfStEx(sjc.compbase.Expr)
comment25.params=ss
comment25.target=boolean\ switchList(StSwitch)
comment26.params=
comment26.target=StExpr\ exprList()
comment27.params=t
comment27.target=boolean\ has(int)
comment28.params=t\ p
comment28.target=boolean\ has(int,\ int)
comment29.params=t
comment29.target=boolean\ lookAhead(int)
comment3.params=allowAllModifiers\ allowFinalModifier
comment3.target=boolean\ getModifier(boolean,\ boolean)
comment30.params=t\ p
comment30.target=boolean\ lookAhead(int,\ int)
comment31.params=
comment31.target=void\ accept()
comment32.params=t\ p
comment32.target=boolean\ accept(int,\ int)
comment33.params=msg
comment33.target=void\ parserError(java.lang.String)
comment34.params=msg
comment34.target=void\ parserWarning(java.lang.String)
comment35.params=
comment35.target=sjc.compbase.FilledParam\ getCallParam()
comment36.params=nob
comment36.target=boolean\ getNewArrayParam(ExNew)
comment37.params=id
comment37.target=java.lang.String\ intToHex(int)
comment38.params=
comment38.target=sjc.compbase.Expr\ getIDFragment()
comment39.params=ex
comment39.target=sjc.compbase.TypeRef\ getTypeRefOfExpr(sjc.compbase.Expr)
comment4.params=
comment4.target=java.lang.String\ ident()
comment40.params=acceptFurtherFragments
comment40.target=sjc.compbase.Expr\ getOperandFragment(boolean)
comment41.params=res
comment41.target=sjc.compbase.Expr\ appendDeRefArray(sjc.compbase.Expr)
comment42.params=
comment42.target=sjc.compbase.Expr\ getOperand()
comment43.params=
comment43.target=sjc.compbase.Expr\ getOperandClass()
comment44.params=
comment44.target=int\ getBinOperator()
comment45.params=
comment45.target=int\ getUnaOperator()
comment46.params=
comment46.target=int\ getPrePstOperator()
comment47.params=type\ par
comment47.target=int\ getRank(int,\ int)
comment48.params=ra1\ ra2
comment48.target=boolean\ lowerPrio(int,\ int)
comment49.params=
comment49.target=sjc.compbase.Expr\ expr()
comment5.params=type
comment5.target=sjc.compbase.QualID\ qualIdent(int)
comment6.params=
comment6.target=sjc.compbase.QualIDList\ qualIDList()
comment7.params=
comment7.target=int\ getArrDim()
comment8.params=voidOK\ checkArray
comment8.target=sjc.compbase.TypeRef\ typeRef(boolean,\ boolean)
comment9.params=ip\ ii\ imod\ imark\ il\ ic
comment9.target=Clss\ clssDecl(sjc.compbase.QualID,\ sjc.compbase.QualIDList,\ int,\ int,\ int,\ int)
numComments=50
