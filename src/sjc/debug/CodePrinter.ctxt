#BlueJ class context
comment0.target=CodePrinter
comment0.text=\n\ CodePrinter\:\ print\ supported\ statements\ and\ expressions\n\ \n\ @author\ S.\ Frenz\n\ @version\ 121029\ added\ support\ for\ multiple\ init-/lupd-statements\ in\ for-loop\n\ \ version\ 121020\ added\ "report\ block\ end"\ return\ value\ to\ stmtBlockStart\n\ \ version\ 121014\ added\ support\ for\ assert\ statement\n\ \ version\ 120924\ added\ support\ for\ expressions\n\ \ version\ 120923\ initial\ version\n
comment1.params=token\ error
comment1.target=void\ reportError(sjc.compbase.Token,\ java.lang.String)
comment10.params=var\ iter\ loStmt
comment10.target=void\ stmtForEnh(sjc.compbase.TokenAbstrPrintable,\ sjc.compbase.expr.Expr,\ sjc.compbase.TokenAbstrPrintable)
comment11.params=cond\ trStmt\ faStmt
comment11.target=void\ stmtIf(sjc.compbase.expr.Expr,\ sjc.compbase.TokenAbstrPrintable,\ sjc.compbase.TokenAbstrPrintable)
comment12.params=retVal
comment12.target=void\ stmtReturn(sjc.compbase.expr.Expr)
comment13.params=
comment13.target=void\ stmtReturnMissing()
comment14.params=cond
comment14.target=void\ stmtSwitchStart(sjc.compbase.expr.Expr)
comment15.params=cond
comment15.target=void\ stmtSwitchCase(sjc.compbase.expr.Expr)
comment16.params=
comment16.target=void\ stmtSwitchEnd()
comment17.params=syncObj\ syncBlock
comment17.target=void\ stmtSync(sjc.compbase.expr.Expr,\ sjc.compbase.TokenAbstrPrintable)
comment18.params=throwVal
comment18.target=void\ stmtThrow(sjc.compbase.expr.Expr)
comment19.params=tryBlock
comment19.target=void\ stmtTryStart(sjc.compbase.TokenAbstrPrintable)
comment2.params=cond\ msg
comment2.target=void\ stmtAssert(sjc.compbase.expr.Expr,\ sjc.compbase.expr.Expr)
comment20.params=catchVar\ catchBlock
comment20.target=void\ stmtTryCatch(sjc.compbase.variable.Vrbl,\ sjc.compbase.TokenAbstrPrintable)
comment21.params=finallyBlock
comment21.target=void\ stmtTryFinally(sjc.compbase.TokenAbstrPrintable)
comment22.params=varList\ varCount
comment22.target=void\ stmtVrbl(sjc.compbase.variable.Vrbl,\ int)
comment23.params=cond\ inclusiveWhile\ loStmt
comment23.target=void\ stmtWhile(sjc.compbase.expr.Expr,\ boolean,\ sjc.compbase.TokenAbstrPrintable)
comment24.params=type\ par
comment24.target=void\ exprArrayInit(sjc.compbase.TypeRef,\ sjc.compbase.FilledParam)
comment25.params=le\ ri\ opType\ opPar\ rank
comment25.target=void\ exprBin(sjc.compbase.expr.Expr,\ sjc.compbase.expr.Expr,\ int,\ int,\ int)
comment26.params=dest\ par
comment26.target=void\ exprCall(sjc.compbase.Mthd,\ sjc.compbase.FilledParam)
comment27.params=type\ asArray\ multArray\ callExplicitConstr\ destTypeUnit\ dest\ par
comment27.target=void\ exprNew(sjc.compbase.TypeRef,\ boolean,\ boolean,\ boolean,\ sjc.compbase.Unit,\ sjc.compbase.Mthd,\ sjc.compbase.FilledParam)
comment28.params=le\ ce\ ri
comment28.target=void\ exprChoose(sjc.compbase.expr.Expr,\ sjc.compbase.expr.Expr,\ sjc.compbase.expr.Expr)
comment29.params=destType
comment29.target=void\ exprClssName(sjc.compbase.TypeRef)
comment3.params=name
comment3.target=void\ blockLabel(java.lang.String)
comment30.params=constStruct
comment30.target=void\ exprConstStruct(sjc.compbase.expr.ExConstStruct)
comment31.params=le\ ind
comment31.target=void\ exprDeArray(sjc.compbase.expr.Expr,\ sjc.compbase.expr.Expr)
comment32.params=convertTo\ ex
comment32.target=void\ exprEnc(sjc.compbase.TypeRef,\ sjc.compbase.expr.Expr)
comment33.params=ex\ opPar\ pre
comment33.target=void\ exprPrePst(sjc.compbase.expr.Expr,\ int,\ boolean)
comment34.params=value
comment34.target=void\ exprString(java.lang.String)
comment35.params=ri
comment35.target=void\ exprSuper(sjc.compbase.expr.Expr)
comment36.params=ex\ opType\ opPar
comment36.target=void\ exprUna(sjc.compbase.expr.Expr,\ int,\ int)
comment37.params=dest\ id\ isThis
comment37.target=void\ exprVar(sjc.compbase.variable.AccVar,\ java.lang.String,\ boolean)
comment38.params=type\ intValue\ longValue
comment38.target=void\ exprVal(sjc.compbase.TypeRef,\ int,\ long)
comment39.params=le\ ri\ leftStatic
comment39.target=void\ exprDeref(sjc.compbase.expr.Expr,\ sjc.compbase.expr.Expr,\ boolean)
comment4.params=
comment4.target=boolean\ stmtBlockStart()
comment40.params=dest
comment40.target=void\ magcVar(sjc.compbase.variable.AccVar)
comment41.params=id\ par
comment41.target=void\ magcCall(java.lang.String,\ sjc.compbase.FilledParam)
comment42.params=unit\ mthd
comment42.target=void\ magcClssMthdName(sjc.compbase.Unit,\ sjc.compbase.Mthd)
comment5.params=
comment5.target=void\ stmtBlockEnd()
comment6.params=
comment6.target=void\ stmtEmpty()
comment7.params=contNotBreak\ labelToEnd
comment7.target=void\ stmtEndLoop(boolean,\ java.lang.String)
comment8.params=ex
comment8.target=void\ stmtExpr(sjc.compbase.expr.Expr)
comment9.params=init\ furtherInit\ lupd\ furtherLupd\ cond\ loStmt
comment9.target=void\ stmtFor(sjc.compbase.TokenAbstrPrintable,\ sjc.compbase.TokenAbstrPrintable[],\ sjc.compbase.TokenAbstrPrintable,\ sjc.compbase.TokenAbstrPrintable[],\ sjc.compbase.expr.Expr,\ sjc.compbase.TokenAbstrPrintable)
numComments=43
