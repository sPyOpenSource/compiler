#BlueJ class context
comment0.target=AsmOut
comment0.text=\n\ AsmOut\:\ basic\ functions\ for\ symbol\ information\ writer\n\ \n\ @author\ S.\ Frenz\n\ @version\ 190322\ fixed\ ex-/implicit\ conversion\n\ \ version\ 161212\ now\ always\ escaping\ '\ and\ "\n\ \ version\ 161117\ added\ MthdHead\n\ \ version\ 160328\ initial\ version\n
comment1.params=nextIsMthd
comment1.target=void\ setMthdFlag(boolean)
comment10.params=pointer
comment10.target=void\ printGeneralObjPtr(int)
comment11.params=pointer
comment11.target=void\ printRelocLabel(int)
comment12.params=pointer\ relocs
comment12.target=void\ printRelocs(int,\ int)
comment13.params=pointer
comment13.target=void\ printReloc(int)
comment14.params=pointer\ relocs\ unit
comment14.target=void\ printSClassDescRelocs(int,\ int,\ sjc.compbase.Unit)
comment15.params=pointer\ scalarSize\ unit\ withNames\ mthdPointerForScalarCalc
comment15.target=void\ printObjectScalars(int,\ int,\ sjc.compbase.Unit,\ boolean,\ int)
comment16.params=pointer\ scalarSize\ unit
comment16.target=void\ printSClassDescScalars(int,\ int,\ sjc.compbase.Unit)
comment17.params=what\ desiredByteLength
comment17.target=void\ printEscapedString(java.lang.String,\ int)
comment17.text=protected\ void\ printInlineArrayScalars(int\ pointer,\ int\ scalarSize,\ Unit\ unit)\ {\n\ \ \ \ int\ entrySize\=unit.inlArr.minSize;\n\ \ \ \ int\ entries\=(scalarSize-unit.instScalarTableSize)/entrySize;\n\ \ \ \ for\ (int\ i\=0;\ i<entries;\ i++)\ printValue(pointer,\ unit.instScalarTableSize+i*entrySize,\ entrySize);\n}
comment18.params=size
comment18.target=void\ printScalarDecl(int)
comment19.params=pointer\ size
comment19.target=void\ printScalar(int,\ int)
comment2.params=mem
comment2.target=void\ printHeader(sjc.memory.MemoryImage)
comment20.params=unit\ offset
comment20.target=sjc.compbase.Mthd\ searchMthd(sjc.compbase.Unit,\ int)
comment21.params=unit\ reqLocation\ offset\ searchParents
comment21.target=sjc.compbase.variable.AccVar\ searchVar(sjc.compbase.Unit,\ int,\ int,\ boolean)
comment3.params=now\ mthd
comment3.target=void\ printMthdHead(sjc.memory.MemoryObjectDebugInfo,\ sjc.compbase.Mthd)
comment4.params=now\ mthd
comment4.target=void\ printMthdTail(sjc.memory.MemoryObjectDebugInfo,\ sjc.compbase.Mthd)
comment5.params=filename\ ictx
comment5.target=AsmOut(java.lang.String,\ sjc.compbase.Context)
comment6.params=isDecompressor\ ramInitLoc\ ramSize\ constMemorySize
comment6.target=void\ globalRAMInfo(boolean,\ java.lang.Object,\ int,\ int)
comment7.params=mem
comment7.target=void\ listMemory(sjc.memory.MemoryImage)
comment8.params=
comment8.target=void\ finalizeImageInfo()
comment9.params=addr\ size
comment9.target=int\ getMemValue(int,\ int)
numComments=22
