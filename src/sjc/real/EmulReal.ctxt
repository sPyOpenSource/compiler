#BlueJ class context
comment0.target=EmulReal
comment0.text=\n\ EmulReal\:\ handle\ floating\ point\ numbers\ with\ integer\ operations\n\ \n\ @author\ S.\ Frenz\n\ @version\ 091005\ removed\ unneeded\ methods\n\ \ version\ 090207\ added\ copyright\ notice\n\ \ version\ 080712\ removed\ unneccessary\ type\ conversion\n\ \ version\ 080206\ fixed\ bug\ in\ buildFloat\ and\ buildDouble\ with\ mant\=\=0\n\ \ version\ 070824\ fixed\ bug\ in\ buildFloatFromDouble\n\ \ version\ 070817\ added\ getLongOf*\n\ \ version\ 070812\ added\ compareConst*\n\ \ version\ 070808\ initial\ version\n
comment1.params=mant\ base10exp
comment1.target=int\ buildFloat(long,\ int)
comment10.params=op
comment10.target=boolean\ isZeroFloat(int)
comment11.params=op1\ op2
comment11.target=int\ addFloat(int,\ int)
comment12.params=op1\ op2
comment12.target=int\ mulFloat(int,\ int)
comment13.params=op1\ op2
comment13.target=int\ divFloat(int,\ int)
comment14.params=le\ ri\ op
comment14.target=int\ compareConstFloat(int,\ int,\ int)
comment15.params=number
comment15.target=long\ getLongOfFloat(int)
comment16.params=mant\ base10exp
comment16.target=long\ buildDouble(long,\ int)
comment17.params=negative\ mant\ base2exp
comment17.target=long\ buildDouble(boolean,\ long,\ int)
comment18.params=op1\ op2\ op
comment18.target=long\ binOpDouble(long,\ long,\ int)
comment19.params=op
comment19.target=long\ negateDouble(long)
comment2.params=negative\ mant\ base2exp
comment2.target=int\ buildFloat(boolean,\ int,\ int)
comment20.params=op
comment20.target=boolean\ isNegativeDouble(long)
comment21.params=op
comment21.target=int\ getExponentDouble(long)
comment22.params=op
comment22.target=long\ getMantissaDouble(long)
comment23.params=op
comment23.target=boolean\ isNaNDouble(long)
comment24.params=op
comment24.target=boolean\ isInfiniteDouble(long)
comment25.params=op
comment25.target=boolean\ isZeroDouble(long)
comment26.params=op1\ op2
comment26.target=long\ addDouble(long,\ long)
comment27.params=op1\ op2
comment27.target=long\ mulDouble(long,\ long)
comment28.params=op1\ op2
comment28.target=long\ divDouble(long,\ long)
comment29.params=le\ ri\ op
comment29.target=int\ compareConstDouble(long,\ long,\ int)
comment3.params=op1\ op2\ op
comment3.target=int\ binOpFloat(int,\ int,\ int)
comment30.params=number
comment30.target=long\ getLongOfDouble(long)
comment31.params=number
comment31.target=int\ buildFloatFromDouble(long)
comment32.params=number
comment32.target=long\ buildDoubleFromFloat(int)
comment33.params=le\ ri
comment33.target=int\ compareHelperFloat(int,\ int)
comment34.params=le\ ri
comment34.target=int\ compareHelperDouble(long,\ long)
comment35.params=number
comment35.target=int\ bitsUsed(long)
comment36.params=number
comment36.target=int\ bitsUsed(int)
comment37.params=number\ shift
comment37.target=long\ shiftRounded64(long,\ int)
comment38.params=number\ shift
comment38.target=int\ shiftRounded32(int,\ int)
comment4.params=op1
comment4.target=int\ negateFloat(int)
comment5.params=op
comment5.target=boolean\ isNegativeFloat(int)
comment6.params=op
comment6.target=int\ getExponentFloat(int)
comment7.params=op
comment7.target=int\ getMantissaFloat(int)
comment8.params=op
comment8.target=boolean\ isNaNFloat(int)
comment9.params=op
comment9.target=boolean\ isInfiniteFloat(int)
numComments=39
