#BlueJ class context
comment0.target=MemoryImpl
comment1.params=objectType\ start
comment1.target=Mapping(java.lang.Class,\ int)
comment10.params=where\ what
comment10.target=void\ set8(int,\ byte)
comment10.text=\n\ @param\ where\ a\ 8-bit\ offset\ into\ this\ memory\n
comment11.params=where\ what
comment11.target=void\ set16(int,\ short)
comment12.params=where\ what
comment12.target=void\ set32(int,\ int)
comment13.params=where
comment13.target=byte\ get8(int)
comment14.params=where
comment14.target=short\ get16(int)
comment15.params=where
comment15.target=int\ get32(int)
comment16.params=array\ array_offset\ mem_offset\ len
comment16.target=void\ copyFromByteArray(byte[],\ int,\ int,\ int)
comment17.params=array\ array_offset\ mem_offset\ len
comment17.target=void\ copyToByteArray(byte[],\ int,\ int,\ int)
comment18.params=dst\ srcOffset\ dstOffset\ len
comment18.target=int\ copyToMemory(jx.zero.Memory,\ int,\ int,\ int)
comment19.params=src\ srcOffset\ dstOffset\ len
comment19.target=int\ copyFromMemory(jx.zero.Memory,\ int,\ int,\ int)
comment2.params=
comment2.target=MemoryImpl()
comment20.params=
comment20.target=int\ size()
comment21.params=
comment21.target=int\ getStartAddress()
comment22.params=where\ what
comment22.target=void\ littleSet32(int,\ int)
comment23.params=where
comment23.target=int\ littleGet32(int)
comment24.params=where
comment24.target=int\ getLittleEndian32(int)
comment25.params=where\ what
comment25.target=void\ setLittleEndian32(int,\ int)
comment26.params=where\ what
comment26.target=void\ littleSet16(int,\ short)
comment27.params=where
comment27.target=short\ littleGet16(int)
comment28.params=where
comment28.target=short\ getLittleEndian16(int)
comment29.params=where\ what
comment29.target=void\ setLittleEndian16(int,\ short)
comment3.params=size
comment3.target=MemoryImpl(int)
comment30.params=where
comment30.target=int\ getBigEndian32(int)
comment30.text=\ big\ endian\n\ @param\ where\n@return\ \ **
comment31.params=where\ what
comment31.target=void\ setBigEndian32(int,\ int)
comment32.params=where
comment32.target=short\ getBigEndian16(int)
comment33.params=where\ what
comment33.target=void\ setBigEndian16(int,\ short)
comment34.params=o\ objectType\ start\ createArrays
comment34.target=Mapping\ createMapping(java.lang.Object,\ java.lang.Class,\ int,\ boolean)
comment34.text=\n\ o\ must\ be\ \!\=\ null\ when\ createArrays\ is\ true\n
comment35.params=vmclass
comment35.target=java.lang.Object\ map(jx.zero.VMClass)
comment36.params=classname\ start
comment36.target=java.lang.Object\ map(java.lang.String,\ int)
comment37.params=mapping
comment37.target=void\ fillMapping(Mapping)
comment38.params=
comment38.target=void\ fillMappings()
comment39.params=mapping
comment39.target=void\ syncMapping(Mapping)
comment4.params=from\ to\ length
comment4.target=void\ copy(int,\ int,\ int)
comment40.params=
comment40.target=void\ syncMappings()
comment41.params=o\ start
comment41.target=void\ copyFromObject(jx.zero.MappedObject,\ int)
comment42.params=from\ to\ length
comment42.target=void\ coreCopy(int,\ int,\ int)
comment43.params=what\ offset\ length
comment43.target=void\ coreFill16(short,\ int,\ int)
comment44.params=where\ what
comment44.target=void\ coreSet8(int,\ byte)
comment45.params=where\ what
comment45.target=void\ coreSet16(int,\ short)
comment46.params=where\ what
comment46.target=void\ coreSet32(int,\ int)
comment47.params=where
comment47.target=byte\ coreGet8(int)
comment48.params=where
comment48.target=short\ coreGet16(int)
comment49.params=where
comment49.target=int\ coreGet32(int)
comment5.params=dst\ src\ count
comment5.target=void\ move(int,\ int,\ int)
comment50.params=start\ size
comment50.target=jx.zero.Memory\ getSubRange(int,\ int)
comment51.params=start\ size
comment51.target=jx.zero.ReadOnlyMemory\ getReadOnlySubRange(int,\ int)
comment52.params=atBeginning\ atEnd
comment52.target=jx.zero.Memory\ extendRange(int,\ int)
comment53.params=
comment53.target=jx.zero.Memory\ extendFullRange()
comment54.params=offset\ parts
comment54.target=void\ split2(int,\ jx.zero.Memory[])
comment55.params=offset\ size\ parts
comment55.target=void\ split3(int,\ int,\ jx.zero.Memory[])
comment56.params=
comment56.target=jx.zero.Memory\ joinPrevious()
comment57.params=
comment57.target=jx.zero.Memory\ joinNext()
comment58.params=
comment58.target=jx.zero.Memory\ joinAll()
comment59.params=
comment59.target=jx.zero.Memory\ revoke()
comment6.params=
comment6.target=void\ clear()
comment60.params=
comment60.target=jx.zero.Memory\ extendAndRevoke()
comment61.params=
comment61.target=int\ getOffset()
comment62.params=
comment62.target=boolean\ isValid()
comment63.params=o
comment63.target=boolean\ equals(java.lang.Object)
comment64.params=
comment64.target=java.lang.Object\ clone()
comment7.params=what\ offset\ length
comment7.target=void\ fill16(short,\ int,\ int)
comment8.params=what\ offset\ length
comment8.target=void\ fill8(byte,\ int,\ int)
comment9.params=what\ offset\ length
comment9.target=void\ fill32(int,\ int,\ int)
numComments=65
