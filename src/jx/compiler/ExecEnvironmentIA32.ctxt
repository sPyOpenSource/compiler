#BlueJ class context
comment0.target=ExecEnvironmentIA32
comment0.text=\n\n\ @author\ Christian\ Wawersich\n
comment1.params=classFinder\ opts
comment1.target=ExecEnvironmentIA32(ClassFinder,\ CompilerOptions)
comment10.params=
comment10.target=imcode.MethodStackFrame\ getMethodStackFrame()
comment11.params=
comment11.target=void\ addTimerSP()
comment12.params=
comment12.target=void\ addTimerEP()
comment13.params=cpEntry
comment13.target=symbols.SymbolTableEntryBase\ getStringRef(jx.classfile.constantpool.StringCPEntry)
comment14.params=cpEntry\ result\ bcPosition
comment14.target=void\ codeLoadStringRef(jx.classfile.constantpool.StringCPEntry,\ nativecode.Reg,\ int)
comment15.params=entries\ result\ datatype
comment15.target=void\ codeStackCleanup(int,\ nativecode.Reg,\ int)
comment16.params=entries\ result
comment16.target=void\ codeStackCleanupLong(int,\ nativecode.Reg64)
comment17.params=exception\ bcPosition\ back
comment17.target=symbols.UnresolvedJump\ createExceptionCall(int,\ int,\ symbols.UnresolvedJump)
comment17.text=\ \n\tmethods\ for\ exception\ managment\n\ @param\ exception\n\ @param\ bcPosition\n\ @param\ back\n\ @return\ \n
comment18.params=exception\ bcPosition
comment18.target=symbols.UnresolvedJump\ createExceptionCall(int,\ int)
comment19.params=
comment19.target=void\ codeExceptionCalls()
comment2.params=container
comment2.target=void\ setCodeContainer(imcode.CodeContainer)
comment20.params=fieldRefCPEntry
comment20.target=int\ getFieldOffset(jx.classfile.constantpool.FieldRefCPEntry)
comment21.params=method\ name\ sig
comment21.target=boolean\ isMethod(jx.classfile.constantpool.MethodRefCPEntry,\ java.lang.String,\ java.lang.String)
comment22.params=
comment22.target=void\ initPlugins()
comment23.params=className
comment23.target=plugins.CompilerPlugin\ findPlugin(java.lang.String)
comment3.params=aClass
comment3.target=void\ setCurrentlyCompiling(execenv.BCClass)
comment4.params=
comment4.target=execenv.CompilerOptionsInterface\ getCompilerOptions()
comment5.params=methodRefCPEntry
comment5.target=execenv.BCMethod\ getBCMethod(jx.classfile.constantpool.MethodRefCPEntry)
comment6.params=level
comment6.target=boolean\ doOptimize(int)
comment7.params=
comment7.target=int\ getExtraStackSpace()
comment8.params=
comment8.target=void\ codeProlog()
comment9.params=
comment9.target=void\ codeEpilog()
numComments=24
