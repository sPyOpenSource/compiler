#BlueJ class context
comment0.target=BinaryCode
comment0.text=\ \n\ \ \ \ BinaryCode\ is\ a\ class\ that\ generates\ and\ stores\ a\ compiled\n\ \ \ \ function.\ It\ is\ also\ responsible\ for\ resolving\ jumps\ and\ \n\ \ \ \ printing\ debugging\ output.\ \n\ \ \ \ It\ uses\ the\ classes\ from\ package\ i386\ to\ do\ this\ \n\ \ \ \ task.\ \n
comment1.params=code\ numBytes\ unresolvedAddr
comment1.target=BinaryCode(byte[],\ int,\ java.util.ArrayList)
comment1.text=\ \n\ \ \ \ \ \ Initialize\ this\ class\ with\ an\ already\ compiled\ \n\ \ \ \ \ \ code.\ This\ is\ not\ a\ clean\ design,\ but\ it\ is\ \n\ \ \ \ \ \ necessary\ for\ using\ preproc.BinaryCode.\ \n\ @param\ code\n\ @param\ numBytes\n\ @param\ unresolvedAddr\n
comment10.params=size
comment10.target=int\ allocateNativeCode(int)
comment10.text=\n\ allocate\ code\ memory\ \n\ @param\ size\ size\ of\ memory\ block\n\ @return\ handle\ to\ the\ memory\ block\ or\ -1\ if\ error\n
comment11.params=handle\ buffer\ off\ len
comment11.target=void\ writeNativeCode(int,\ byte[],\ int,\ int)
comment11.text=\n\ Write\ the\ native\ code\ into\ the\ memory\ assoziated\ with\ handle.\n\ @param\ handle\ Handle\ to\ native\ code\ memory\n
comment12.params=handle
comment12.target=int\ nativeCodeBase(int)
comment12.text=\n\ Get\ the\ base\ address\ of\ the\ native\ code\ memory.\n\ @param\ handle\ Handle\ to\ code\ memory.\n\ @return\ unsigned\ base\ address\ of\ native\ code\ memory,\ \n\ \ \ \ \ \ \ \ \ on\ 32-bit\ machines\ only\ the\ lower\ 32\ bits\ are\ used\n
comment13.params=handle
comment13.target=void\ freeNativeCode(int)
comment13.text=\n\ Free\ the\ native\ code\ memory.\n\ @param\ handle\ Handle\ to\ code\ memory.\n
comment14.params=classname\ methodname\ signature\ handle
comment14.target=void\ replugMethod(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment14.text=\n\ Replaces\ the\ method\ code\ with\ this\ native\ code.\n\ @param\ handle\ Handle\ to\ code\ memory.\n
comment15.params=classname\ methodname\ signature
comment15.target=void\ unplugMethod(java.lang.String,\ java.lang.String,\ java.lang.String)
comment15.text=\ \n\ \ \ \ \ \ Deactivate\ compiled\ code\ and\ use\ interpreted\ code\ for\ this\ \n\ \ \ \ \ \ method.\ \n\ @param\ classname\n\ @param\ methodname\n\ @param\ signature\n
comment2.params=classname\ methodname\ signature
comment2.target=void\ install(java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\ \n\ \ \ \ \ \ Install\ the\ compiled\ method\ in\ metaXa.\ \n\ @param\ classname\n\ @param\ methodname\n\ @param\ signature\n
comment3.params=
comment3.target=byte[]\ getCode()
comment4.params=
comment4.target=int\ getNumCodeBytes()
comment5.params=
comment5.target=java.util.ArrayList\ getUnresolvedAddresses()
comment6.params=codeStartAddress
comment6.target=void\ resolveAddresses(int)
comment6.text=\ \n\ \ \ \ \ \ @param\ codeStartAddress\ address\ of\ the\ compiled\ code\ in\ the\ memory\ \n\ \ \ \ \ \ @see\ nativecode.BinaryCode.addInstrCall\n
comment7.params=firstByte\ stopByte
comment7.target=java.lang.String\ getBinaryCodeAsHex(int,\ int)
comment8.params=
comment8.target=java.lang.String\ getBinaryCodeAsHex()
comment9.params=
comment9.target=java.lang.String\ getJumpTableDesc()
numComments=16
