#BlueJ class context
comment0.target=BCMethod
comment0.text=\ \n\ \ \ \ This\ class\ represents\ a\ Java\ method\ without\ its\ bytecode.\ \n\ \ \ \ If\ you\ need\ a\ Java\ method\ with\ bytecode\ (e.g.\ for\ \n\ \ \ \ translating\ it),\ take\ the\ subclass\ of\ BCMethod,\ BCMethodWithCode.\ \n\ \ \ \ This\ class\ is\ used\ for\ tasks\ where\ the\ code\ isn't\ required,\ e.g.\ \n\ \ \ \ for\ testing\ if\ a\ method\ is\ 'inlineable'.\ \n
comment1.params=methodSource
comment1.target=BCMethod(jx.classfile.MethodSource)
comment10.params=
comment10.target=java.lang.String\ getClassName()
comment11.params=
comment11.target=java.lang.String\ toString()
comment12.params=
comment12.target=int[]\ getArgumentTypes()
comment13.params=
comment13.target=int\ getReturnType()
comment14.params=
comment14.target=boolean\ returnsReference()
comment15.params=
comment15.target=jx.classfile.LineAttributeData[]\ getLineNumberTable()
comment16.params=bytecodePosition
comment16.target=int\ getLineNumber(int)
comment17.params=type
comment17.target=jx.classfile.VerifyResult\ getVerifyResult(int)
comment2.params=
comment2.target=boolean\ isStatic()
comment3.params=
comment3.target=boolean\ isConstructor()
comment4.params=
comment4.target=boolean\ isAbstract()
comment5.params=
comment5.target=boolean\ isOverrideable()
comment6.params=
comment6.target=boolean\ isSmallEnoughForInlining()
comment7.params=
comment7.target=java.lang.String\ getSignature()
comment8.params=
comment8.target=java.lang.String\ getName()
comment9.params=
comment9.target=boolean\ isNative()
numComments=18
