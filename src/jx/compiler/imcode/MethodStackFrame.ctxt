#BlueJ class context
comment0.target=MethodStackFrame
comment1.params=code\ method
comment1.target=MethodStackFrame(jx.compiler.nativecode.BinaryCodeIA32,\ jx.compiler.execenv.BCMethod)
comment10.params=
comment10.target=int\ getStackFrameSize()
comment10.text=\n\ \ \ \ \ \ \ Groesse\ des\ Methoden\ Frames\ ohne\ dem\ Operantenstack\n\ @return\ \n
comment11.params=
comment11.target=int\ getNumArgs()
comment12.params=
comment12.target=int\ getNumLocalVars()
comment13.params=
comment13.target=int\ getNumBlockVars()
comment14.params=
comment14.target=int\ getNumTempSlots()
comment15.params=
comment15.target=int\ getStackMapSize()
comment16.params=
comment16.target=int\ getVarMapSize()
comment17.params=
comment17.target=int\ getLVarMapSize()
comment18.params=
comment18.target=int\ getOprMapSize()
comment19.params=
comment19.target=java.lang.String\ varList()
comment2.params=value
comment2.target=void\ setExtraSpace(int)
comment20.params=
comment20.target=boolean[]\ getLVarMap()
comment21.params=
comment21.target=boolean[]\ getVarMap()
comment22.params=
comment22.target=boolean[]\ getOprMap()
comment23.params=
comment23.target=boolean[]\ getStackMap()
comment24.params=
comment24.target=LocalVariable[]\ getLocalVars()
comment24.text=\n\ \ \ \ \ \ \ local\ variables\n\ @return\ \n
comment25.params=varIndex
comment25.target=void\ setLocalSlotNotConstant(int)
comment26.params=varIndex\ datatype
comment26.target=LocalVariable\ getLocalVar(int,\ int)
comment27.params=datatype
comment27.target=int\ getNewLocalVar(int)
comment28.params=
comment28.target=int\ start()
comment28.text=\n\ \ \ \ \ \ operanten\ stack\n
comment29.params=datatype\ operant
comment29.target=void\ push(int,\ jx.compiler.nativecode.Opr)
comment3.params=
comment3.target=int\ getExtraSpace()
comment30.params=reg
comment30.target=void\ push(jx.compiler.nativecode.RegObj)
comment31.params=datatype\ immd
comment31.target=void\ push(int,\ int)
comment32.params=datatype\ entry
comment32.target=void\ push(int,\ jx.compiler.symbols.SymbolTableEntryBase)
comment33.params=
comment33.target=void\ pushfl()
comment34.params=reg
comment34.target=void\ pop(jx.compiler.nativecode.Reg)
comment35.params=
comment35.target=void\ popfl()
comment36.params=number
comment36.target=void\ clearStack(int)
comment37.params=entries
comment37.target=void\ cleanup(int)
comment38.params=datatype
comment38.target=void\ pushOperant(int)
comment39.params=number
comment39.target=void\ popOperants(int)
comment4.params=code
comment4.target=void\ initReferences(jx.compiler.nativecode.BinaryCodeIA32)
comment40.params=datatype\ varIndex
comment40.target=LocalVariable\ getBlockSlot(int,\ int)
comment40.text=\n\ \ \ \ \ \ block\ varibalen\n
comment41.params=datatype
comment41.target=LocalVariable\ getFreeTempSlot(int)
comment42.params=
comment42.target=void\ freeAllTemps()
comment43.params=slot
comment43.target=void\ freeSlot(LocalVariable)
comment44.params=
comment44.target=java.lang.String\ varMapToString()
comment45.params=
comment45.target=java.lang.String\ stackMapToString()
comment46.params=stype
comment46.target=int\ nextOffset(int)
comment46.text=\n\ \ \ \ \ \ \ helpers\n
comment47.params=
comment47.target=void\ computeStackLayout()
comment5.params=code
comment5.target=void\ addInitLocalSlots(jx.compiler.nativecode.BinaryCodeIA32)
comment6.params=slot
comment6.target=int\ getOffset(LocalVariable)
comment7.params=
comment7.target=jx.compiler.symbols.MaxFrameSizeSTEntry\ getMaxFrameSizeSTEntry()
comment7.text=\n\ \ \ \ \ \ \ size\ and\ infos\ about\ the\ stack\ frame\n\ @return\ \n
comment8.params=
comment8.target=int\ getMaxFrameSize()
comment8.text=\n\ \ \ \ \ \ \ Maximale\ noch\ benoetigte\ Stackgroesse\ \n\ @return\ \n
comment9.params=
comment9.target=jx.compiler.symbols.AllocSTEntry\ getAllocSTEntry()
numComments=48
