#BlueJ class context
comment0.target=CodeContainer
comment1.params=
comment1.target=JumpStack()
comment10.params=
comment10.target=java.lang.String\ getClassName()
comment11.params=
comment11.target=java.lang.String\ getMethodName()
comment12.params=
comment12.target=jx.compiler.StatisticInfo\ getStatisticInfo()
comment13.params=
comment13.target=ExecEnvironmentInterface\ getExecEnv()
comment14.params=
comment14.target=jx.compiler.execenv.CompilerOptionsInterface\ getOpts()
comment15.params=
comment15.target=MethodStackFrame\ getMethodStackFrame()
comment16.params=
comment16.target=int\ getLocalVarSize()
comment17.params=
comment17.target=jx.classfile.constantpool.ConstantPool\ getConstantPool()
comment18.params=
comment18.target=jx.compiler.nativecode.BinaryCodeIA32\ getIA32Code()
comment19.params=
comment19.target=jx.compiler.nativecode.RegManager\ getRegManager()
comment2.params=node
comment2.target=void\ push(graph.IMBasicBlock)
comment20.params=
comment20.target=jx.compiler.execenv.BinaryCode\ getMachineCode()
comment21.params=
comment21.target=java.util.ArrayList\ getInstructionTable()
comment22.params=
comment22.target=int\ getNumberOfBasicBlocks()
comment23.params=
comment23.target=graph.IMBasicBlock\ getEpilog()
comment24.params=
comment24.target=boolean\ isSmallMethod()
comment25.params=
comment25.target=boolean\ isLeafMethod()
comment26.params=bcStream
comment26.target=void\ readBCInstruction(jx.compiler.execenv.BytecodeInputStream)
comment27.params=basicblock
comment27.target=void\ moveBasicBlockToEnd(graph.IMNode)
comment28.params=bvar
comment28.target=void\ optPatternBlockVar(graph.inst.IMStoreBlockVariable)
comment28.text=\n\ \ \ \ \ \ b0\ \=\ ...\ ;\n
comment29.params=node
comment29.target=void\ join(graph.IMNode)
comment3.params=
comment3.target=graph.IMBasicBlock\ pop()
comment30.params=
comment30.target=graph.IMNode\ top()
comment31.params=curr
comment31.target=graph.IMNode\ next(graph.IMNode)
comment32.params=curr
comment32.target=graph.IMNode\ prev(graph.IMNode)
comment33.params=
comment33.target=graph.IMNode\ end()
comment34.params=curr\ entry
comment34.target=void\ insertBefore(graph.IMNode,\ graph.IMNode)
comment35.params=curr\ entry
comment35.target=void\ insertBehind(graph.IMNode,\ graph.IMNode)
comment36.params=depth
comment36.target=void\ inlineMethods(int)
comment36.text=\n\ @param\ depth\n\ @throws\ jx.compiler.CompileException\n
comment37.params=depth\ forceInline
comment37.target=void\ inlineMethods(int,\ boolean)
comment38.params=newContainer\ slots\ opr\ retval\ bcPos
comment38.target=graph.IMNode\ transformSmallMethodForInline(CodeContainer,\ int[],\ graph.IMOperant[],\ int,\ int)
comment38.text=\n\ \ \ \ public\ IMNode\ inlineSmallMethod()\ {\n\ \ \ \ IMNode\ node\ \=\ imCodeStart;\n\ \ \ \ if\ (node\=\=null\ ||\ node.next\=\=null)\ {\n\ \ \ \ \ \ \ \ throw\ new\ Error("this\ is\ not\ a\ small\ method");\n\ \ \ \ }\n\ \ \ \ return\ (IMNode)node.next;\n\ \ \ \ }\n
comment39.params=newContainer\ slots\ opr\ retval\ bcPos
comment39.target=void\ transformForInline(CodeContainer,\ int[],\ graph.IMOperant[],\ int,\ int)
comment4.params=execEnv\ method
comment4.target=CodeContainer(ExecEnvironmentInterface,\ jx.compiler.execenv.BCMethodWithCode)
comment40.params=
comment40.target=void\ constant_forwarding()
comment41.params=
comment41.target=void\ translate()
comment42.params=
comment42.target=graph.IMNode\ getTop()
comment43.params=
comment43.target=graph.IMNode\ getEnd()
comment44.params=
comment44.target=graph.IMNode\ first()
comment45.params=
comment45.target=graph.IMNode\ last()
comment46.params=
comment46.target=graph.IMNode\ next()
comment47.params=
comment47.target=graph.IMNode\ prev()
comment48.params=
comment48.target=graph.IMNode\ current()
comment49.params=
comment49.target=void\ remove()
comment5.params=execEnv\ method\ stat
comment5.target=CodeContainer(ExecEnvironmentInterface,\ jx.compiler.execenv.BCMethodWithCode,\ jx.compiler.StatisticInfo)
comment50.params=node
comment50.target=void\ insertBefor(graph.IMNode)
comment51.params=node
comment51.target=void\ insertTop(graph.IMNode)
comment52.params=node
comment52.target=void\ append(graph.IMNode)
comment53.params=
comment53.target=boolean\ hasMore()
comment54.params=outStream
comment54.target=void\ writeCode(java.io.PrintStream)
comment55.params=outStream
comment55.target=void\ writeStatistics(java.io.PrintStream)
comment56.params=node
comment56.target=void\ insertBCList(graph.IMNode)
comment57.params=ip\ offset
comment57.target=graph.IMBasicBlock\ createBasicBlock(int,\ int)
comment6.params=
comment6.target=void\ setNoTranslate()
comment7.params=
comment7.target=int\ getID()
comment8.params=
comment8.target=void\ init()
comment9.params=
comment9.target=jx.compiler.execenv.BCMethod\ getBCMethod()
numComments=58
