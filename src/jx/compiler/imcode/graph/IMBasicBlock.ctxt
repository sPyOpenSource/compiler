#BlueJ class context
comment0.target=IMBasicBlock
comment1.params=container\ epilog
comment1.target=IMBasicBlock(jx.compiler.imcode.CodeContainer,\ boolean)
comment10.params=
comment10.target=IMBasicBlock[]\ getSucc()
comment11.params=stack
comment11.target=void\ processBasicBlock(jx.compiler.imcode.VirtualOperantenStack)
comment12.params=
comment12.target=boolean\ isSubroutine()
comment13.params=
comment13.target=IMOperant[]\ getLeaveStack()
comment14.params=msg
comment14.target=void\ setDebugString(java.lang.String)
comment15.params=
comment15.target=java.lang.String\ getDebugString()
comment16.params=
comment16.target=java.lang.String\ toString()
comment17.params=
comment17.target=java.lang.String\ toLabel()
comment18.params=
comment18.target=jx.compiler.symbols.UnresolvedJump\ getNewJumpTarget()
comment18.text=@Override\n\ \ \ \ public\ String\ toString()\ {\n\ \ \ \ return\ super.toString()\ +\ "B\ \#"\ +\ Integer.toString(counter);\n}
comment19.params=jumpTarget
comment19.target=void\ removeJumpTarget(jx.compiler.symbols.UnresolvedJump)
comment2.params=container\ bcPosition
comment2.target=IMBasicBlock(jx.compiler.imcode.CodeContainer,\ int)
comment20.params=newContainer\ slots\ opr\ retval\ bcPos
comment20.target=IMNode\ assignNewVars(jx.compiler.imcode.CodeContainer,\ int[],\ IMOperant[],\ int,\ int)
comment21.params=
comment21.target=void\ constant_forwarding()
comment22.params=result
comment22.target=void\ translate(jx.compiler.nativecode.Reg)
comment3.params=handler
comment3.target=void\ setExceptionHandler(jx.compiler.symbols.ExceptionTableSTEntry)
comment4.params=
comment4.target=boolean\ isEpilog()
comment5.params=
comment5.target=boolean\ isLoopEntry()
comment6.params=flag
comment6.target=void\ setLoopEntry(boolean)
comment7.params=
comment7.target=boolean\ isLastBasicBlock()
comment8.params=
comment8.target=void\ incCounter()
comment9.params=stack
comment9.target=void\ setInitStack(IMOperant[])
numComments=23
