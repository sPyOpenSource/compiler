#BlueJ class context
comment0.target=IMNode
comment1.params=
comment1.target=IMNode()
comment1.text=init\ ************************
comment10.params=
comment10.target=inst.IMConstant\ nodeToConstant()
comment11.params=
comment11.target=boolean\ isBranch()
comment12.params=
comment12.target=boolean\ isReturnSubroutine()
comment13.params=
comment13.target=boolean\ isReturn()
comment14.params=
comment14.target=boolean\ isVariable()
comment15.params=
comment15.target=boolean\ isBlockVariable()
comment16.params=
comment16.target=boolean\ isThrow()
comment17.params=
comment17.target=boolean\ isComperator()
comment18.params=
comment18.target=boolean\ isThisPointer()
comment19.params=
comment19.target=boolean\ isBinaryOperator()
comment2.params=container
comment2.target=IMNode(jx.compiler.imcode.CodeContainer)
comment20.params=
comment20.target=jx.compiler.execenv.CompilerOptionsInterface\ getCompilerOptions()
comment21.params=
comment21.target=boolean\ hasConstant()
comment22.params=
comment22.target=boolean\ isSubOrAdd()
comment23.params=
comment23.target=boolean\ isDivOrMult()
comment24.params=
comment24.target=void\ setLowPriorityPath()
comment25.params=
comment25.target=boolean\ isLowPriorityPath()
comment26.params=
comment26.target=boolean\ isEndOfBasicBlock()
comment27.params=
comment27.target=int\ getDatatype()
comment28.params=
comment28.target=java.lang.String\ debugInfo()
comment28.text=public\ String\ toReadableString()\ {\n\treturn\ "<unkown\ node>";\n}
comment29.params=txt
comment29.target=void\ addDebugInfo(java.lang.String)
comment3.params=container
comment3.target=void\ init(jx.compiler.imcode.CodeContainer)
comment30.params=
comment30.target=int\ getBCPosition()
comment31.params=frame
comment31.target=void\ saveVarStackMap(jx.compiler.imcode.MethodStackFrame)
comment32.params=
comment32.target=boolean[]\ getVarStackMap()
comment33.params=
comment33.target=java.lang.String\ getVarStackMapString()
comment34.params=
comment34.target=int\ getNrRegs()
comment35.params=vars
comment35.target=void\ getCollectVars(java.util.ArrayList)
comment36.params=
comment36.target=java.lang.String\ varList()
comment37.params=
comment37.target=java.lang.String\ getVarInfo()
comment38.params=
comment38.target=java.lang.String\ getLineInfo()
comment39.params=
comment39.target=int\ getBytecode()
comment4.params=
comment4.target=int\ getTag()
comment4.text=\ TAGS\n@return\ \ ************************
comment40.params=stack\ basicBlock
comment40.target=IMNode\ processStack(jx.compiler.imcode.VirtualOperantenStack,\ IMBasicBlock)
comment41.params=
comment41.target=IMNode\ constant_folding()
comment42.params=varList
comment42.target=IMNode\ constant_forwarding(IMNodeList)
comment43.params=iCode\ depth\ forceInline
comment43.target=IMNode\ inlineCode(jx.compiler.imcode.CodeVector,\ int,\ boolean)
comment44.params=newContainer\ slots\ opr\ retval\ bcPos
comment44.target=IMNode\ assignNewVars(jx.compiler.imcode.CodeContainer,\ int[],\ IMOperant[],\ int,\ int)
comment45.params=
comment45.target=java.lang.String\ whichCodeContainer()
comment46.params=
comment46.target=java.lang.String\ toString()
comment47.params=
comment47.target=void\ translateToPush()
comment47.text=\ compile\n@throws\ jx.compiler.CompileException\ *************************
comment48.params=result
comment48.target=void\ translate(jx.compiler.nativecode.RegObj)
comment49.params=result
comment49.target=void\ translate(jx.compiler.nativecode.Reg)
comment5.params=
comment5.target=boolean\ isBasicBlock()
comment50.params=result
comment50.target=void\ translate(jx.compiler.nativecode.Reg64)
comment51.params=result
comment51.target=void\ translateLong(jx.compiler.nativecode.Reg64)
comment52.params=result
comment52.target=void\ translateFloat(jx.compiler.nativecode.RegFloat)
comment53.params=result
comment53.target=void\ translateDouble(jx.compiler.nativecode.RegDouble)
comment6.params=
comment6.target=boolean\ isOperator()
comment7.params=
comment7.target=boolean\ isInstruction()
comment8.params=
comment8.target=boolean\ isConstant()
comment9.params=
comment9.target=boolean\ isRealConstant()
numComments=54
