#BlueJ class context
comment0.target=Memory
comment1.params=where\ what
comment1.target=void\ set8(int,\ byte)
comment1.text=\n\ @param\ where\ a\ 8-bit\ offset\ into\ this\ memory\n\ @param\ what\n
comment10.params=offset\ parts
comment10.target=void\ split2(int,\ Memory[])
comment10.text=------------------\ split\ &\ join\ ----------------------------------
comment11.params=offset\ size\ parts
comment11.target=void\ split3(int,\ int,\ Memory[])
comment12.params=start\ size
comment12.target=Memory\ getSubRange(int,\ int)
comment13.params=
comment13.target=Memory\ joinPrevious()
comment14.params=
comment14.target=Memory\ joinNext()
comment15.params=
comment15.target=Memory\ joinAll()
comment16.params=vmclass
comment16.target=java.lang.Object\ map(VMClass)
comment16.text=\ Map\ part\ of\ this\ memory\ to\ an\ object.\n\ The\ state\ of\ the\ memory\ is\ initialized\ with\ the\ contents\n\ of\ this\ Memory\ object.\n\ @param\ vmclass\ name\ of\ the\ mapped\ object's\ class\n\ @return\ \n
comment17.params=
comment17.target=Memory\ revoke()
comment17.text=\n\ Revoke\ access\ to\ this\ memory.\n\ All\ previously\ obtained\ references\ to\ this\ memory\ become\ invalid.\n\ @return\ a\ new\ valid\ reference\ to\ the\ memory\n
comment18.params=
comment18.target=boolean\ isValid()
comment19.params=from\ to\ length
comment19.target=void\ copy(int,\ int,\ int)
comment2.params=where\ what
comment2.target=void\ set16(int,\ short)
comment2.text=\n\ @param\ where\ is\ a\ 16-bit\ offset\n\ @param\ what\n
comment20.params=dst\ src\ count
comment20.target=void\ move(int,\ int,\ int)
comment21.params=what\ offset\ length
comment21.target=void\ fill16(short,\ int,\ int)
comment22.params=what\ offset\ length
comment22.target=void\ fill32(int,\ int,\ int)
comment23.params=
comment23.target=void\ clear()
comment3.params=where\ what
comment3.target=void\ set32(int,\ int)
comment3.text=\n\ @param\ where\ is\ a\ 32-bit\ offset\n\ @param\ what\n
comment4.params=offset\ value
comment4.target=void\ setLittleEndian32(int,\ int)
comment4.text=\n\ @param\ offset\ is\ a\ 8-bit\ offset\ (need\ not\ be\ aligned)\n\ @param\ value\n
comment5.params=offset\ value
comment5.target=void\ setLittleEndian16(int,\ short)
comment5.text=\n\ @param\ offset\ is\ a\ 8-bit\ offset\ (need\ not\ be\ aligned)\n\ @param\ value\n
comment6.params=offset\ value
comment6.target=void\ setBigEndian32(int,\ int)
comment6.text=\n\ @param\ offset\ is\ a\ 8-bit\ offset\ (need\ not\ be\ aligned)\n\ @param\ value\n
comment7.params=offset\ value
comment7.target=void\ setBigEndian16(int,\ short)
comment7.text=\n\ @param\ offset\ is\ a\ 8-bit\ offset\ (need\ not\ be\ aligned)\n\ @param\ value\n
comment8.params=array\ array_offset\ mem_offset\ len
comment8.target=void\ copyFromByteArray(byte[],\ int,\ int,\ int)
comment9.params=src\ srcOffset\ dstOffset\ len
comment9.target=int\ copyFromMemory(Memory,\ int,\ int,\ int)
numComments=24
