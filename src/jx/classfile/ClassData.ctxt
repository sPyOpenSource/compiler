#BlueJ class context
comment0.target=ClassData
comment0.text=\ \n\ \ All\ data\ about\ a\ class,\ that\ can\ be\ found\ \n\ \ in\ a\ class\ file.\ This\ is\ a\ rather\ passive\ class.\ \n\ \ It\ only\ reads\ the\ data\ from\ the\ class\ file\ and\ \n\ \ stores\ it.\ \n
comment1.params=
comment1.target=int\ getThisClassCPIndex()
comment10.params=input
comment10.target=void\ readFromClassFile(java.io.DataInput)
comment11.params=input\ cPool
comment11.target=void\ readAttribute(java.io.DataInput,\ constantpool.ConstantPool)
comment12.params=accessFlags
comment12.target=java.lang.String\ getAccessFlagsString(int)
comment13.params=
comment13.target=int\ getAccessFlags()
comment14.params=
comment14.target=java.lang.String\ getClassName()
comment15.params=
comment15.target=java.lang.String\ getSuperClassName()
comment16.params=
comment16.target=java.lang.String[]\ getInterfaceNames()
comment17.params=
comment17.target=FieldData[]\ getFields()
comment18.params=
comment18.target=java.lang.String\ getSourceFileAttribute()
comment19.params=
comment19.target=void\ dump()
comment2.params=input
comment2.target=ClassData(java.io.DataInput)
comment20.params=
comment20.target=java.lang.String\ getJavaLanguageName()
comment21.params=
comment21.target=FieldData[]\ getDeclaredFields()
comment21.text=\ ------\n\ Java\ Reflection\ "compatible"\ methods\n
comment22.params=
comment22.target=java.lang.String\ getName()
comment23.params=
comment23.target=MethodSource[]\ getMethods()
comment24.params=name
comment24.target=FieldData\ getField(java.lang.String)
comment25.params=
comment25.target=boolean\ isPublic()
comment26.params=
comment26.target=boolean\ isPrivate()
comment27.params=
comment27.target=boolean\ isProtected()
comment28.params=
comment28.target=boolean\ isStatic()
comment29.params=
comment29.target=boolean\ isFinal()
comment3.params=input\ allowNative
comment3.target=ClassData(java.io.DataInput,\ boolean)
comment30.params=
comment30.target=boolean\ isAbstract()
comment31.params=
comment31.target=boolean\ isNative()
comment32.params=
comment32.target=boolean\ isSynchronized()
comment33.params=
comment33.target=boolean\ isInterface()
comment34.params=
comment34.target=boolean\ isVolatile()
comment35.params=
comment35.target=boolean\ isTransient()
comment4.params=
comment4.target=constantpool.ConstantPool\ getConstantPool()
comment5.params=methodName\ methodType
comment5.target=MethodSource\ getMethod(java.lang.String,\ java.lang.String)
comment6.params=
comment6.target=MethodData[]\ getMethodData()
comment7.params=methodName\ methodType
comment7.target=MethodData\ getMethodData(java.lang.String,\ java.lang.String)
comment8.params=methodName\ methodType
comment8.target=MethodData\ getMethodDataNE(java.lang.String,\ java.lang.String)
comment9.params=newMethod
comment9.target=void\ addMethod(MethodData)
numComments=36
