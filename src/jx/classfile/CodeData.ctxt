#BlueJ class context
comment0.target=CodeData
comment0.text=\ \n\ \ \ \ All\ data\ about\ the\ bytecode\ of\ a\ method,\ that\ can\ be\ found\ in\ a\n\ \ \ \ class\ file\ (code\ attribute\ of\ method).\ This\ is\ a\ rather\ passive\ class.\n\ \ \ \ It\ only\ reads\ the\ data\ from\ the\ class\ file\ and\ stores\ it.\n
comment1.params=
comment1.target=void\ increaseMaxLocals()
comment10.params=
comment10.target=byte[]\ getBytecode()
comment11.params=
comment11.target=int\ getBytecodeLength()
comment12.params=
comment12.target=LineAttributeData[]\ getLineNumberTable()
comment13.params=
comment13.target=ExceptionHandlerData[]\ getExceptionHandlers()
comment14.params=input\ cPool
comment14.target=void\ readFromClassFile(java.io.DataInput,\ constantpool.ConstantPool)
comment15.params=input\ cPool
comment15.target=void\ readAttribute(java.io.DataInput,\ constantpool.ConstantPool)
comment16.params=
comment16.target=java.lang.String\ toString()
comment17.params=cPool
comment17.target=java.lang.String\ getDescription(constantpool.ConstantPool)
comment2.params=
comment2.target=void\ increaseMaxStack()
comment3.params=newCode
comment3.target=void\ setCodeBytes(byte[])
comment4.params=
comment4.target=CodeData()
comment5.params=input\ cPool
comment5.target=CodeData(java.io.DataInput,\ constantpool.ConstantPool)
comment6.params=maxStack\ maxLocals\ codeBytes\ exceptionHandler\ lineNumberTable
comment6.target=CodeData(int,\ int,\ byte[],\ ExceptionHandlerData[],\ LineAttributeData[])
comment7.params=
comment7.target=CodeData\ copy()
comment8.params=
comment8.target=int\ getNumStackSlots()
comment9.params=
comment9.target=int\ getNumLocalVariables()
numComments=18
