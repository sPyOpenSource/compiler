class java/util/HashMap$HashMapCollection {
 
 method <init>(Ljava/util/HashMap;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method add(Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 add
 
 method addAll(Ljava/util/Collection;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 addAll
 
 method clear()V {
  +START:   #1
        vR0.this$0.clear();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 clear
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.this$0.containsValue(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 contains
 
 method isEmpty()Z {
  +START:   #1
        return vR0.this$0.isEmpty();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isEmpty
 
 method size()I {
  +START:   #1
        return vR0.this$0.size();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return new java/util/HashMap$HashMapIterator(vR0.this$0,1);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 iterator
}
