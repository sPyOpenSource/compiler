class jx/rdp/crypto/SHA1 {
 
 method engineGetDigestLength()I {
  +START:   #1
        return 20;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 engineGetDigestLength
 
 method engineGetDataLength()I {
  +START:   #1
        return 64;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 engineGetDataLength
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special("SHA-1");   [  i RR] 
        vR0.java_init@special();   [  i R.] 
        vR0.engineReset@extra();   [  i R.] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 1 any 0 found 0 <init>
 
 method java_init()V {
  +START:   #1
        vR0.digest = new int[5];   
        vR0.data = new int[16];   
        vR0.tmp = new byte[64];   
        vR0.w = new int[80];   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 java_init
 
 method <init>(Ljx/rdp/crypto/SHA1;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.data = ([I)(vR1.data.clone());   
        vR0.digest = ([I)(vR1.digest.clone());   
        vR0.tmp = ([B)(vR1.tmp.clone());   
        vR0.w = ([I)(vR1.w.clone());   
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 4 swaps 0 any 0 found 0 <init>
 
 method clone()Ljava/lang/Object; {
  +START:   #1
        return new jx/rdp/crypto/SHA1(vR0);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 clone
 
 method engineReset()V {
  +START:   #1
        vR0.engineReset@special();   [   R] 
        vR0.java_reset@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 engineReset
 
 method java_reset()V {
  +START:   #1
        vR0.digest[0] = 1732584193;   
        vR0.digest[1] = -271733879;   
        vR0.digest[2] = -1732584194;   
        vR0.digest[3] = 271733878;   
        vR0.digest[4] = -1009589776;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 java_reset
 
 method engineTransform([B)V {
  +START:   #1
        vR0.java_transform@special(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 engineTransform
 
 method java_transform([B)V {
  +START:   #1
        byte2int@special(vR1,0,vR0.data,0,16);   [  R iiRiR]
        vR0.transform@special(vR0.data);   [  Ri RR...] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 java_transform
 
 method engineDigest([BI)[B {
  +START:   #1
        vR3 = vR0.java_digest@special(vR1,vi2);    [   iRR] 
        vR0.engineReset@extra();   [R   R..] 
        return vR3;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 engineDigest
 
 method java_digest([BI)[B {
  +START:   #1
        if vi2==0 goto B15;   
  +B4:   #1
        arraycopy@special(vR1,0,vR0.tmp,0,vi2);   [ Ri R iiRiR]
  +B15:   #1
        b0 = vR0.tmp;    
        b1 = vi2;    
        vi2++;   
        b0[b1] = -128;   
        if vi2<=56 goto B76;   
  +B32:   #1
        if vi2>=64 goto B51;   
  +B38:   #1
        b0 = vR0.tmp;    
        b1 = vi2;    
        vi2++;   
        b0[b1] = 0;   
        goto +B32;   [ Ri . .....]
  +B51:   #1
        byte2int@special(vR0.tmp,0,vR0.data,0,16);   [ Ri RR iiRiR]
        vR0.transform@special(vR0.data);   [ Ri RRi RR...] 
        vi2 = 0;    
  +B76:   #2
        if vi2>=56 goto B95;   
  +B82:   #1
        b0 = vR0.tmp;    
        b1 = vi2;    
        vi2++;   
        b0[b1] = 0;   
        goto +B76;   [ Ri ... .....]
  +B95:   #1
        byte2int@special(vR0.tmp,0,vR0.data,0,14);   [ Ri RR. iiRiR]
        vi3 = vR0.bitcount@this();    [ Ri RR. R....] 
        vR0.data[14] = 0;   
        vR0.data[15] = vi3;   
        vR0.transform@special(vR0.data);   [i Ri RRi RR...] 
        vR4 = new byte[20];    
        vi5 = 0;    
        vi6 = 0;    
  +B151:   #1
        if vi6>=5 goto B225;   
  +B157:   #1
        vi7 = vR0.digest[vi6];    
        b1 = vi5;    
        vi5++;   
        vR4[b1] = (byte)(vi7 >>> 24);   
        b1 = vi5;    
        vi5++;   
        vR4[b1] = (byte)(vi7 >>> 16);   
        b1 = vi5;    
        vi5++;   
        vR4[b1] = (byte)(vi7 >>> 8);   
        b1 = vi5;    
        vi5++;   
        vR4[b1] = (byte)vi7;   
        vi6++;   
        goto +B151;   [iRiii Ri ... .....]
  +B225:   #1
        return vR4;   
  +END:   #1
 }
// Register: rd 57/57 wr 31 swaps 2 any 21 found 0 java_digest
 
 method f1(III)I {
  +START:   #1
        return ((vi2 ^ (vi0 & (vi1 ^ vi2)))+1518500249);   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 1 f1
 
 method f2(III)I {
  +START:   #1
        return (((vi0 ^ vi1) ^ vi2)+1859775393);   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 f2
 
 method f3(III)I {
  +START:   #1
        return (((vi0 & vi1) | (vi2 & (vi0 | vi1)))+-1894007588);   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 f3
 
 method f4(III)I {
  +START:   #1
        return (((vi0 ^ vi1) ^ vi2)+-899497514);   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 f4
 
 method transform([I)V {
  +START:   #1
        vi2 = vR0.digest[0];    
        vi3 = vR0.digest[1];    
        vi4 = vR0.digest[2];    
        vi5 = vR0.digest[3];    
        vi6 = vR0.digest[4];    
        vR7 = vR0.w;    
        vi8 = 0;    
  +B47:   #1
        if vi8>=16 goto B69;   
  +B54:   #1
        vR7[vi8] = vR1[vi8];   
        vi8++;   
        goto +B47;   [iiiiiRi R  ]
  +B69:   #1
        vi8 = 16;    
  +B73:   #1
        if vi8>=80 goto B143;   
  +B80:   #1
        vi9 = (((vR7[(vi8-16)] ^ vR7[(vi8-14)]) ^ vR7[(vi8-8)]) ^ vR7[(vi8-3)]);    
        vR7[vi8] = vi9;   
        vR7[vi8] = ((vi9 << 1) | (vi9 >>> -1));   
        vi8++;   
        goto +B73;   [iiiiiRii R  ]
  +B143:   #1
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f1@special(vi3,vi4,vi5))+vR7[0]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f1@special(vi2,vi3,vi4))+vR7[1]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f1@special(vi6,vi2,vi3))+vR7[2]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f1@special(vi5,vi6,vi2))+vR7[3]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f1@special(vi4,vi5,vi6))+vR7[4]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f1@special(vi3,vi4,vi5))+vR7[5]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f1@special(vi2,vi3,vi4))+vR7[6]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f1@special(vi6,vi2,vi3))+vR7[7]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f1@special(vi5,vi6,vi2))+vR7[8]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f1@special(vi4,vi5,vi6))+vR7[9]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f1@special(vi3,vi4,vi5))+vR7[10]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f1@special(vi2,vi3,vi4))+vR7[11]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f1@special(vi6,vi2,vi3))+vR7[12]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f1@special(vi5,vi6,vi2))+vR7[13]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f1@special(vi4,vi5,vi6))+vR7[14]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f1@special(vi3,vi4,vi5))+vR7[15]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f1@special(vi2,vi3,vi4))+vR7[16]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f1@special(vi6,vi2,vi3))+vR7[17]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f1@special(vi5,vi6,vi2))+vR7[18]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f1@special(vi4,vi5,vi6))+vR7[19]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f2@special(vi3,vi4,vi5))+vR7[20]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f2@special(vi2,vi3,vi4))+vR7[21]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f2@special(vi6,vi2,vi3))+vR7[22]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f2@special(vi5,vi6,vi2))+vR7[23]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f2@special(vi4,vi5,vi6))+vR7[24]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f2@special(vi3,vi4,vi5))+vR7[25]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f2@special(vi2,vi3,vi4))+vR7[26]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f2@special(vi6,vi2,vi3))+vR7[27]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f2@special(vi5,vi6,vi2))+vR7[28]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f2@special(vi4,vi5,vi6))+vR7[29]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f2@special(vi3,vi4,vi5))+vR7[30]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f2@special(vi2,vi3,vi4))+vR7[31]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f2@special(vi6,vi2,vi3))+vR7[32]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f2@special(vi5,vi6,vi2))+vR7[33]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f2@special(vi4,vi5,vi6))+vR7[34]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f2@special(vi3,vi4,vi5))+vR7[35]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f2@special(vi2,vi3,vi4))+vR7[36]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f2@special(vi6,vi2,vi3))+vR7[37]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f2@special(vi5,vi6,vi2))+vR7[38]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f2@special(vi4,vi5,vi6))+vR7[39]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f3@special(vi3,vi4,vi5))+vR7[40]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f3@special(vi2,vi3,vi4))+vR7[41]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f3@special(vi6,vi2,vi3))+vR7[42]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f3@special(vi5,vi6,vi2))+vR7[43]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f3@special(vi4,vi5,vi6))+vR7[44]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f3@special(vi3,vi4,vi5))+vR7[45]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f3@special(vi2,vi3,vi4))+vR7[46]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f3@special(vi6,vi2,vi3))+vR7[47]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f3@special(vi5,vi6,vi2))+vR7[48]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f3@special(vi4,vi5,vi6))+vR7[49]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f3@special(vi3,vi4,vi5))+vR7[50]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f3@special(vi2,vi3,vi4))+vR7[51]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f3@special(vi6,vi2,vi3))+vR7[52]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f3@special(vi5,vi6,vi2))+vR7[53]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f3@special(vi4,vi5,vi6))+vR7[54]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f3@special(vi3,vi4,vi5))+vR7[55]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f3@special(vi2,vi3,vi4))+vR7[56]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f3@special(vi6,vi2,vi3))+vR7[57]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f3@special(vi5,vi6,vi2))+vR7[58]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f3@special(vi4,vi5,vi6))+vR7[59]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f4@special(vi3,vi4,vi5))+vR7[60]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f4@special(vi2,vi3,vi4))+vR7[61]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f4@special(vi6,vi2,vi3))+vR7[62]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f4@special(vi5,vi6,vi2))+vR7[63]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f4@special(vi4,vi5,vi6))+vR7[64]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f4@special(vi3,vi4,vi5))+vR7[65]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f4@special(vi2,vi3,vi4))+vR7[66]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f4@special(vi6,vi2,vi3))+vR7[67]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f4@special(vi5,vi6,vi2))+vR7[68]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f4@special(vi4,vi5,vi6))+vR7[69]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f4@special(vi3,vi4,vi5))+vR7[70]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f4@special(vi2,vi3,vi4))+vR7[71]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f4@special(vi6,vi2,vi3))+vR7[72]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f4@special(vi5,vi6,vi2))+vR7[73]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f4@special(vi4,vi5,vi6))+vR7[74]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        vi6 = (vi6+((((vi2 << 5) | (vi2 >>> -5))+f4@special(vi3,vi4,vi5))+vR7[75]));    
        vi3 = ((vi3 << 30) | (vi3 >>> -30));    
        vi5 = (vi5+((((vi6 << 5) | (vi6 >>> -5))+f4@special(vi2,vi3,vi4))+vR7[76]));    
        vi2 = ((vi2 << 30) | (vi2 >>> -30));    
        vi4 = (vi4+((((vi5 << 5) | (vi5 >>> -5))+f4@special(vi6,vi2,vi3))+vR7[77]));    
        vi6 = ((vi6 << 30) | (vi6 >>> -30));    
        vi3 = (vi3+((((vi4 << 5) | (vi4 >>> -5))+f4@special(vi5,vi6,vi2))+vR7[78]));    
        vi5 = ((vi5 << 30) | (vi5 >>> -30));    
        vi2 = (vi2+((((vi3 << 5) | (vi3 >>> -5))+f4@special(vi4,vi5,vi6))+vR7[79]));    
        vi4 = ((vi4 << 30) | (vi4 >>> -30));    
        b0 = vR0.digest;    
        b0[0] = (b0[0]+vi2);   
        b0 = vR0.digest;    
        b0[1] = (b0[1]+vi3);   
        b0 = vR0.digest;    
        b0[2] = (b0[2]+vi4);   
        b0 = vR0.digest;    
        b0[3] = (b0[3]+vi5);   
        b0 = vR0.digest;    
        b0[4] = (b0[4]+vi6);   
        return;   
  +END:   #1
 }
// Register: rd 689/689 wr 255 swaps 0 any 166 found 80 transform
 
 method byte2int([BI[III)V {
  +START:   #2
        b0 = vi4;    
        vi4--;   
        if b0<=0 goto B65;   
  +B8:   #1
        b1 = vi3;    
        vi3++;   
        b3 = vi1;    
        vi1++;   
        b2 = (vR0[b3] << 24);    
        b4 = vi1;    
        vi1++;   
        b2 = (b2 | ((vR0[b4] & 255) << 16));    
        b4 = vi1;    
        vi1++;   
        b2 = (b2 | ((vR0[b4] & 255) << 8));    
        b4 = vi1;    
        vi1++;   
        vR2[b1] = (b2 | (vR0[b4] & 255));   
        goto +START;   [ iiiii  ]
  +B65:   #1
        return;   
  +END:   #1
 }
// Register: rd 26/26 wr 15 swaps 0 any 16 found 0 byte2int
}
