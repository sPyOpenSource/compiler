class jx/rpcsvc/nfs2/LookupCache_2ndImpl {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special(0);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Z)V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        vR0.debug = vi1;   
        vR0.cacheHits = 0;   
        vR0.cacheMisses = 0;   
        b1 = new java/util/Hashtable(100);    [ ?R  i][ ?R . iiR]
        vR0.nameHt = b1;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 2 swaps 0 any 0 found 0 <init>
 
 method addEntry(Ljava/lang/String;ILjx/rpcsvc/nfs2/MappedFHandle;)V {
  +START:   #1
        vR4 = new jx/rpcsvc/nfs2/LookupCache_2ndImpl_Entry(vi2,vR3);    [ R  i][ R . iRiR]
        vR0.nameHt.put(vR1,vR4);   [R R . RRR.] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 addEntry
 
 method getEntry(Ljava/lang/String;I)Ljx/rpcsvc/nfs2/LookupCache_Result; {
  +START:   #1
        vR3 = (jx/rpcsvc/nfs2/LookupCache_2ndImpl_Entry)(vR0.nameHt.get(vR1));    
        if vR3==null goto B73;   
  +B16:   #1
        if vR3.dirIdentifier!=vi2 goto B53;   
  +B24:   #1
        if vR0.debug==0 goto B41;   
  +B31:   #1
        vR0.cacheHits = (vR0.cacheHits+1);   
  +B41:   #1
        return new jx/rpcsvc/nfs2/LookupCache_Result(vR3.fh);   
  +B53:   #1
        out.println("LookupCache_2ndImpl: doch nichts!-----------");   [R R i. RR.] 
        vR0.cacheMisses = (vR0.cacheMisses+1);   
        return 0;   
  +B73:   #1
        vR0.cacheMisses = (vR0.cacheMisses+1);   
        return 0;   
  +END:   #1
 }
// Register: rd 14/14 wr 5 swaps 1 any 1 found 0 getEntry
 
 method delEntry(Ljava/lang/String;I)V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 delEntry
 
 method flush()V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 flush
 
 method printStatistics()V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("LookupCache_2ndImpl: ").append@extra(vR0.cacheHits).append@extra(",").append@extra(vR0.cacheMisses).toString@extra());   [ RR iiiii... RR...] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 11 swaps 5 any 0 found 0 printStatistics
}
