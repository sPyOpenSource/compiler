class java/util/Vector {
 
 method <init>(II)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.capacityIncrement = vi2;   
        vR0.elementData = new java/lang/Object()[vi1];   
        vR0.elementCount = 0;   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(I)V {
  +START:   #1
        vR0.<init>@special(vi1,0);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special(10);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method capacity()I {
  +START:   #1
        return vR0.elementData.length;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 capacity
 
 method clone()Ljava/lang/Object; {
  +START:   #1
        vR1 = new java/util/Vector();    [ R  i][ R  iR]
        vi2 = 0;    
  +B10:   #1
        if vi2>=vR0.size@extra() goto B33;   
  +B18:   #1
        vR1.addElement@extra(vR0.elementAt@this(vi2));   [Ri R i RR] 
        vi2++;   
        goto +B10;   [Ri R i ..]
  +B33:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 7/7 wr 4 swaps 1 any 2 found 1 clone
 
 method trimToSize()V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 trimToSize
 
 method addElement(Ljava/lang/Object;)V {
  +START:   #1
        vR0.add@this(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 addElement
 
 method insertElementAt(Ljava/lang/Object;I)V {
  +START:   #1
        if vi2<=vR0.elementCount goto B16;   
  -B8:   #1
        throw new java/lang/IndexOutOfBoundsException();   
  +B16:   #1
        vR0.ensureCapacity@this((vR0.elementCount+1));   [ R i iR] 
        vi3 = vR0.elementCount;    
  +B31:   #1
        if vi3<=vi2 goto B56;   
  +B36:   #1
        vR0.elementData[vi3] = vR0.elementData[(vi3-1)];   
        vi3--;   
        goto +B31;   [i R . ..]
  +B56:   #1
        vR0.elementData[vi2] = vR1;   
        vR0.elementCount = (vR0.elementCount+1);   
        return;   
  +END:   #1
 }
// Register: rd 17/17 wr 3 swaps 1 any 4 found 0 insertElementAt
 
 method size()I {
  +START:   #1
        return vR0.elementCount;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method isEmpty()Z {
  +START:   #1
        if vR0.elementCount!=0 goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  ]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isEmpty
 
 method firstElement()Ljava/lang/Object; {
  +START:   #1
        if vR0.isEmpty@extra()==0 goto B15;   
  -B7:   #1
        throw new java/util/NoSuchElementException();   
  +B15:   #1
        return vR0.elementData[0];   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 firstElement
 
 method lastElement()Ljava/lang/Object; {
  +START:   #1
        if vR0.isEmpty@extra()==0 goto B15;   
  -B7:   #1
        throw new java/util/NoSuchElementException();   
  +B15:   #1
        return vR0.elementData[(vR0.elementCount-1)];   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 lastElement
 
 method elementAt(I)Ljava/lang/Object; {
  +START:   #1
        if vi1<vR0.elementCount goto B16;   
  -B8:   #1
        throw new java/lang/IndexOutOfBoundsException();   
  +B16:   #1
        return vR0.elementData@this(vi1);   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 1 found 0 elementAt
 
 method elementData(I)Ljava/lang/Object; {
  +START:   #1
        return vR0.elementData[vi1];   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 elementData
 
 method elements()Ljava/util/Enumeration; {
  +START:   #1
        vR1 = new java/lang/Object()[vR0.elementCount];    
        vR0.copyInto@this(vR1);   [R R  RR] 
        return new java/util/ArrayEnumeration(vR1);   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 elements
 
 method indexOf(Ljava/lang/Object;I)I {
  +START:   #1
        vi3 = vi2;    
  +B2:   #1
        if vi3>=vR0.elementCount goto B40;   
  +B10:   #1
        if vR0.elementData[vi3]==null goto B34;   
  +B19:   #1
        if vR0.elementData[vi3].equals(vR1)==0 goto B34;   
  +B32:   #1
        return vi3;   
  +B34:   #2
        vi3++;   
        goto +B2;   [i   ..]
  +B40:   #1
        return -1;   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 0 any 3 found 0 indexOf
 
 method indexOf(Ljava/lang/Object;)I {
  +START:   #1
        return vR0.indexOf@extra(vR1,0);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 indexOf
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0.indexOf@extra(vR1)< 0 goto B12;   
  +B8:   #1
        b0 = 1;    
        goto +B13b0;   forward return[ i  ..]
  +B12:   #1
        b0 = 0;    
  +B13b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 contains
 
 method lastIndexOf(Ljava/lang/Object;I)I {
  +START:   #1
        vi3 = -1;    
        vi4 = 0;    
  +B5:   #1
        if vi4>vi2 goto B34;   
  +B11:   #1
        if vR0.elementData[vi4].equals(vR1)==0 goto B28;   
  +B25:   #1
        vi3 = vi4;    
  +B28:   #1
        vi4++;   
        goto +B5;   [ii   ..]
  +B34:   #1
        return vi3;   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 0 any 3 found 0 lastIndexOf
 
 method lastIndexOf(Ljava/lang/Object;)I {
  +START:   #1
        return vR0.lastIndexOf@extra(vR1,(vR0.elementCount-1));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 lastIndexOf
 
 method removeAllElements()V {
  +START:   #2
        if vR0.elementCount<=0 goto B27;   
  +B7:   #1
        b0 = vR0.elementData;    
        b2 = (vR0.elementCount-1);    
        b1 = b2;    
        vR0.elementCount = b2;   
        b0[b1] = 0;   
        goto +START;   [ Rii  ]
  +B27:   #1
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 3 swaps 0 any 1 found 0 removeAllElements
 
 method clear()V {
  +START:   #1
        vR0.removeAllElements@extra();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 clear
 
 method removeElementAt(I)V {
  +START:   #1
        vi2 = (vi1+1);    
  +B4:   #1
        if vi2>=vR0.elementCount goto B32;   
  +B12:   #1
        vR0.elementData[(vi2-1)] = vR0.elementData[vi2];   
        vi2++;   
        goto +B4;   [i   ]
  +B32:   #1
        vR0.elementCount = (vR0.elementCount-1);   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 2 swaps 0 any 3 found 0 removeElementAt
 
 method removeElement(Ljava/lang/Object;)Z {
  +START:   #1
        vi2 = 0;    
  +B2:   #1
        if vi2>=vR0.elementCount goto B36;   
  +B10:   #1
        if vR0.elementData[vi2].equals(vR1)==0 goto B30;   
  +B23:   #1
        vR0.removeElementAt@extra(vi2);   [i   iR] 
        return 1;   
  +B30:   #1
        vi2++;   
        goto +B2;   [i   ..]
  +B36:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 2 found 0 removeElement
 
 method copyInto([Ljava/lang/Object;)V {
  +START:   #1
        arraycopy@special(vR0.elementData,0,vR1,0,vR0.elementCount);   [  Ri iiRiR]
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 copyInto
 
 method remove(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.removeElement@extra(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 remove
 
 method setElementAt(Ljava/lang/Object;I)V {
  +START:   #1
        if vi2<vR0.elementCount goto B16;   
  -B8:   #1
        throw new java/lang/IndexOutOfBoundsException();   
  +B16:   #1
        vR0.elementData[vi2] = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 2 found 0 setElementAt
 
 method setSize(I)V {
  +START:   #2
        if vR0.elementCount<=vi1 goto B28;   
  +B8:   #1
        b0 = vR0.elementData;    
        b2 = (vR0.elementCount-1);    
        b1 = b2;    
        vR0.elementCount = b2;   
        b0[b1] = 0;   
        goto +START;   [ Rii  ]
  +B28:   #1
        vR0.ensureCapacity@this(vi1);   [ Rii  iR] 
  +B33:   #1
        if vR0.elementCount>=vi1 goto B61;   
  +B41:   #1
        b0 = vR0.elementData;    
        b2 = vR0.elementCount;    
        b1 = b2;    
        vR0.elementCount = (b2+1);   
        b0[b1] = 0;   
        goto +B33;   [ Rii  ..]
  +B61:   #1
        return;   
  +END:   #1
 }
// Register: rd 19/19 wr 6 swaps 0 any 2 found 0 setSize
 
 method toString()Ljava/lang/String; {
  +START:   #1
        vR1 = new java/lang/StringBuilder("[");    [ R  i][ R . iRR]
        vi2 = 0;    
  +B12:   #1
        if vi2>=vR0.elementCount goto B70;   
  +B20:   #1
        if vi2<=0 goto B31;   
  +B24:   #1
        vR1.append@extra(", ");   [Ri R i RR.] 
  +B31:   #1
        if vR0.elementData[vi2]==null goto B57;   
  +B40:   #1
        vR1.append@extra(vR0.elementData[vi2].toString());   [Ri R i RR.] 
        goto +B64;   [Ri R i ...]
  +B57:   #1
        vR1.append@extra("null");   [Ri R i RR.] 
  +B64:   #1
        vi2++;   
        goto +B12;   [Ri R . ...]
  +B70:   #1
        vR1.append@extra("]");   [Ri R i RR.] 
        return vR1.toString@extra();   
  +END:   #1
 }
// Register: rd 14/14 wr 8 swaps 4 any 3 found 0 toString
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        vR1 = new java/lang/Object()[vR0.elementCount];    
        arraycopy@special(vR0.elementData,0,vR1,0,vR0.elementCount);   [R  Ri iiRiR]
        return vR1;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 0 any 0 found 0 toArray
 
 method remove(I)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 remove
 
 method get(I)Ljava/lang/Object; {
  +START:   #1
        if vi1<vR0.elementCount goto B17;   
  -B8:   #1
        throw new java/lang/ArrayIndexOutOfBoundsException(vi1);   
  +B17:   #1
        return vR0.elementData[vi1];   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 1 found 0 get
 
 method listIterator()Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method listIterator(I)Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method add(ILjava/lang/Object;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 add
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 set
 
 method subList(II)Ljava/util/List; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 subList
}
