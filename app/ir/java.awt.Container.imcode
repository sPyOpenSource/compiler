class java/awt/Container {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method getComponentCount()I {
  +START:   #1
        return vR0.ncomponents;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getComponentCount
 
 method countComponents()I {
  +START:   #1
        return vR0.ncomponents;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 countComponents
 
 method getComponent(I)Ljava/awt/Component; {
  +START:   #1
        if vi1< 0 goto B12;   
  +B4:   #1
        if vi1<vR0.ncomponents goto B22;   
  -B12:   #1
        throw new java/lang/ArrayIndexOutOfBoundsException("no such component");   
  +B22:   #1
        return vR0.component[vi1];   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 2 found 0 getComponent
 
 method getComponents()[Ljava/awt/Component; {
  +START:   #1
        vR1 = new java/awt/Component()[vR0.ncomponents];    
        if vR0.ncomponents<=0 goto B29;   
  +B15:   #1
        arraycopy@special(vR0.component,0,vR1,0,vR0.ncomponents);   [R  Ri iiRiR]
  +B29:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 0 found 0 getComponents
 
 method getInsets()Ljava/awt/Insets; {
  +START:   #1
        if vR0.peer!=null goto B19;   
  +B7:   #1
        return new java/awt/Insets(0,0,0,0);   
  +B19:   #1
        return (java/awt/peer/ContainerPeer)(vR0.peer).getInsets();   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 getInsets
 
 method insets()Ljava/awt/Insets; {
  +START:   #1
        return vR0.getInsets@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 insets
 
 method add(Ljava/awt/Component;)Ljava/awt/Component; {
  +START:   #1
        vR0.addImpl@this(vR1,0,-1);   [   iRRR] 
        return vR1;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 add
 
 method add(Ljava/lang/String;Ljava/awt/Component;)Ljava/awt/Component; {
  +START:   #1
        vR0.addImpl@this(vR2,vR1,-1);   [   iRRR] 
        return vR2;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 add
 
 method add(Ljava/awt/Component;I)Ljava/awt/Component; {
  +START:   #1
        vR0.addImpl@this(vR1,0,vi2);   [   iRRR] 
        return vR1;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 add
 
 method add(Ljava/awt/Component;Ljava/lang/Object;)V {
  +START:   #1
        vR0.addImpl@this(vR1,vR2,-1);   [   iRRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 add
 
 method add(Ljava/awt/Component;Ljava/lang/Object;I)V {
  +START:   #1
        vR0.addImpl@this(vR1,vR2,vi3);   [   iRRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 add
