class test/nfs/LoadGenerator {
 
 method init(Ljx/zero/Naming;)V {
  +START:   #1
        vR1 = (jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0"));    
        vR2 = (jx/zero/CPUManager)(vR0.lookup("CPUManager"));    
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream(vR1);    [ RRR ii. i.][ RRR ii. iRR]
        b1.<init>@special(b2);   [RR RRR ii. RR.] 
        out = b0;   
        out.println("LoadGenerator Domain speaking.");   [RR RRR iii. RR.] 
        b0 = new test/nfs/LoadGenerator();    [ RRR iii. i..][ RRR iii. iR.]
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 13 swaps 3 any 1 found 1 init
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ RRRR?R  R] 
        vR0.cpuManager = (jx/zero/CPUManager)(getInitialNaming@special().lookup("CPUManager"));   
        vR0.ende = 0;   
        out.println("new LoadGenerator");   [ RRRR?R ii. RR] 
        vR1 = new java/lang/Thread()[100];    
        vi2 = 0;    
        vR0.cpuManager.sleep(15000,0);   [Ri RRRR?R ii. iiR] 
        vi3 = 0;    
  +B57:   #1
        if vi3>=10 goto B160;   
  +B63:   #1
        vR0.cpuManager.sleep(20000,0);   [Rii RRRR?R ... iiR] 
        vi4 = 0;    
  +B79:   #1
        if vi4>=10 goto B129;   
  +B86:   #1
        b1 = vi2;    
        vi2++;   
        b2 = new java/lang/Thread;    
        b3 = b2;    
        b5 = new java/lang/StringBuilder();    [ RiRR?R ... i..][ RiRR?R ... iR.]
        b3.<init>@special(vR0,b5.append@extra("Load").append@extra(vi2).toString@extra());   [Riii RiRR?R ii. RRR] 
        vR1[b1] = b2;   
        b2.start();   [Riii RiRR?R ii. R..] 
        vi4++;   
        goto +B79;   [Riii RiRR?R ii. ...]
  +B129:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR?R ... i..][ RRRR?R ... iR.]
        b0.println(b1.append@extra("Load:").append@extra(vi2).toString@extra());   [Riii RRRR?R ii. RR.] 
        vi3++;   
        goto +B57;   [Riii RRRR?R ii. ...]
  +B160:   #1
        vR0.cpuManager.sleep(50000,0);   [Riii RRRR?R ... iiR] 
        vR0.ende = 1;   
        return;   
  +END:   #1
 }
// Register: rd 23/23 wr 26 swaps 6 any 8 found 0 <init>
 
 method run()V {
  +START:   #2
        if vR0.ende!=0 goto B34;   
  +B7:   #1
        vR0.cpuManager.sleep(1000,0);   [   iiR] 
        vi1 = 0;    
  +B22:   #1
        if vi1>=1000000 goto START;   
  +B28:   #1
        vi1++;   
        goto +B22;   [i   ...]
  +B34:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 2 found 0 run
}
