class bioide/EnablePIOOperation {
 
 method <init>(Lbioide/Controller;Lbioide/Drive;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR2);   [   RRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method startOperation()V {
  +START:   #1
        vi1 = 0;    
        vR2 = vR0.drive.id_data;    
        vR0.drive.using_dma = 0;   
        if (vR2.eide_pio_modes() & 1)<=0 goto B29;   
  +B27:   #1
        vi1 = 0;    
  +B29:   #1
        if (vR2.eide_pio_modes() & 2)<=0 goto B40;   
  +B38:   #1
        vi1 = 1;    
  +B40:   #1
        if (vR2.eide_pio_modes() & 4)<=0 goto B51;   
  +B49:   #1
        vi1 = 2;    
  +B51:   #1
        vR0.controller.setCTLReg(vR0.drive.ctl);   [iR RR i bR] 
        vR0.controller.setFeatureReg(3);   [iR RR i iR] 
        vR0.controller.setCountReg((byte)(8 | (vi1 & 3)));   [iR RR ii iR] 
        vR0.controller.setCommandReg(-17);   [iR RR ii iR] 
        vi3 = 100;    
  +B99:   #1
        if vi3> 0 goto B121;   
  -B103:   #1
        out.println("     Fehler beim Setzen des Transfermodus (timeout), PIO-Modus unveraendert");   [iRi RR i. RR] 
        throw new bioide/IDEException("Timeout setting transfer mode");   
  +B121:   #1
        sleepManager.mdelay(50);   [iRi RR .. iR.] 
        vi3--;   
        if vR0.controller.statusBusy()!=0 goto B99;   
  +B144:   #1
        sleepManager.mdelay(50);   [iRi RR .. iR.] 
        if (vR0.controller.getStatus() & -127)==0 goto B185;   
  -B167:   #1
        out.println("     Fehler beim Setzen des Transfermodus, PIO-Modus unveraendert");   [iRi RR i. RR.] 
        throw new bioide/IDEException("Error setting transfer mode");   
  +B185:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR .. i..][ RR .. iR.]
        b0.println(b1.append@extra("     PIO (Modus ").append@extra((vi1+3)).append@extra(")").toString@extra());   [iRi RR iiii.. RR..] 
        return;   
  +END:   #1
 }
// Register: rd 20/20 wr 23 swaps 8 any 2 found 0 startOperation
}
