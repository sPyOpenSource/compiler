class java/util/AbstractCollection {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method equals(Ljava/lang/Object;Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/lang/Error("");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 equals
 
 method add(Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 add
 
 method clear()V {
  +START:   #1
        vR1 = vR0.iterator@this();    [   R] 
  +B5:   #1
        if vR1.hasNext()==0 goto B30;   
  +B14:   #1
        vR1.next();   [R   R] 
        vR1.remove();   [R   R] 
        goto +B5;   [R   .]
  +B30:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 clear
 
 method isEmpty()Z {
  +START:   #1
        if vR0.size@this()!=0 goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  .]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isEmpty
 
 method addAll(Ljava/util/Collection;)Z {
  +START:   #1
        vi2 = 0;    
        vR3 = vR1.iterator();    [i   R] 
  +B9:   #1
        if vR3.hasNext()==0 goto B40;   
  +B18:   #1
        vR4 = vR3.next();    [iR   R] 
        if vR0.add@this(vR4)==0 goto B37;   
  +B35:   #1
        vi2 = 1;    
  +B37:   #1
        goto +B9;   [iRR   ..]
  +B40:   #1
        return vi2;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 0 found 0 addAll
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        vR2 = vR0.iterator@this();    [   R] 
        if vR1!=null goto B29;   
  +B9:   #1
        if vR2.hasNext()==0 goto B53;   
  +B18:   #1
        if vR2.next()!=null goto B9;   
  +B27:   #1
        return 1;   
  +B29:   #2
        if vR2.hasNext()==0 goto B53;   
  +B38:   #1
        if vR1.equals(vR2.next())==0 goto B29;   
  +B51:   #1
        return 1;   
  +B53:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 1 any 1 found 0 contains
 
 method containsAll(Ljava/util/Collection;)Z {
  +START:   #1
        vR2 = vR1.iterator();    [   R] 
  +B7:   #1
        if vR2.hasNext()==0 goto B36;   
  +B16:   #1
        vR3 = vR2.next();    [R   R] 
        if vR0.contains@this(vR3)!=0 goto B33;   
  +B31:   #1
        return 0;   
  +B33:   #1
        goto +B7;   [RR   ..]
  +B36:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 containsAll
 
 method remove(Ljava/lang/Object;)Z {
  +START:   #1
        vR2 = vR0.iterator@this();    [   R] 
        if vR1!=null goto B35;   
  +B9:   #1
        if vR2.hasNext()==0 goto B65;   
  +B18:   #1
        if vR2.next()!=null goto B9;   
  +B27:   #1
        vR2.remove();   [R   R] 
        return 1;   
  +B35:   #2
        if vR2.hasNext()==0 goto B65;   
  +B44:   #1
        if vR1.equals(vR2.next())==0 goto B35;   
  +B57:   #1
        vR2.remove();   [R  . R.] 
        return 1;   
  +B65:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 1 any 1 found 0 remove
 
 method removeAll(Ljava/util/Collection;)Z {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        vi2 = 0;    
        vR3 = vR0.iterator@this();    [i   R] 
  +B12:   #2
        if vR3.hasNext()==0 goto B47;   
  +B21:   #1
        if vR1.contains(vR3.next())==0 goto B12;   
  +B36:   #1
        vR3.remove();   [iR  . R.] 
        vi2 = 1;    
        goto +B12;   [iR  . ..]
  +B47:   #1
        return vi2;   
  +END:   #1
 }
// Register: rd 6/6 wr 3 swaps 1 any 0 found 0 removeAll
 
 method retainAll(Ljava/util/Collection;)Z {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        vi2 = 0;    
        vR3 = vR0.iterator@this();    [i   R] 
  +B12:   #2
        if vR3.hasNext()==0 goto B47;   
  +B21:   #1
        if vR1.contains(vR3.next())!=0 goto B12;   
  +B36:   #1
        vR3.remove();   [iR  . R.] 
        vi2 = 1;    
        goto +B12;   [iR  . ..]
  +B47:   #1
        return vi2;   
  +END:   #1
 }
// Register: rd 6/6 wr 3 swaps 1 any 0 found 0 retainAll
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        vR1 = new java/lang/Object()[vR0.size@this()];    
        vR2 = vR0.iterator@this();    [R   R.] 
        return 0;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 toArray
}
