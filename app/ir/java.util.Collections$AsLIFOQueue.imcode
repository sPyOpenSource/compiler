class java/util/Collections$AsLIFOQueue {
 
 method <init>(Ljava/util/Deque;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.q = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method add(Ljava/lang/Object;)Z {
  +START:   #1
        vR0.q.addFirst(vR1);   [   RR] 
        return 1;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 add
 
 method offer(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.q.offerFirst(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 offer
 
 method poll()Ljava/lang/Object; {
  +START:   #1
        return vR0.q.pollFirst();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 poll
 
 method remove()Ljava/lang/Object; {
  +START:   #1
        return vR0.q.removeFirst();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 remove
 
 method peek()Ljava/lang/Object; {
  +START:   #1
        return vR0.q.peekFirst();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 peek
 
 method element()Ljava/lang/Object; {
  +START:   #1
        return vR0.q.getFirst();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 element
 
 method clear()V {
  +START:   #1
        vR0.q.clear();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 clear
 
 method size()I {
  +START:   #1
        return vR0.q.size();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method isEmpty()Z {
  +START:   #1
        return vR0.q.isEmpty();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isEmpty
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.q.contains(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 contains
 
 method remove(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.q.remove(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 remove
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return vR0.q.iterator();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 iterator
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        return vR0.q.toArray();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toArray
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return vR0.q.toString();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toString
 
 method containsAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.q.containsAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 containsAll
 
 method removeAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.q.removeAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 removeAll
 
 method retainAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.q.retainAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 retainAll
 
 method forEach(Ljava/util/function/Consumer;)V {
  +START:   #1
        vR0.q.forEach(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 forEach
 
 method spliterator()Ljava/util/Spliterator; {
  +START:   #1
        return vR0.q.spliterator();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 spliterator
}
