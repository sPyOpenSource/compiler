class jx/db/treemap/TreeMap {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        vR0.m_cAVL = 0;   
        vR0.m_iCount = 0;   
        b1 = new jx/db/avltree/AVLBaum();    [ ?R  i][ ?R  iR]
        vR0.m_cAVL = b1;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 <init>
 
 method getCount()I {
  +START:   #1
        return vR0.m_iCount;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getCount
 
 method put(Ljava/lang/Object;Ljava/lang/Object;)V {
  +START:   #2
        b0 = vR0.m_cAVL;    
        b1 = new jx/db/treemap/TreeMap$TreeMapEntry(vR0,vR1,vR2);    [ RR  i][ RR . iRRRR]
        b0.insert(b1);   [ RR . RR...] 
        vR0.m_iCount = (vR0.m_iCount+1);   
  +B28:   #1
        goto +B32;   forward return[ RR . .....]
  +H31<caught exception>:   #1 reference
        vR3 = <caught exception>;    
  +B32:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 28 handler 31 type 29
 }
// Register: rd 9/9 wr 4 swaps 0 any 0 found 0 put
 
 method remove(Ljava/lang/Object;)Z {
  +START:   #2
        vR0.m_iCount = (vR0.m_iCount-1);   
        b0 = vR0.m_cAVL;    
        b1 = new jx/db/treemap/TreeMap$TreeMapEntry(vR0,vR1,0);    [ RR  i][ RR . iRRRR]
        b0 = b0.delete(b1);    [ bR . RR...] 
  +B27b0:   #1 boolean
        return b0;   
  +H28<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        return 0;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 27 handler 28 type 29
 }
// Register: rd 9/9 wr 5 swaps 0 any 0 found 0 remove
 
 method get(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #2
        b0 = vR0.m_cAVL;    
        b1 = new jx/db/treemap/TreeMap$TreeMapEntry(vR0,vR1,0);    [ RR  i][ RR . iRRRR]
        b0 = (jx/db/treemap/TreeMap$TreeMapEntry)(b0.lookup(b1)).getValue();    [ RR . R....] 
  +B23b0:   #1 reference
        return b0;   
  +H24<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        return 0;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 23 handler 24 type 29
 }
// Register: rd 8/8 wr 7 swaps 0 any 0 found 0 get
 
 method firstKey()Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.m_cAVL;    
  +B5:   #1
        if vR1.right().empty()!=0 goto B23;   
  +B15:   #1
        vR1 = vR1.right();    [R  . R] 
        goto +B5;   [R  . .]
  +B23:   #1
        return (jx/db/treemap/TreeMap$TreeMapEntry)(vR1.value()).getKey();   
  +END:   #1
 }
// Register: rd 5/5 wr 5 swaps 0 any 0 found 0 firstKey
 
 method lastKey()Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.m_cAVL;    
  +B5:   #1
        if vR1.left().empty()!=0 goto B23;   
  +B15:   #1
        vR1 = vR1.left();    [R  . R] 
        goto +B5;   [R  . .]
  +B23:   #1
        return (jx/db/treemap/TreeMap$TreeMapEntry)(vR1.value()).getKey();   
  +END:   #1
 }
// Register: rd 5/5 wr 5 swaps 0 any 0 found 0 lastKey
 
 method containsKey(Ljava/lang/Object;)Z {
  +START:   #2
        b0 = vR0.m_cAVL;    
        b1 = new jx/db/treemap/TreeMap$TreeMapEntry(vR0,vR1,0);    [ RR  i][ RR . iRRRR]
        if b0.lookup(b1)==null goto B24;   
  +B20:   #1
        b0 = 1;    
        goto +B25b0;   forward return[ iR . .....]
  +B24:   #1
        b0 = 0;    
  +B25b0:   #2 int
        return b0;   
  +H26<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        return 0;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 25 handler 26 type 29
 }
// Register: rd 7/7 wr 5 swaps 0 any 0 found 0 containsKey
 
 method isEmpty()Z {
  +START:   #2
        b0 = vR0.m_cAVL.empty();    [ b  R] 
  +B7b0:   #1 boolean
        return b0;   
  +H8<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        return 1;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 7 handler 8 type 29
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 isEmpty
}
