class jx/vis/mif/MIFVisualizer {
 
 method <init>(Ljava/io/OutputStream;)V {
  +START:   #1
        vR0.<init>@special();   [ ?RRR  R] 
        vR0.unique = 10000;   
        vR0.useGroup = -1;   
        b1 = new java/io/PrintStream;    
        b2 = b1;    
        b3 = new java/io/BufferedOutputStream(vR1);    [ ?RRR  i][ ?RRR . iRR]
        b2.<init>@special(b3);   [ ?RRR . RR.] 
        vR0.out = b1;   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 4 swaps 0 any 1 found 0 <init>
 
 method init()V {
  +START:   #1
        vR0.out.println("<MIFFile 5.50>");   [ RRii i RR] 
        vR0.out.println("<Units Ucm>");   [ RRii ii RR] 
        vR0.out.println("<CharUnits CUpt>");   [ RRii iii RR] 
        vR0.out.println("<Document ");   [ RRii iiii RR] 
        vR0.out.println(" <DViewRect 30 30 1176 569 >");   [ RRii iiiii RR] 
        vR0.out.println(" <DWindowRect 1 13 1220 672 >");   [ RRii iiiiii RR] 
        vR0.out.println(" <DViewScale  100.0%%>");   [ RRii iiiiiii RR] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RRii iiiiiii i.][ RRii iiiiiii iR]
        b0.println(b1.append@extra(" <DNextUnique ").append@extra(vR0.unique).append@extra(">").toString@extra());   [ RRii iiiiiiiiiii.. RR..] 
        vR0.out.println(" <DPageSize  30 cm 20 cm>");   [ RRii iiiiiiiiiiii. RR..] 
        vR0.out.println("> # end of Document");   [ RRii iiiiiiiiiiiii RR..] 
        vR0.out.println("<Page ");   [ RRii iiiiiiiiiiiiii RR..] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RRii iiiiiiiiiiiiii i...][ RRii iiiiiiiiiiiiii iR..]
        b1 = b1.append@extra(" <Unique ");    [ RRii iiiiiiiiiiiiiii RR..] 
        b3 = vR0.unique;    
        b2 = b3;    
        vR0.unique = (b3+1);   
        b0.println(b1.append@extra(b2).append@extra(">").toString@extra());   [ RRii iiiiiiiiiiiiiiiii. RR..] 
        vR0.out.println(" <PageType BodyPage>");   [ RRii iiiiiiiiiiiiiiiiii RR..] 
        vR0.out.println(" <PageNum `1'>");   [ RRii iiiiiiiiiiiiiiiiiii RR..] 
        vR0.out.println(" <PageTag `'>");   [ RRii iiiiiiiiiiiiiiiiiiii RR..] 
        vR0.out.println(" <PageSize  30 cm 20 cm>");   [ RRii iiiiiiiiiiiiiiiiiiiii RR..] 
        vR0.out.println(" <PageOrientation Portrait>");   [ RRii iiiiiiiiiiiiiiiiiiiiii RR..] 
        vR0.out.println(" <PageAngle  0.0>");   [ RRii iiiiiiiiiiiiiiiiiiiiiii RR..] 
        vR0.out.println(" <PageBackground `Default'>");   [ RRii iiiiiiiiiiiiiiiiiiiiiiii RR..] 
        return;   
  +END:   #1
 }
// Register: rd 30/30 wr 36 swaps 24 any 1 found 0 init
 
 method finish()V {
  +START:   #1
        vR0.out.println("> # end of Page");   [  i RR] 
        vR0.out.println("# End of MIFFile");   [  ii RR] 
        vR0.out.close();   [  ii R.] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 2 any 0 found 0 finish
 
 method drawLine(IIII)V {
  +START:   #1
        vR0.out.println(" <PolyLine ");   [ RR i RR] 
        vR0.common@special();   [ RR i R.] 
        vR0.out.println("  <PenWidth  0.5 pt>");   [ RR ii RR] 
        vR0.out.println("  <ObColor `Black'>");   [ RR iii RR] 
        vR0.out.println("  <DashedPattern ");   [ RR iiii RR] 
        vR0.out.println("   <DashedStyle Solid>");   [ RR iiiii RR] 
        vR0.out.println("  > # end of DashedPattern");   [ RR iiiiii RR] 
        vR0.out.println("  <NumPoints 2>");   [ RR iiiiiii RR] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiii i.][ RR iiiiiii iR]
        b0.println(b1.append@extra("  <Point  ").append@extra(vi1).append@extra(" pt ").append@extra(vi2).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiii.... RR....] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiiiiii.... i.....][ RR iiiiiiiiiii.... iR....]
        b0.println(b1.append@extra("  <Point  ").append@extra(vi3).append@extra(" pt ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiiiiiii.... RR....] 
        vR0.out.println(" > # end of PolyLine");   [ RR iiiiiiiiiiiiiiii... RR....] 
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 30 swaps 16 any 0 found 0 drawLine
 
 method drawThinLine(IIII)V {
  +START:   #1
        vR0.out.println(" <PolyLine ");   [ RR i RR] 
        vR0.common@special();   [ RR i R.] 
        vR0.out.println("  <PenWidth  0.1 pt>");   [ RR ii RR] 
        vR0.out.println("  <ObColor `Black'>");   [ RR iii RR] 
        vR0.out.println("  <DashedPattern ");   [ RR iiii RR] 
        vR0.out.println("   <DashedStyle Dashed>");   [ RR iiiii RR] 
        vR0.out.println("   <NumSegments 2>");   [ RR iiiiii RR] 
        vR0.out.println("   <DashSegment  2.0 pt>");   [ RR iiiiiii RR] 
        vR0.out.println("   <DashSegment  4.0 pt>");   [ RR iiiiiiii RR] 
        vR0.out.println("  > # end of DashedPattern");   [ RR iiiiiiiii RR] 
        vR0.out.println("  <NumPoints 2>");   [ RR iiiiiiiiii RR] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiiiii i.][ RR iiiiiiiiii iR]
        b0.println(b1.append@extra("  <Point  ").append@extra(vi1).append@extra(" pt ").append@extra(vi2).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiiiiii.... RR....] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiiiiiiiii.... i.....][ RR iiiiiiiiiiiiii.... iR....]
        b0.println(b1.append@extra("  <Point  ").append@extra(vi3).append@extra(" pt ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiiiiiiiiii.... RR....] 
        vR0.out.println(" > # end of PolyLine");   [ RR iiiiiiiiiiiiiiiiiii... RR....] 
        return;   
  +END:   #1
 }
// Register: rd 18/18 wr 33 swaps 19 any 0 found 0 drawThinLine
 
 method drawEllipse(IIII)V {
  +START:   #1
        vR0.out.println(" <Ellipse ");   [ RR i RR] 
        vR0.common@special();   [ RR i R.] 
        vR0.out.println("  <Pen 0>");   [ RR ii RR] 
        vR0.out.println("  <Fill 0>");   [ RR iii RR] 
        vR0.out.println("  <ObColor `Black'>");   [ RR iiii RR] 
        vR0.out.println("  <PenWidth  0.5 pt>");   [ RR iiiii RR] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiii i.][ RR iiiii iR]
        b0.println(b1.append@extra("  <ShapeRect  ").append@extra(vi1).append@extra(" pt ").append@extra(vi2).append@extra(" pt ").append@extra(vi3).append@extra(" pt ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiiiiiii.i..i..... RR........] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiiii.i..i..... i.........][ RR iiiiiiiii.i..i..... iR........]
        b0.println(b1.append@extra("  <BRect  ").append@extra(vi1).append@extra(" pt ").append@extra(vi2).append@extra(" pt ").append@extra(vi3).append@extra(" pt ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiiiiiii.i..i..... RR........] 
        vR0.out.println(" > # end of Ellipse
");   [ RR iiiiiiiiiiiiiiiii..i..... RR........] 
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 40 swaps 26 any 0 found 0 drawEllipse
 
 method drawText(Ljava/lang/String;IIII)V {
  +START:   #1
        vR0.drawText@this(vR1,vi2,vi3,vi4,vi5,0,0);   [   iiiiiiRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 drawText
 
 method drawText(Ljava/lang/String;IIIIII)V {
  +START:   #1
        vR0.out.println(" <TextLine ");   [ RR i RR] 
        vR0.common@special();   [ RR i R.] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR i i.][ RR i iR]
        b0.println(b1.append@extra("  <Angle  ").append@extra((360-vi6)).append@extra(">").toString@extra());   [ RR iiiii.. RR..] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiii.. i...][ RR iiiii.. iR..]
        b0.println(b1.append@extra("  <TLOrigin  ").append@extra(vi2).append@extra(" pt ").append@extra(vi3).append@extra(" pt>").toString@extra());   [ RR iiiiiiiii.... RR....] 
        tswitch (vi5) B116 B128 B140 : B152;   
  +B116:   #1
        vR0.out.println("  <TLAlignment Left>");   [ RR i............ RR....] 
        goto +B162;   [ RR i............ ......]
  +B128:   #1
        vR0.out.println("  <TLAlignment Right>");   [ RR i............ RR....] 
        goto +B162;   [ RR i............ ......]
  +B140:   #1
        vR0.out.println("  <TLAlignment Center>");   [ RR i............ RR....] 
        goto +B162;   [ RR i............ ......]
  -B152:   #1
        throw new java/lang/Error("Unknown alignmenmt");   
  +B162:   #3
        vR0.out.println("  <ObColor `Black'>");   [ RR i............ RR....] 
        vR0.out.println("  <Font ");   [ RR ii........... RR....] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR ii........... i.....][ RR ii........... iR....]
        b0.println(b1.append@extra("   <FSize ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiii........ RR....] 
        if (vi7 & 1)==0 goto B231;   
  +B219:   #1
        vR0.out.println("   <FWeight `Bold'>");   [ RR i............ RR....] 
        goto +B240;   [ RR i............ ......]
  +B231:   #1
        vR0.out.println("   <FWeight `Regular'>");   [ RR i............ RR....] 
  +B240:   #1
        vR0.out.println("   <FLocked No>");   [ RR i............ RR....] 
        vR0.out.println("  > # end of Font");   [ RR ii........... RR....] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR ii........... i.....][ RR ii........... iR....]
        b0.println(b1.append@extra("  ").append@extra(vR0.mifstring@special(vR1)).toString@extra());   [ RR iiiii........ RR....] 
        vR0.out.println(" > # end of TextLine");   [ RR iiiiii....... RR....] 
        return;   
  +END:   #1
 }
// Register: rd 29/29 wr 47 swaps 25 any 2 found 0 drawText
 
 method drawRect(IIIILjava/lang/String;)V {
  +START:   #1
        vR0.out.println(" <Rectangle ");   [ RR i RR] 
        vR0.common@special();   [ RR i R.] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR i i.][ RR i iR]
        b0.println(b1.append@extra("  <Fill ").append@extra(vR5).append@extra(">").toString@extra());   [ RR iiii.. RR..] 
        vR0.out.println("  <ObColor `Black'>");   [ RR iiiii. RR..] 
        vR0.out.println("  <DashedPattern ");   [ RR iiiiii RR..] 
        vR0.out.println("   <DashedStyle Solid>");   [ RR iiiiiii RR..] 
        vR0.out.println("  > # end of DashedPattern");   [ RR iiiiiiii RR..] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiii i...][ RR iiiiiiii iR..]
        b0.println(b1.append@extra("  <ShapeRect  ").append@extra(vi1).append@extra(" pt ").append@extra(vi2).append@extra(" pt ").append@extra(vi3).append@extra(" pt ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiiii.i..i..... RR........] 
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiiiiiii.i..i..... i.........][ RR iiiiiiiiiiii.i..i..... iR........]
        b0.println(b1.append@extra("  <BRect  ").append@extra(vi1).append@extra(" pt ").append@extra(vi2).append@extra(" pt ").append@extra(vi3).append@extra(" pt ").append@extra(vi4).append@extra(" pt>").toString@extra());   [ RR iiiiiiiiiiiiiiiiii.i..i..... RR........] 
        vR0.out.println(" > # end of Rectangle");   [ RR iiiiiiiiiiiiiiiiiiii..i..... RR........] 
        return;   
  +END:   #1
 }
// Register: rd 16/16 wr 48 swaps 29 any 0 found 0 drawRect
 
 method common()V {
  +START:   #1
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RRii  i][ RRii  iR]
        b1 = b1.append@extra("  <Unique ");    [ RRii i RR] 
        b3 = vR0.unique;    
        b2 = b3;    
        vR0.unique = (b3+1);   
        b0.println(b1.append@extra(b2).append@extra(">").toString@extra());   [ RRii iii. RR.] 
        if vR0.useGroup==-1 goto B83;   
  +B49:   #1
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RRii .... i..][ RRii .... iR.]
        b0.println(b1.append@extra("  <GroupID ").append@extra(vR0.useGroup).append@extra(">").toString@extra());   [ RRii iiii.. RR..] 
  +B83:   #1
        return;   
  +END:   #1
 }
// Register: rd 14/14 wr 19 swaps 7 any 1 found 0 common
 
 method mifstring(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        vR2 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        vR2.append@extra("   <String `");   [R R i RR] 
        vR3 = vR1.toCharArray@extra();    [R R i R.] 
        vi4 = 0;    
  +B23:   #1
        if vi4>=vR3.length goto B61;   
  +B30:   #1
        if vR3[vi4]!=62 goto B46;   
  +B39:   #1
        vR2.append@extra(92);   [RRi R . iR] 
  +B46:   #1
        vR2.append@extra(vR3[vi4]);   [RRi R i cR] 
        vi4++;   
        goto +B23;   [RRi R i ..]
  +B61:   #1
        vR2.append@extra("'>
");   [RRi R i RR] 
        return vR2.toString@extra();   
  +END:   #1
 }
// Register: rd 13/13 wr 7 swaps 3 any 2 found 0 mifstring
}
