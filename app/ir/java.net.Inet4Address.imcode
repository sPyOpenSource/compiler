class java/net/Inet4Address {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.holder@this().hostName = 0;   
        vR0.holder@this().address = 0;   
        vR0.holder@this().family = 1;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/lang/String;[B)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.holder@this().hostName = vR1;   
        vR0.holder@this().family = 1;   
        if vR2==null goto B82;   
  +B24:   #1
        if vR2.length!=4 goto B82;   
  +B30:   #1
        vi3 = (vR2[3] & 255);    
        vi3 = (vi3 | ((vR2[2] << 8) & 65280));    
        vi3 = (vi3 | ((vR2[1] << 16) & 16711680));    
        vi3 = (vi3 | ((vR2[0] << 24) & -16777216));    
        vR0.holder@this().address = vi3;   
  +B82:   #2
        vR0.holder@this().originalHostName = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 21/21 wr 5 swaps 0 any 4 found 3 <init>
 
 method <init>(Ljava/lang/String;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.holder@this().hostName = vR1;   
        vR0.holder@this().family = 1;   
        vR0.holder@this().address = vi2;   
        vR0.holder@this().originalHostName = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 12/12 wr 1 swaps 0 any 0 found 3 <init>
 
 method writeReplace()Ljava/lang/Object; {
  +START:   #1
        vR1 = new java/net/InetAddress();    [ R  i][ R  iR]
        vR1.holder().hostName = vR0.holder@this().getHostName();   
        vR1.holder().address = vR0.holder@this().getAddress();   
        vR1.holder().family = 2;   
        return vR1;   
  +END:   #1
 }
// Register: rd 9/9 wr 6 swaps 0 any 0 found 0 writeReplace
 
 method isMulticastAddress()Z {
  +START:   #1
        if (vR0.holder@this().getAddress() & -268435456)!=-536870912 goto B19;   
  +B15:   #1
        b0 = 1;    
        goto +B20b0;   forward return[ i . .]
  +B19:   #1
        b0 = 0;    
  +B20b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 isMulticastAddress
 
 method isAnyLocalAddress()Z {
  +START:   #1
        if vR0.holder@this().getAddress()!=0 goto B14;   
  +B10:   #1
        b0 = 1;    
        goto +B15b0;   forward return[ i . .]
  +B14:   #1
        b0 = 0;    
  +B15b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 isAnyLocalAddress
 
 method isLoopbackAddress()Z {
  +START:   #1
        vR1 = vR0.getAddress@extra();    [ i  R] 
        if vR1[0]!=127 goto B17;   
  +B13:   #1
        b0 = 1;    
        goto +B18b0;   forward return[R i  .]
  +B17:   #1
        b0 = 0;    
  +B18b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 isLoopbackAddress
 
 method isLinkLocalAddress()Z {
  +START:   #1
        vi1 = vR0.holder@this().getAddress();    [ i . R] [ i R R] 
        if ((vi1 >>> 24) & 255)!=169 goto B40;   
  +B22:   #1
        if ((vi1 >>> 16) & 255)!=254 goto B40;   
  +B36:   #1
        b0 = 1;    
        goto +B41b0;   forward return[i i . .]
  +B40:   #2
        b0 = 0;    
  +B41b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 0 any 2 found 0 isLinkLocalAddress
 
 method isSiteLocalAddress()Z {
  +START:   #1
        vi1 = vR0.holder@this().getAddress();    [ i . R] [ i R R] 
        if ((vi1 >>> 24) & 255)==10 goto B76;   
  +B21:   #1
        if ((vi1 >>> 24) & 255)!=172 goto B48;   
  +B35:   #1
        if ((vi1 >>> 16) & 240)==16 goto B76;   
  +B48:   #1
        if ((vi1 >>> 24) & 255)!=192 goto B80;   
  +B62:   #1
        if ((vi1 >>> 16) & 255)!=168 goto B80;   
  +B76:   #2
        b0 = 1;    
        goto +B81b0;   forward return[i i . .]
  +B80:   #2
        b0 = 0;    
  +B81b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 0 any 5 found 0 isSiteLocalAddress
 
 method isMCGlobal()Z {
  +START:   #1
        vR1 = vR0.getAddress@extra();    [ i  R] 
        if (vR1[0] & 255)<224 goto B60;   
  +B18:   #1
        if (vR1[0] & 255)>238 goto B60;   
  +B31:   #1
        if (vR1[0] & 255)!=224 goto B56;   
  +B44:   #1
        if vR1[1]!=0 goto B56;   
  +B50:   #1
        if vR1[2]==0 goto B60;   
  +B56:   #2
        b0 = 1;    
        goto +B61b0;   forward return[R i  .]
  +B60:   #3
        b0 = 0;    
  +B61b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 0 found 0 isMCGlobal
 
 method isMCNodeLocal()Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 isMCNodeLocal
 
 method isMCLinkLocal()Z {
  +START:   #1
        vi1 = vR0.holder@this().getAddress();    [ i . R] [ i R R] 
        if ((vi1 >>> 24) & 255)!=224 goto B48;   
  +B22:   #1
        if ((vi1 >>> 16) & 255)!=0 goto B48;   
  +B33:   #1
        if ((vi1 >>> 8) & 255)!=0 goto B48;   
  +B44:   #1
        b0 = 1;    
        goto +B49b0;   forward return[i i . .]
  +B48:   #3
        b0 = 0;    
  +B49b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 3 found 0 isMCLinkLocal
 
 method isMCSiteLocal()Z {
  +START:   #1
        vi1 = vR0.holder@this().getAddress();    [ i . R] [ i R R] 
        if ((vi1 >>> 24) & 255)!=239 goto B40;   
  +B22:   #1
        if ((vi1 >>> 16) & 255)!=255 goto B40;   
  +B36:   #1
        b0 = 1;    
        goto +B41b0;   forward return[i i . .]
  +B40:   #2
        b0 = 0;    
  +B41b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 0 any 2 found 0 isMCSiteLocal
 
 method isMCOrgLocal()Z {
  +START:   #1
        vi1 = vR0.holder@this().getAddress();    [ i . R] [ i R R] 
        if ((vi1 >>> 24) & 255)!=239 goto B54;   
  +B22:   #1
        if ((vi1 >>> 16) & 255)<192 goto B54;   
  +B36:   #1
        if ((vi1 >>> 16) & 255)>195 goto B54;   
  +B50:   #1
        b0 = 1;    
        goto +B55b0;   forward return[i i . .]
  +B54:   #3
        b0 = 0;    
  +B55b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 3 found 0 isMCOrgLocal
 
 method getAddress()[B {
  +START:   #1
        vi1 = vR0.holder@this().getAddress();    [  . R] [  R R] 
        vR2 = new byte[4];    
        vR2[0] = (byte)((vi1 >>> 24) & 255);   
        vR2[1] = (byte)((vi1 >>> 16) & 255);   
        vR2[2] = (byte)((vi1 >>> 8) & 255);   
        vR2[3] = (byte)(vi1 & 255);   
        return vR2;   
  +END:   #1
 }
// Register: rd 10/10 wr 3 swaps 0 any 0 found 0 getAddress
 
 method getHostAddress()Ljava/lang/String; {
  +START:   #1
        return numericToTextFormat@special(vR0.getAddress@extra());   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getHostAddress
 
 method hashCode()I {
  +START:   #1
        return vR0.holder@this().getAddress();   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 hashCode
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1==null goto B35;   
  +B4:   #1
        if (vR1 instanceof java/net/Inet4Address)==0 goto B35;   
  +B11:   #1
        if (java/net/InetAddress)(vR1).holder().getAddress()!=vR0.holder@this().getAddress() goto B35;   
  +B31:   #1
        b0 = 1;    
        goto +B36b0;   forward return[ i .. ..]
  +B35:   #3
        b0 = 0;    
  +B36b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 7/7 wr 4 swaps 0 any 1 found 1 equals
 
 method numericToTextFormat([B)Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra((vR0[0] & 255)).append@extra(".").append@extra((vR0[1] & 255)).append@extra(".").append@extra((vR0[2] & 255)).append@extra(".").append@extra((vR0[3] & 255)).toString@extra();   
  +END:   #1
 }
// Register: rd 5/5 wr 15 swaps 11 any 0 found 0 numericToTextFormat
}
