class gnu/java/security/DefaultPermissionCollection {
 
 method <init>(Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        b1 = new java/util/Hashtable();    [ RR  i][ RR  iR]
        vR0.perms = b1;   
  +B15:   #1
        vR0.permcls = forName@special(vR1);   
  +B23:   #1
        goto +B39;   forward return[ RR  ..]
  -H26<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        throw new java/lang/IllegalArgumentException(vR2.getMessage());   
  +B39:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
15 - 23 handler 26 type 26
 }
// Register: rd 6/6 wr 3 swaps 0 any 0 found 0 <init>
 
 method add(Ljava/security/Permission;)V {
  +START:   #1
        if vR0.isReadOnly@this()==0 goto B17;   
  -B7:   #1
        throw new java/lang/SecurityException("PermissionCollection is read only");   
  +B17:   #1
        if vR0.permcls.isInstance@extra(vR1)!=0 goto B61;   
  -B28:   #1
        b0 = new java/lang/IllegalArgumentException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR . i..][ RRR . iR.]
        b1.<init>@special(b2.append@extra("Wrong permission type: ").append@extra(vR1.getClass().getName@extra()).toString@extra());   [ RRR iii. RR.] 
        throw b0;   
  +B61:   #1
        if vR0.perms.get(vR1.getName())==null goto B105;   
  -B75:   #1
        b0 = new java/lang/IllegalArgumentException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR .... i..][ RRR .... iR.]
        b1.<init>@special(b2.append@extra("Duplicate permission: ").append@extra(vR1.getName()).toString@extra());   [ RRR iii. RR.] 
        throw b0;   
  +B105:   #1
        vR0.perms.put(vR1.getName(),vR1);   [ RRR i... RRR] 
        return;   
  +END:   #1
 }
// Register: rd 17/17 wr 20 swaps 8 any 2 found 0 add
 
 method implies(Ljava/security/Permission;)Z {
  +START:   #1
        vR2 = vR0.perms.get(vR1.getName());    [  i RR] 
        if vR2!=null goto B18;   
  +B16:   #1
        return 0;   
  +B18:   #1
        if (vR2 instanceof java/security/Permission)!=0 goto B27;   
  +B25:   #1
        return 0;   
  +B27:   #1
        vR3 = (java/security/Permission)(vR2);    
        return vR3.implies(vR1);   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 1 any 2 found 1 implies
 
 method elements()Ljava/util/Enumeration; {
  +START:   #1
        return vR0.perms.elements();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 elements
}
