class java/util/AbstractQueue {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method add(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0.offer@this(vR1)==0 goto B10;   
  +B8:   #1
        return 1;   
  -B10:   #1
        throw new java/lang/IllegalStateException("Queue full");   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 add
 
 method offer(Ljava/lang/Object;)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 offer
 
 method poll()Ljava/lang/Object; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 poll
 
 method peek()Ljava/lang/Object; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 peek
 
 method remove()Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.poll@this();    [ R  R] 
        if vR1==null goto B11;   
  +B9:   #1
        return vR1;   
  -B11:   #1
        throw new java/util/NoSuchElementException();   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 1 found 0 remove
 
 method element()Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.peek@this();    [ R  R] 
        if vR1==null goto B11;   
  +B9:   #1
        return vR1;   
  -B11:   #1
        throw new java/util/NoSuchElementException();   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 1 found 0 element
 
 method clear()V {
  +START:   #2
        if vR0.poll@this()==null goto B10;   
  +B7:   #1
        goto +START;   [   .]
  +B10:   #1
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 clear
 
 method addAll(Ljava/util/Collection;)Z {
  +START:   #1
        if vR1!=null goto B12;   
  -B4:   #1
        throw new java/lang/NullPointerException();   
  +B12:   #1
        if vR1!=vR0 goto B25;   
  -B17:   #1
        throw new java/lang/IllegalArgumentException();   
  +B25:   #1
        vi2 = 0;    
        vR3 = vR1.iterator();    [i R  R.] 
  +B34:   #1
        if vR3.hasNext()==0 goto B65;   
  +B43:   #1
        vR4 = vR3.next();    [iR R  R.] 
        if vR0.add@this(vR4)==0 goto B62;   
  +B60:   #1
        vi2 = 1;    
  +B62:   #1
        goto +B34;   [iRR R  ..]
  +B65:   #1
        return vi2;   
  +END:   #1
 }
// Register: rd 8/8 wr 3 swaps 0 any 2 found 0 addAll
}
