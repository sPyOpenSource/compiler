class jx/net/protocol/ip/IPv4Utils {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method calcChecksum(Ljx/zero/Memory;II)S {
  +START:   #1
        return calcChecksum@special(vR0,vi1,vi2,-1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 calcChecksum
 
 method calcChecksum(Ljx/zero/Memory;III)S {
  +START:   #1
        vi4 = vR0.size();    [   R] 
        vi5 = (vi3 ^ -1);    
        vi6 = 0;    
  +B16:   #1
        if vi6>=vi2 goto B94;   
  +B22:   #1
        if (vi6+1)<vi4 goto B49;   
  +B31:   #1
        vi7 = (vR0.get8((vi1+vi6)) << 8);    
        goto +B63;   [iiii  i ..]
  +B49:   #1
        vi7 = vR0.get16(((vi1+vi6) >> 1));    [iiii  i iR] 
  +B63:   #1
        vi5 = (vi5+vi7);    
        if (vi5 & -65536)==0 goto B88;   
  +B78:   #1
        vi5++;   
        vi5 = (vi5 & 65535);    
  +B88:   #1
        vi6+=2;   
        goto +B16;   [iiii  . ..]
  +B94:   #1
        return (short)(vi5 ^ -1);   
  +END:   #1
 }
// Register: rd 19/19 wr 11 swaps 2 any 8 found 0 calcChecksum
}
