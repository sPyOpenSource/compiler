class jx/devices/pci/CapabilityAGP {
 
 method <init>(Ljx/devices/pci/PCIDevice;I)V {
  +START:   #1
        vR0.<init>@special(2,vR1,vi2);   [   iRiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method getRevision()B {
  +START:   #1
        return (byte)vR0.device.readPackedConfig((vR0.baseRegister+0),16711680,16);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 getRevision
 
 method getStatus()I {
  +START:   #1
        return vR0.device.readConfig((vR0.baseRegister+1));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 getStatus
 
 method getCommand()I {
  +START:   #1
        return vR0.device.readConfig((vR0.baseRegister+2));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 getCommand
 
 method setCommand(II)V {
  +START:   #1
        vR0.device.writePackedConfig((vR0.baseRegister+2),vi1,vi2);   [  i iiiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 setCommand
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("AGP(0x").append@extra(toHexString@special(vR0.baseRegister)).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 2/2 wr 8 swaps 3 any 0 found 0 toString
}
