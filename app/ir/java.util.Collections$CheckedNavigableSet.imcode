class java/util/Collections$CheckedNavigableSet {
 
 method <init>(Ljava/util/NavigableSet;Ljava/lang/Class;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR2);   [   RRR] 
        vR0.ns = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method lower(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.lower(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lower
 
 method floor(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.floor(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 floor
 
 method ceiling(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.ceiling(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 ceiling
 
 method higher(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.higher(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 higher
 
 method pollFirst()Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.pollFirst();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 pollFirst
 
 method pollLast()Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.pollLast();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 pollLast
 
 method descendingSet()Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.descendingSet(),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 descendingSet
 
 method descendingIterator()Ljava/util/Iterator; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.descendingSet(),vR0.type).iterator();   
  +END:   #1
 }
// Register: rd 2/2 wr 3 swaps 0 any 0 found 0 descendingIterator
 
 method subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.subSet(vR1,1,vR2,0),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 subSet
 
 method headSet(Ljava/lang/Object;)Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.headSet(vR1,0),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 headSet
 
 method tailSet(Ljava/lang/Object;)Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.tailSet(vR1,1),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 tailSet
 
 method subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.subSet(vR1,vi2,vR3,vi4),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 subSet
 
 method headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.headSet(vR1,vi2),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 headSet
 
 method tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet; {
  +START:   #1
        return checkedNavigableSet@special(vR0.ns.tailSet(vR1,vi2),vR0.type);   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 tailSet
 
 method tailSet(Ljava/lang/Object;)Ljava/util/SortedSet; {
  +START:   #1
        return vR0.tailSet@this(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 tailSet
 
 method headSet(Ljava/lang/Object;)Ljava/util/SortedSet; {
  +START:   #1
        return vR0.headSet@this(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 headSet
 
 method subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet; {
  +START:   #1
        return vR0.subSet@this(vR1,vR2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 subSet
}
