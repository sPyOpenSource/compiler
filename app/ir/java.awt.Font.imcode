class java/awt/Font {
 
 method decode(Ljava/lang/String;)Ljava/awt/Font; {
  +START:   #1
        vR1 = 0;    
        vi2 = 0;    
        vi3 = 12;    
        vR4 = new java/util/StringTokenizer(vR0,"-");    [ R  i][ R . iRRR]
  +B19:   #5
        if vR4.hasMoreTokens()==0 goto B124;   
  +B27:   #1
        vR5 = vR4.nextToken();    [RiiR R . R...] 
        if vR1!=null goto B44;   
  +B38:   #1
        vR1 = vR5;    
        goto +B19;   [RiiRR R . ....]
  +B44:   #1
        if vR5.toUpperCase@extra().equals@extra("BOLD")==0 goto B62;   
  +B57:   #1
        vi2 = 1;    
        goto +B19;   [RiiRR R .. ....]
  +B62:   #1
        if vR5.toUpperCase@extra().equals@extra("ITALIC")==0 goto B80;   
  +B75:   #1
        vi2 = 2;    
        goto +B19;   [RiiRR R .. ....]
  +B80:   #1
        if vR5.toUpperCase@extra().equals@extra("BOLDITALIC")==0 goto B98;   
  +B93:   #1
        vi2 = 3;    
        goto +B19;   [RiiRR R .. ....]
  +B98:   #1
        vi6 = 0;    
  +B101:   #1
        vi6 = parseInt@special(vR5);    [RiiRRi R .. R...]
  +B108:   #1
        goto +B113;   [RiiRRi R .. ....]
  +H111<caught exception>:   #1 reference
        vR7 = <caught exception>;    
  +B113:   #1
        if vi6==0 goto B121;   
  +B118:   #1
        vi3 = vi6;    
  +B121:   #1
        goto +B19;   [RiiRRi R .. ....]
  +B124:   #1
        return new java/awt/Font(vR1,vi2,vi3);   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
101 - 108 handler 111 type 40
 }
// Register: rd 15/15 wr 17 swaps 3 any 4 found 0 decode
 
 method getFont(Ljava/lang/String;Ljava/awt/Font;)Ljava/awt/Font; {
  +START:   #1
        vR2 = getProperty@special(vR0);    [   R]
        if vR2==null goto B14;   
  +B9:   #1
        return decode@special(vR2);   
  +B14:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 1 found 0 getFont
 
 method getFont(Ljava/lang/String;)Ljava/awt/Font; {
  +START:   #1
        return getFont@special(vR0,0);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getFont
 
 method <init>(Ljava/lang/String;II)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.name = vR1;   
        vR0.style = vi2;   
        vR0.size = vi3;   
        vR0.pointSize = (float)vi3;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method getName()Ljava/lang/String; {
  +START:   #1
        return vR0.name;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getName
 
 method getSize()I {
  +START:   #1
        return vR0.size;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getSize
 
 method getSize2D()F {
  +START:   #1
        return vR0.pointSize;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getSize2D
 
 method isPlain()Z {
  +START:   #1
        if vR0.style!=0 goto B9;   
  +B7:   #1
        return 1;   
  +B9:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isPlain
 
 method isBold()Z {
  +START:   #1
        if vR0.style==1 goto B16;   
  +B8:   #1
        if vR0.style!=3 goto B18;   
  +B16:   #1
        return 1;   
  +B18:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 isBold
 
 method isItalic()Z {
  +START:   #1
        if vR0.style==2 goto B16;   
  +B8:   #1
        if vR0.style!=3 goto B18;   
  +B16:   #1
        return 1;   
  +B18:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 isItalic
 
 method getFamily()Ljava/lang/String; {
  +START:   #1
        return vR0.name;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getFamily
 
 method getStyle()I {
  +START:   #1
        return vR0.style;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getStyle
 
 method getPeer()Ljava/awt/peer/FontPeer; {
  +START:   #1
        if vR0.peer==null goto B12;   
  +B7:   #1
        return vR0.peer;   
  +B12:   #1
        return vR0.peer;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 getPeer
 
 method hashCode()I {
  +START:   #1
        b0 = new java/lang/String;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra(vR0.name).append@extra(vR0.size).append@extra(vR0.style).toString@extra());   [ RRR iiii.. RR..] 
        return b0.hashCode@extra();   
  +END:   #1
 }
// Register: rd 7/7 wr 10 swaps 4 any 1 found 0 hashCode
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1!=null goto B6;   
  +B4:   #1
        return 0;   
  +B6:   #1
        if (vR1 instanceof java/awt/Font)!=0 goto B15;   
  +B13:   #1
        return 0;   
  +B15:   #1
        vR2 = (java/awt/Font)(vR1);    
        if vR2.name.equals@extra(vR0.name)!=0 goto B36;   
  +B34:   #1
        return 0;   
  +B36:   #1
        if vR2.size==vR0.size goto B49;   
  +B47:   #1
        return 0;   
  +B49:   #1
        if vR2.style==vR0.style goto B62;   
  +B60:   #1
        return 0;   
  +B62:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 10/10 wr 2 swaps 1 any 2 found 1 equals
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("(name=").append@extra(vR0.name).append@extra(",style=").append@extra(vR0.style).append@extra(",size=").append@extra(vR0.size).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 5/5 wr 18 swaps 12 any 0 found 0 toString
}
