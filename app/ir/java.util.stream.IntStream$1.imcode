class java/util/stream/IntStream$1 {
 
 method <init>(ILjava/util/function/IntUnaryOperator;)V {
  +START:   #1
        vR0.val$seed = vi1;   
        vR0.val$f = vR2;   
        vR0.<init>@special();   [   R] 
        vR0.t = vR0.val$seed;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method hasNext()Z {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 hasNext
 
 method nextInt()I {
  +START:   #1
        vi1 = vR0.t;    
        vR0.t = vR0.val$f.applyAsInt(vR0.t);   
        return vi1;   
  +END:   #1
 }
// Register: rd 5/5 wr 2 swaps 1 any 0 found 0 nextInt
 
 method forEachRemaining(Ljava/util/function/IntConsumer;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 forEachRemaining
 
 method next()Ljava/lang/Integer; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 next
 
 method remove()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 remove
 
 method forEachRemaining(Ljava/lang/Object;)V {
  +START:   #1
        vR0.forEachRemaining@this((java/util/function/IntConsumer)(vR1));   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 1 forEachRemaining
 
 method next()Ljava/lang/Object; {
  +START:   #1
        return vR0.next@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 next
}
