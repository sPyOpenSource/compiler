class java/security/spec/RSAPrivateCrtKeySpec {
 
 method <init>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR3);   [   RRR] 
        vR0.publicExponent = vR2;   
        vR0.primeP = vR4;   
        vR0.primeQ = vR5;   
        vR0.primeExponentP = vR6;   
        vR0.primeExponentQ = vR7;   
        vR0.crtCoefficient = vR8;   
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 0 swaps 0 any 0 found 0 <init>
 
 method getPublicExponent()Ljava/math/BigInteger; {
  +START:   #1
        return vR0.publicExponent;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPublicExponent
 
 method getPrimeP()Ljava/math/BigInteger; {
  +START:   #1
        return vR0.primeP;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPrimeP
 
 method getPrimeQ()Ljava/math/BigInteger; {
  +START:   #1
        return vR0.primeQ;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPrimeQ
 
 method getPrimeExponentP()Ljava/math/BigInteger; {
  +START:   #1
        return vR0.primeExponentP;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPrimeExponentP
 
 method getPrimeExponentQ()Ljava/math/BigInteger; {
  +START:   #1
        return vR0.primeExponentQ;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPrimeExponentQ
 
 method getCrtCoefficient()Ljava/math/BigInteger; {
  +START:   #1
        return vR0.crtCoefficient;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getCrtCoefficient
}
