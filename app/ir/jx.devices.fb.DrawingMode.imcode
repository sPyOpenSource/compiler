class jx/devices/fb/DrawingMode {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.value = 0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(I)V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        vi2 = vR0.getValue@extra();    [ R  R] 
        if vi2< 0 goto B18;   
  +B13:   #1
        if vi2<=4 goto B28;   
  -B18:   #1
        throw new java/lang/Error("DrawingMode::DrawingMode() unknown drawing mode!");   
  +B28:   #1
        vR0.value = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 2 found 0 <init>
 
 method <init>(Ljx/devices/fb/DrawingMode;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.value = vR1.value;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method getValue()I {
  +START:   #1
        return (-13 & vR0.value);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getValue
 
 method setValue(I)V {
  +START:   #1
        if vi1< 0 goto B9;   
  +B4:   #1
        if vi1<=3 goto B19;   
  -B9:   #1
        throw new java/lang/Error("DrawingMode::DrawingMode() unknown drawing mode!");   
  +B19:   #1
        vR0.value = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 2 found 0 setValue
 
 method isSet(I)Z {
  +START:   #1
        if vR0.getValue@extra()!=vi1 goto B12;   
  +B8:   #1
        b0 = 1;    
        goto +B13b0;   forward return[ i  .]
  +B12:   #1
        b0 = 0;    
  +B13b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 isSet
 
 method isSet(Ljx/devices/fb/DrawingMode;)Z {
  +START:   #1
        if vR0.getValue@extra()!=vR1.getValue@extra() goto B15;   
  +B11:   #1
        b0 = 1;    
        goto +B16b0;   forward return[ i . .]
  +B15:   #1
        b0 = 0;    
  +B16b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 isSet
 
 method isScaleable()Z {
  +START:   #1
        if (vR0.value & 8)!=8 goto B16;   
  +B12:   #1
        b0 = 1;    
        goto +B17b0;   forward return[ i  ]
  +B16:   #1
        b0 = 0;    
  +B17b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isScaleable
 
 method isDebug()Z {
  +START:   #1
        if (vR0.value & 4)!=4 goto B14;   
  +B10:   #1
        b0 = 1;    
        goto +B15b0;   forward return[ i  ]
  +B14:   #1
        b0 = 0;    
  +B15b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isDebug
 
 method toString()Ljava/lang/String; {
  +START:   #1
        if vR0!=null goto B7;   
  +B4:   #1
        return "<null>";   
  +B7:   #1
        tswitch (vR0.getValue@extra()) B36 B42 B48 : B54;   
  +B36:   #1
        vR1 = "DM_COPY";    
        goto +B82;   [R R  .]
  +B42:   #1
        vR1 = "DM_INVERT";    
        goto +B82;   [R R  .]
  +B48:   #1
        vR1 = "DM_OVER";    
        goto +B82;   [R R  .]
  +B54:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        vR1 = b0.append@extra("DM_UNKNOWN(").append@extra(vR0.value).append@extra(")").toString@extra();    [ R iii... R...] [ R iiiR.. RR..] [ R iiiRR. RiR.] [ R iiiRRR RiRR] 
  +B82:   #3
        if vR0.isScaleable@extra()==0 goto B109;   
  +B89:   #1
        b0 = new java/lang/StringBuilder();    [ R ...... i...][ R ...... iR..]
        vR1 = b0.append@extra(vR1).append@extra("& DM_SCALE").toString@extra();    [R R i..... R...] [R R iR.... RR..] [R R iRR... RRR.] 
  +B109:   #1
        if vR0.isDebug@extra()==0 goto B136;   
  +B116:   #1
        b0 = new java/lang/StringBuilder();    [ R ...... i...][ R ...... iR..]
        vR1 = b0.append@extra(vR1).append@extra("& DM_DEBUG").toString@extra();    [R R i..... R...] [R R iR.... RR..] [R R iRR... RRR.] 
  +B136:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 9/9 wr 21 swaps 5 any 1 found 0 toString
 
 method <clinit>()V {
  +START:   #1
        b0 = new jx/devices/fb/DrawingMode(3);    [ R  i][ R . iiR]
        OVER = b0;   
        b0 = new jx/devices/fb/DrawingMode(1);    [ R . i..][ R . iiR]
        COPY = b0;   
        b0 = new jx/devices/fb/DrawingMode(2);    [ R . i..][ R . iiR]
        INVERT = b0;   
        b0 = new jx/devices/fb/DrawingMode(4);    [ R . i..][ R . iiR]
        DEBUG = b0;   
        b0 = new jx/devices/fb/DrawingMode(9);    [ R . i..][ R . iiR]
        SCALEDCOPY = b0;   
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 10 swaps 0 any 0 found 5 <clinit>
}
