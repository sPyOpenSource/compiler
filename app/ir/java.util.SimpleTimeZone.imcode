class java/util/SimpleTimeZone {
 
 method <init>(ILjava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.dstSavings = 3600000;   
        vR0.monthLength = monthArr;   
        vR0.serialVersionOnStream = 1;   
        vR0.rawOffset = vi1;   
        vR0.setID@this(vR2);   [   RR] 
        vR0.useDaylight = 0;   
        vR0.startYear = 0;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(ILjava/lang/String;IIIIIIII)V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        vR0.dstSavings = 3600000;   
        vR0.monthLength = monthArr;   
        vR0.serialVersionOnStream = 1;   
        vR0.rawOffset = vi1;   
        vR0.setID@this(vR2);   [ R  RR] 
        vR0.useDaylight = 1;   
        vR0.setStartRule@this(vi3,vi4,vi5,vi6);   [ R  iiiiR] 
        vR0.setEndRule@this(vi7,vi8,vi9,vi10);   [ R  iiiiR] 
        if vi3!=vi7 goto B76;   
  -B66:   #1
        throw new java/lang/IllegalArgumentException("startMonth and endMonth must be different");   
  +B76:   #1
        vR0.startYear = 0;   
        return;   
  +END:   #1
 }
// Register: rd 14/14 wr 1 swaps 0 any 1 found 0 <init>
 
 method <init>(ILjava/lang/String;IIIIIIIII)V {
  +START:   #1
        vR0.<init>@special(vi1,vR2,vi3,vi4,vi5,vi6,vi7,vi8,vi9,vi10);   [   iiiiiiiiRiR] 
        vR0.dstSavings = vi11;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method setStartYear(I)V {
  +START:   #1
        vR0.startYear = vi1;   
        vR0.useDaylight = 1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 setStartYear
 
 method checkRule(III)I {
  +START:   #1
        vi4 = vR0.getDaysInMonth@special(vi1,1);    [ R  iiR] 
        if vi3!=0 goto B34;   
  +B12:   #1
        if vi2<=0 goto B22;   
  +B16:   #1
        if vi2<=vi4 goto B32;   
  -B22:   #1
        throw new java/lang/IllegalArgumentException("day out of range");   
  +B32:   #1
        return 1;   
  +B34:   #1
        if vi3<=0 goto B81;   
  +B38:   #1
        if abs@special(vi2)<=((vi4+6)/7) goto B63;   
  -B53:   #1
        throw new java/lang/IllegalArgumentException("dayOfWeekInMonth out of range");   
  +B63:   #1
        if vi3<=7 goto B79;   
  -B69:   #1
        throw new java/lang/IllegalArgumentException("dayOfWeek out of range");   
  +B79:   #1
        return 2;   
  +B81:   #1
        if vi2==0 goto B94;   
  +B85:   #1
        if abs@special(vi2)<=vi4 goto B104;   
  -B94:   #1
        throw new java/lang/IllegalArgumentException("day out of range");   
  +B104:   #1
        if vi3>=-7 goto B120;   
  -B110:   #1
        throw new java/lang/IllegalArgumentException("dayOfWeek out of range");   
  +B120:   #1
        if vi2>=0 goto B126;   
  +B124:   #1
        return 4;   
  +B126:   #1
        return 3;   
  +END:   #1
 }
// Register: rd 18/18 wr 7 swaps 1 any 8 found 0 checkRule
 
 method setStartRule(IIII)V {
  +START:   #1
        vR0.startMode = vR0.checkRule@special(vi1,vi2,vi3);   
        vR0.startMonth = vi1;   
        vR0.startDay = abs@special(vi2);   
        vR0.startDayOfWeek = abs@special(vi3);   
        vR0.startTime = vi4;   
        vR0.useDaylight = 1;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 setStartRule
 
 method setEndRule(IIII)V {
  +START:   #1
        vR0.endMode = vR0.checkRule@special(vi1,vi2,vi3);   
        vR0.endMonth = vi1;   
        vR0.endDay = abs@special(vi2);   
        vR0.endDayOfWeek = abs@special(vi3);   
        vR0.endTime = vi4;   
        vR0.useDaylight = 1;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 setEndRule
 
 method getOffset(IIIIII)I {
  +START:   #1
        vi7 = 0;    
        if vR0.useDaylight==0 goto B153;   
  +B10:   #1
        if vi1!=1 goto B153;   
  +B15:   #1
        if vi2<vR0.startYear goto B153;   
  +B23:   #1
        if vR0.isBefore@special(vi2,vi3,vi4,vi5,vi6,vR0.startMode,vR0.startMonth,vR0.startDay,vR0.startDayOfWeek,vR0.startTime)!=0 goto B62;   
  +B58:   #1
        b0 = 1;    
        goto +B63b0;   [i i ..... ...........]
  +B62:   #1
        b0 = 0;    
  +B63b0:   #1 int
        vi8 = b0;    
        vi9 = vR0.isBefore@special(vi2,vi3,vi4,vi5,vi6,vR0.endMode,vR0.endMonth,vR0.endDay,vR0.endDayOfWeek,vR0.endTime);    [ii i iiiii iiiiiiiiiiR] 
        if vR0.startMonth>=vR0.endMonth goto B133;   
  +B110:   #1
        if vi8==0 goto B127;   
  +B115:   #1
        if vi9==0 goto B127;   
  +B120:   #1
        b0 = vR0.dstSavings;    
        goto +B128b0;   [iii i ..... ...........]
  +B127:   #2
        b0 = 0;    
  +B128b0:   #1 int
        vi7 = b0;    
        goto +B153;   forward return[iii i ..... ...........]
  +B133:   #1
        if vi9!=0 goto B143;   
  +B138:   #1
        if vi8==0 goto B150;   
  +B143:   #1
        b0 = vR0.dstSavings;    
        goto +B151b0;   [iii i ..... ...........]
  +B150:   #1
        b0 = 0;    
  +B151b0:   #1 int
        vi7 = b0;    
  +B153:   #4
        return (vR0.rawOffset+vi7);   
  +END:   #1
 }
// Register: rd 29/29 wr 20 swaps 2 any 9 found 0 getOffset
 
 method getRawOffset()I {
  +START:   #1
        return vR0.rawOffset;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getRawOffset
 
 method setRawOffset(I)V {
  +START:   #1
        vR0.rawOffset = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setRawOffset
 
 method getDSTSavings()I {
  +START:   #1
        return vR0.dstSavings;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDSTSavings
 
 method useDaylightTime()Z {
  +START:   #1
        return vR0.useDaylight;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 useDaylightTime
 
 method getDaysInMonth(II)I {
  +START:   #1
        if vi1!=1 goto B34;   
  +B5:   #1
        if (vi2 & 3)!=0 goto B31;   
  +B11:   #1
        if (vi2%100)!=0 goto B26;   
  +B18:   #1
        if (vi2%400)!=0 goto B31;   
  +B26:   #1
        b0 = 29;    
        goto +B33b0;   forward return[ i  ]
  +B31:   #2
        b0 = 28;    
  +B33b0:   #1 int
        return b0;   
  +B34:   #1
        if vi1>=7 goto B47;   
  +B40:   #1
        return (31-(vi1 & 1));   
  +B47:   #1
        return ((vi1 & 1)+30);   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 3 found 0 getDaysInMonth
 
 method isBefore(IIIIIIIIII)Z {
  +START:   #1
        if vi2==vi7 goto B18;   
  +B6:   #1
        if vi2>=vi7 goto B16;   
  +B12:   #1
        b0 = 1;    
        goto +B17b0;   forward return[ ii  ]
  +B16:   #1
        b0 = 0;    
  +B17b0:   #1 int
        return b0;   
  +B18:   #1
        tswitch (vi6) B52 B70 B150 B147 : B198;   
  +B52:   #1
        if vi3==vi8 goto B198;   
  +B58:   #1
        if vi3>=vi8 goto B68;   
  +B64:   #1
        b0 = 1;    
        goto +B69b0;   forward return[ ii  ]
  +B68:   #1
        b0 = 0;    
  +B69b0:   #1 int
        return b0;   
  +B70:   #1
        vi3 = (vi3+(vi9-vi4));    
        if vi8>=0 goto B98;   
  +B83:   #1
        vi3 = (vi3-(vR0.getDaysInMonth@special(vi2,vi1)+7));    
        goto +B101;   [ ii  ...]
  +B98:   #1
        vi3+=6;   
  +B101:   #1
        vi11 = (vi3/7);    
        if vi11==vi8 goto B127;   
  +B114:   #1
        if vi11>=vi8 goto B125;   
  +B121:   #1
        b0 = 1;    
        goto +B126b0;   forward return[i ii  ...]
  +B125:   #1
        b0 = 0;    
  +B126b0:   #1 int
        return b0;   
  +B127:   #1
        if vi4==vi9 goto B198;   
  +B134:   #1
        if vi4>=vi9 goto B145;   
  +B141:   #1
        b0 = 1;    
        goto +B146b0;   forward return[i ii  ...]
  +B145:   #1
        b0 = 0;    
  +B146b0:   #1 int
        return b0;   
  +B147:   #1
        vi8+=-6;   
  +B150:   #1
        b0 = vi3;    
        if vi4>=vi9 goto B163;   
  +B158b0:   #1 int
        b1 = 7;    
        goto +B164b0b1;   [i ii  ...]
  +B163b0:   #1 int
        b1 = 0;    
  +B164b0b1:   #1 int int
        vi3 = (b0-((b1+vi4)-vi9));    
        if vi3>=vi8 goto B180;   
  +B178:   #1
        return 1;   
  +B180:   #1
        if vi4!=vi9 goto B196;   
  +B187:   #1
        if vi3<(vi8+7) goto B198;   
  +B196:   #1
        return 0;   
  +B198:   #4
        if vi5>=vi10 goto B209;   
  +B205:   #1
        b0 = 1;    
        goto +B210b0;   forward return[ ii  ...]
  +B209:   #1
        b0 = 0;    
  +B210b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 47/47 wr 13 swaps 0 any 21 found 1 isBefore
 
 method inDaylightTime(Ljava/util/Date;)Z {
  +START:   #1
        vR2 = getInstance@special(vR0);    [ i  R]
        vR2.setTime@extra(vR1);   [R i  RR] 
        if vR2.get@extra(16)==0 goto B23;   
  +B19:   #1
        b0 = 1;    
        goto +B24b0;   forward return[R i  ..]
  +B23:   #1
        b0 = 0;    
  +B24b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 inDaylightTime
 
 method hashCode()I {
  +START:   #1
        b0 = vR0.rawOffset;    
        if vR0.useDaylight==0 goto B53;   
  +B11b0:   #1 int
        b1 = (((((((vR0.startMonth ^ vR0.startDay) ^ vR0.startDayOfWeek) ^ vR0.startTime) ^ vR0.endMonth) ^ vR0.endDay) ^ vR0.endDayOfWeek) ^ vR0.endTime);    
        goto +B54b0b1;   forward return[ ii  ]
  +B53b0:   #1 int
        b1 = 0;    
  +B54b0b1:   #1 int int
        return (b0 ^ b1);   
  +END:   #1
 }
// Register: rd 12/12 wr 3 swaps 0 any 0 found 0 hashCode
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0!=vR1 goto B7;   
  +B5:   #1
        return 1;   
  +B7:   #1
        if (vR1 instanceof java/util/SimpleTimeZone)!=0 goto B16;   
  +B14:   #1
        return 0;   
  +B16:   #1
        vR2 = (java/util/SimpleTimeZone)(vR1);    
        if vR2.hashCode()!=vR0.hashCode@this() goto B68;   
  +B32:   #1
        if vR0.getID@this().equals@extra(vR2.getID())==0 goto B68;   
  +B46:   #1
        if vR0.rawOffset!=vR2.rawOffset goto B68;   
  +B57:   #1
        if vR0.useDaylight==vR2.useDaylight goto B70;   
  +B68:   #3
        return 0;   
  +B70:   #1
        if vR0.useDaylight!=0 goto B79;   
  +B77:   #1
        return 1;   
  +B79:   #1
        if vR0.startYear!=vR2.startYear goto B182;   
  +B90:   #1
        if vR0.startMonth!=vR2.startMonth goto B182;   
  +B101:   #1
        if vR0.startDay!=vR2.startDay goto B182;   
  +B112:   #1
        if vR0.startDayOfWeek!=vR2.startDayOfWeek goto B182;   
  +B123:   #1
        if vR0.startTime!=vR2.startTime goto B182;   
  +B134:   #1
        if vR0.endMonth!=vR2.endMonth goto B182;   
  +B145:   #1
        if vR0.endDay!=vR2.endDay goto B182;   
  +B156:   #1
        if vR0.endDayOfWeek!=vR2.endDayOfWeek goto B182;   
  +B167:   #1
        if vR0.endTime!=vR2.endTime goto B182;   
  +B178:   #1
        b0 = 1;    
        goto +B183b0;   forward return[R i .. ..]
  +B182:   #9
        b0 = 0;    
  +B183b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 34/34 wr 5 swaps 1 any 2 found 1 equals
 
 method hasSameRules(Ljava/util/TimeZone;)Z {
  +START:   #1
        if vR0!=vR1 goto B7;   
  +B5:   #1
        return 1;   
  +B7:   #1
        if (vR1 instanceof java/util/SimpleTimeZone)!=0 goto B16;   
  +B14:   #1
        return 0;   
  +B16:   #1
        vR2 = (java/util/SimpleTimeZone)(vR1);    
        if vR2.hashCode()!=vR0.hashCode@this() goto B54;   
  +B32:   #1
        if vR0.rawOffset!=vR2.rawOffset goto B54;   
  +B43:   #1
        if vR0.useDaylight==vR2.useDaylight goto B56;   
  +B54:   #2
        return 0;   
  +B56:   #1
        if vR0.useDaylight!=0 goto B65;   
  +B63:   #1
        return 1;   
  +B65:   #1
        if vR0.startYear!=vR2.startYear goto B168;   
  +B76:   #1
        if vR0.startMonth!=vR2.startMonth goto B168;   
  +B87:   #1
        if vR0.startDay!=vR2.startDay goto B168;   
  +B98:   #1
        if vR0.startDayOfWeek!=vR2.startDayOfWeek goto B168;   
  +B109:   #1
        if vR0.startTime!=vR2.startTime goto B168;   
  +B120:   #1
        if vR0.endMonth!=vR2.endMonth goto B168;   
  +B131:   #1
        if vR0.endDay!=vR2.endDay goto B168;   
  +B142:   #1
        if vR0.endDayOfWeek!=vR2.endDayOfWeek goto B168;   
  +B153:   #1
        if vR0.endTime!=vR2.endTime goto B168;   
  +B164:   #1
        b0 = 1;    
        goto +B169b0;   forward return[R i . ..]
  +B168:   #9
        b0 = 0;    
  +B169b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 32/32 wr 3 swaps 0 any 2 found 1 hasSameRules
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0 = b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("[id=").append@extra(vR0.getID@this()).append@extra(",offset=").append@extra(vR0.rawOffset).append@extra(",dstSavings=").append@extra(vR0.dstSavings).append@extra(",useDaylight=").append@extra(vR0.useDaylight);    [ RR iiiiii......ii..i bR........] [ RR iiiiiii.....ii..i bRR.......] [ RR iiiiiiiR....ii..i bRiR......] [ RR iiiiiiiRR...ii..i bRiRR.....] [ RR iiiiiiiRRR..ii..i bRiRiR....] [ RR iiiiiiiRRRR.ii..i bRiRiRR...] [ RR iiiiiiiRRRRRii..i bRiRiRRR..] [ RR iiiiiiiRRRRRiiR.i bRiRiRRRR.] [ RR iiiiiiiRRRRRiiRRi bRiRiRRRRR] 
        if vR0.useDaylight==0 goto B217;   
  +B72b0:   #1 reference
        b1 = new java/lang/StringBuilder();    [ RR ................. i.........][ RR ................. iR........]
        b1 = b1.append@extra(",startYear=").append@extra(vR0.startYear).append@extra(",startMode=").append@extra(vR0.startMode).append@extra(",startMonth=").append@extra(vR0.startMonth).append@extra(",startDay=").append@extra(vR0.startDay).append@extra(",startDayOfWeek=").append@extra(vR0.startDayOfWeek).append@extra(",startTime=").append@extra(vR0.startTime).append@extra(",endMode=").append@extra(vR0.endMode).append@extra(",endMonth=").append@extra(vR0.endMonth).append@extra(",endDay=").append@extra(vR0.endDay).append@extra(",endDayOfWeek=").append@extra(vR0.endDayOfWeek).append@extra(",endTime=").append@extra(vR0.endTime).toString@extra();    [ RR iiii.ii..ii..ii..ii..ii..ii..ii..ii..ii..... R......................] [ RR iiiiiii..ii..ii..ii..ii..ii..ii..ii..ii..... iR.....................] [ RR iiiiiii.iii..ii..ii..ii..ii..ii..ii..ii..... iRR....................] [ RR iiiiiiiiiii..ii..ii..ii..ii..ii..ii..ii..... iRiR...................] [ RR iiiiiiiiiii.iii..ii..ii..ii..ii..ii..ii..... iRiRR..................] [ RR iiiiiiiiiiiiiii..ii..ii..ii..ii..ii..ii..... iRiRiR.................] [ RR iiiiiiiiiiiiiii.iii..ii..ii..ii..ii..ii..... iRiRiRR................] [ RR iiiiiiiiiiiiiiiiiii..ii..ii..ii..ii..ii..... iRiRiRiR...............] [ RR iiiiiiiiiiiiiiiiiii.iii..ii..ii..ii..ii..... iRiRiRiRR..............] [ RR iiiiiiiiiiiiiiiiiiiiiii..ii..ii..ii..ii..... iRiRiRiRiR.............] [ RR iiiiiiiiiiiiiiiiiiiiiii.iii..ii..ii..ii..... iRiRiRiRiRR............] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiii..ii..ii..ii..... iRiRiRiRiRiR...........] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiii.iii..ii..ii..... iRiRiRiRiRiRR..........] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiii..ii..ii..... iRiRiRiRiRiRiR.........] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiii.iii..ii..... iRiRiRiRiRiRiRR........] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii..ii..... iRiRiRiRiRiRiRiR.......] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii.iii..... iRiRiRiRiRiRiRiRR......] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii..... iRiRiRiRiRiRiRiRiR.....] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiR.... iRiRiRiRiRiRiRiRiRR....] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiRR... iRiRiRiRiRiRiRiRiRiR...] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiRRR.. iRiRiRiRiRiRiRiRiRiRR..] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiRRRR. iRiRiRiRiRiRiRiRiRiRiR.] [ RR iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiRRRRR iRiRiRiRiRiRiRiRiRiRiRR] 
        goto +B219b0b1;   forward return[ RR iiii.ii..ii..ii..ii..ii..ii..ii..ii..ii..... .......................]
  +B217b0:   #1 reference
        b1 = "";    
  +B219b0b1:   #1 reference reference
        return b0.append@extra(b1).append@extra("]").toString@extra();   
  +END:   #1
 }
// Register: rd 21/21 wr 70 swaps 50 any 0 found 0 toString
 
 method readObject(Ljava/io/ObjectInputStream;)V {
  +START:   #1
        vR1.defaultReadObject();   [   R] 
        if vR0.serialVersionOnStream!=0 goto B35;   
  +B11:   #1
        vR0.dstSavings = 3600000;   
        vR0.endMode = 2;   
        vR0.startMode = 2;   
        vR0.serialVersionOnStream = 1;   
        goto +B85;   forward return[   .]
  +B35:   #1
        vi2 = vR1.readInt();    [   R] 
        vR3 = new byte[vi2];    
        vR1.read(vR3,0,vi2);   [iR   iiRR] 
        if vi2<4 goto B85;   
  +B57:   #1
        vR0.startDay = vR3[0];   
        vR0.startDayOfWeek = vR3[1];   
        vR0.endDay = vR3[2];   
        vR0.endDayOfWeek = vR3[3];   
  +B85:   #2
        return;   
  +END:   #1
 }
// Register: rd 18/18 wr 2 swaps 0 any 1 found 0 readObject
 
 method writeObject(Ljava/io/ObjectOutputStream;)V {
  +START:   #1
        b0 = new byte[4];    
        b0[0] = (byte)vR0.startDay;   
        b0[1] = (byte)vR0.startDayOfWeek;   
        b0[2] = (byte)vR0.endDay;   
        b0[3] = (byte)vR0.endDayOfWeek;   
        vR2 = b0;    
        tswitch (vR0.startMode) B72 B91 B77 B77 : B91;   
  +B72:   #1
        vR0.startDayOfWeek = 1;   
  +B77:   #2
        vR0.startDay = ((vR0.startDay+6)/7);   
  +B91:   #2
        tswitch (vR0.endMode) B124 B143 B129 B129 : B143;   
  +B124:   #1
        vR0.endDayOfWeek = 1;   
  +B129:   #2
        vR0.endDay = ((vR0.endDay+6)/7);   
  +B143:   #2
        vR1.defaultWriteObject();   [R R  R.] 
        vR1.writeInt(vR2.length);   [R R i iR] 
        vR1.write(vR2,0,vR2.length);   [R R ii iiRR] 
        return;   
  +END:   #1
 }
// Register: rd 22/22 wr 4 swaps 2 any 1 found 0 writeObject
 
 method <clinit>()V {
  +START:   #1
        b0 = new byte[12];    
        b0[0] = 31;   
        b0[1] = 28;   
        b0[2] = 31;   
        b0[3] = 30;   
        b0[4] = 31;   
        b0[5] = 30;   
        b0[6] = 31;   
        b0[7] = 31;   
        b0[8] = 30;   
        b0[9] = 31;   
        b0[10] = 30;   
        b0[11] = 31;   
        monthArr = b0;   
        return;   
  +END:   #1
 }
// Register: rd 14/14 wr 1 swaps 0 any 0 found 1 <clinit>
}
