class org/jnode/util/DecimalScaleFactor {
 
 method <init>(ILjava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.multiplier = vi1;   
        vR0.unit = vR2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method getMultiplier()J {
  +START:   #1
        return (long)vR0.multiplier;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getMultiplier
 
 method getUnit()Ljava/lang/String; {
  +START:   #1
        return vR0.unit;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getUnit
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.multiplier).append@extra(", ").append@extra(vR0.unit).toString@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 7 swaps 3 any 0 found 0 toString
 
 method apply(JI)Ljava/lang/String; {
  +START:   #1
        vl3 = vl0;    
        vR5 = 0;    
        vi6 = 0;    
  +B8:   #1
        if vi6>=keys.length goto B66;   
  +B17:   #1
        if compare(vl3,1000)>=0 goto B54;   
  +B25:   #1
        if compare(vl3,0)< 0 goto B54;   
  +B31:   #1
        vR5 = new org/jnode/util/DecimalScaleFactor(keys[vi6],values[-1]);    [ R  i][ R . iRiR]
        goto +B66;   [?l?Ri R . ....]
  +B54:   #2
        vl3 = (vl3/1000);    
        vi6++;   
        goto +B8;   [il?Ri R . ....]
  +B66:   #2
        if vR5!=null goto B91;   
  +B71:   #1
        b0 = new org/jnode/util/DecimalScaleFactor(keys[-1],values[-1]);    [ R . i...][ R . iRiR]
        goto +B93b0;   [?l?Ri R . ....]
  +B91:   #1
        b0 = vR5;    
  +B93b0:   #1 reference
        vR5 = b0;    
        vl6 = ((float)vl0/(float)vR5.getMultiplier());    
        b0 = new java/lang/StringBuilder();    [ R . i...][ R . iR..]
        return b0.append@extra(toString@special(vl6,vi2)).append@extra(32).append@extra(vR5.getUnit()).toString@extra();   
  +END:   #1
 }
// Register: rd 11/11 wr 15 swaps 2 any 5 found 1 apply
 
 method <clinit>()V {
  +START:   #1
        b0 = new int[4];    
        b0[0] = 1;   
        b0[1] = 1000;   
        b0[2] = 1000000;   
        b0[3] = 1000000000;   
        keys = b0;   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 0 found 1 <clinit>
}
