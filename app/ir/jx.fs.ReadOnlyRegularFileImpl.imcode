class jx/fs/ReadOnlyRegularFileImpl {
 
 method <init>(Ljx/fs/FilesystemImpl;Ljx/fs/FileSystem;Ljx/fs/FSObjectImpl;Ljx/fs/Inode;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR2,vR3,vR4);   [   RRRRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method read(ILjx/zero/Memory;II)I {
  +START:   #2
        b0 = vR0.inode.read(vi1,vR2,vi3,vi4);    [ i  iiRiR] 
  +B14b0:   #1 int
        return b0;   
  -H15<caught exception>:   #1 reference
        vR5 = <caught exception>;    
        throw new java/lang/Error(vR5.toString());   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 14 handler 15 type 5
0 - 14 handler 15 type 6
0 - 14 handler 15 type 7
0 - 14 handler 15 type 8
 }
// Register: rd 4/4 wr 3 swaps 0 any 0 found 0 read
 
 method length()I {
  +START:   #2
        b0 = vR0.inode.getLength();    [ i  R] 
  +B9b0:   #1 int
        return b0;   
  +H10<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        return -1;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 9 handler 10 type 7
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 length
 
 method finalize()V {
  +START:   #1
        vR0.inode.decUseCount();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 finalize
}
