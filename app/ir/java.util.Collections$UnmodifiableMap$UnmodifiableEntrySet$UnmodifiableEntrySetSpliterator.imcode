class java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator {
 
 method <init>(Ljava/util/Spliterator;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.s = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method tryAdvance(Ljava/util/function/Consumer;)Z {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        return vR0.s.tryAdvance(entryConsumer@special(vR1));   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 tryAdvance
 
 method forEachRemaining(Ljava/util/function/Consumer;)V {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        vR0.s.forEachRemaining(entryConsumer@special(vR1));   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 forEachRemaining
 
 method trySplit()Ljava/util/Spliterator; {
  +START:   #1
        vR1 = vR0.s.trySplit();    [ R  R] 
        if vR1!=null goto B18;   
  +B14:   #1
        b0 = 0;    
        goto +B26b0;   forward return[R R  .]
  +B18:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator(vR1);    [ R  i][ R . iRR]
  +B26b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 trySplit
 
 method estimateSize()J {
  +START:   #1
        return vR0.s.estimateSize();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 estimateSize
 
 method getExactSizeIfKnown()J {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getExactSizeIfKnown
 
 method characteristics()I {
  +START:   #1
        return vR0.s.characteristics();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 characteristics
 
 method hasCharacteristics(I)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 hasCharacteristics
 
 method getComparator()Ljava/util/Comparator; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getComparator
}
