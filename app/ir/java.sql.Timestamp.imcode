class java/sql/Timestamp {
 
 method valueOf(Ljava/lang/String;)Ljava/sql/Timestamp; {
  +START:   #2
        vR1 = (java/sql/Date)(parse_sdf.parseObject(vR0));    
        b0 = new java/sql/Timestamp(vR1.getTime());    [ R . i.][ R . ilR]
  +B22b0:   #1 reference
        return b0;   
  +H23<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        return 0;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 22 handler 23 type 23
 }
// Register: rd 4/4 wr 6 swaps 0 any 0 found 0 valueOf
 
 method <init>(IIIIIII)V {
  +START:   #1
        vR0.<init>@special(vi1,vi2,vi3,vi4,vi5,vi6);   [   iiiiiiR] 
        vR0.nanos = vi7;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(J)V {
  +START:   #1
        vR0.<init>@special(vl1);   [   ??R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(format_sdf.format(vR0)).append@extra(".").append@extra(vR0.getNanos@this()).toString@extra();   
  +END:   #1
 }
// Register: rd 2/2 wr 8 swaps 3 any 0 found 0 toString
 
 method getNanos()I {
  +START:   #1
        return vR0.nanos;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getNanos
 
 method setNanos(I)V {
  +START:   #1
        vR0.nanos = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setNanos
 
 method before(Ljava/sql/Timestamp;)Z {
  +START:   #1
        if compare(vR1.getTime(),vR0.getTime@this())<=0 goto B14;   
  +B12:   #1
        return 1;   
  +B14:   #1
        if vR1.getNanos()<=vR0.getNanos@this() goto B27;   
  +B25:   #1
        return 1;   
  +B27:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 before
 
 method after(Ljava/sql/Timestamp;)Z {
  +START:   #1
        if compare(vR1.getTime(),vR0.getTime@this())>=0 goto B14;   
  +B12:   #1
        return 1;   
  +B14:   #1
        if vR1.getNanos()>=vR0.getNanos@this() goto B27;   
  +B25:   #1
        return 1;   
  +B27:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 after
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1!=null goto B6;   
  +B4:   #1
        return 0;   
  +B6:   #1
        if (vR1 instanceof java/sql/Timestamp)!=0 goto B15;   
  +B13:   #1
        return 0;   
  +B15:   #1
        return vR0.equals@this((java/sql/Timestamp)(vR1));   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 1 found 1 equals
 
 method equals(Ljava/sql/Timestamp;)Z {
  +START:   #1
        if vR1!=null goto B6;   
  +B4:   #1
        return 0;   
  +B6:   #1
        if compare(vR1.getTime(),vR0.getTime@this())==0 goto B20;   
  +B18:   #1
        return 0;   
  +B20:   #1
        if vR1.getNanos()==vR0.getNanos@this() goto B33;   
  +B31:   #1
        return 0;   
  +B33:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 equals
 
 method <clinit>()V {
  +START:   #1
        b0 = new java/text/SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSS");    [ R  i][ R . iRR]
        parse_sdf = b0;   
        b0 = new java/text/SimpleDateFormat("yyyy-MM-dd HH:mm:ss");    [ R . i..][ R . iRR]
        format_sdf = b0;   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 4 swaps 0 any 0 found 2 <clinit>
}
