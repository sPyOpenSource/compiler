class java/io/PrintWriter {
 
 method <init>(Ljava/io/Writer;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.out = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/io/Writer;Z)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.out = vR1;   
        vR0.autoflush = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/io/OutputStream;)V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        b1 = new java/io/OutputStreamWriter(vR1);    [ ?R  i][ ?R . iRR]
        vR0.out = b1;   
        vR0.lock = vR0.out;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/io/OutputStream;Z)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.autoflush = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method setError()V {
  +START:   #1
        vR0.error = 1;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 setError
 
 method checkError()Z {
  +START:   #1
        vR0.flush@this();   [   R] 
        return vR0.error;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 checkError
 
 method flush()V {
  +START:   #2
        vR0.out.flush();   [   R] 
  +B7:   #1
        goto +B16;   forward return[   .]
  +H10<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        vR0.error = 1;   
  +B16:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 7 handler 10 type 37
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 flush
 
 method close()V {
  +START:   #2
        vR0.out.close();   [   R] 
  +B7:   #1
        goto +B16;   forward return[   .]
  +H10<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        vR0.error = 1;   
  +B16:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 7 handler 10 type 37
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 close
 
 method print(Ljava/lang/String;)V {
  +START:   #1
        b0 = vR0;    
        if vR1!=null goto B10;   
  +B5b0:   #1 reference
        b1 = "null";    
        goto +B11b0b1;   [ RR  ]
  +B10b0:   #1 reference
        b1 = vR1;    
  +B11b0b1:   #1 reference reference
        b0.write(b1);   [ RR  RR] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 3 found 0 print
 
 method print(C)V {
  +START:   #1
        vR0.write@this(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 print
 
 method print([C)V {
  +START:   #1
        vR0.write@this(vR1,0,vR1.length);   [  i iiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 print
 
 method print(Z)V {
  +START:   #1
        b0 = vR0;    
        if vi1==0 goto B10;   
  +B5b0:   #1 reference
        b1 = "true";    
        goto +B12b0b1;   [ RR  ]
  +B10b0:   #1 reference
        b1 = "false";    
  +B12b0b1:   #1 reference reference
        b0.write(b1);   [ RR  RR] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 0 any 2 found 0 print
 
 method print(I)V {
  +START:   #1
        vR0.write@this(toString@special(vi1));   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 print
 
 method print(J)V {
  +START:   #1
        vR0.write@this(toString@special(vl1));   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 print
 
 method print(F)V {
  -START:   #1
        throw new java/lang/Error("not implemented");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 print
 
 method print(D)V {
  +START:   #1
        vR0.write@this(toString@special(vd1));   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 print
 
 method print(Ljava/lang/Object;)V {
  +START:   #1
        b0 = vR0;    
        if vR1!=null goto B10;   
  +B5b0:   #1 reference
        b1 = "null";    
        goto +B14b0b1;   [ RR  ]
  +B10b0:   #1 reference
        b1 = vR1.toString();    [ RR  R] 
  +B14b0b1:   #1 reference reference
        b0.write(b1);   [ RR  RR] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 2 found 0 print
 
 method println()V {
  +START:   #1
        b0 = vR0.lock;    
        vR1 = b0;    
        b0.enter();   
  +B7:   #1
        vR0.write@this(line_separator,0,line_separator.length);   [R R ii iiRR] 
        if vR0.autoflush==0 goto B33;   
  +B26:   #1
        vR0.out.flush();   [R R .. R...] 
  +B33:   #2
        goto +B42;   [R R .. ....]
  +H36<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        vR0.error = 1;   
  +B42:   #1
        vR1.leave();   
        goto +B52;   forward return[R R .. ....]
  +H47<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR1.leave();   
  -B50:   #1
        throw vR3;   
  +B52:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 33 handler 36 type 37
7 - 44 handler 47 type 0
47 - 50 handler 47 type 0
 }
// Register: rd 8/8 wr 7 swaps 1 any 1 found 0 println
 
 method println(Z)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vi1);   [R R  iR] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(I)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vi1);   [R R  iR] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(J)V {
  +START:   #1
        b0 = vR0.lock;    
        vR3 = b0;    
        b0.enter();   
        vR0.print@this(vl1);   [?R R  ??R] 
        vR0.println@this();   [?R R  R..] 
        vR3.leave();   
        goto +B28;   forward return[?R R  ...]
  +H21<caught exception>:   #2 reference
        vR4 = <caught exception>;    
        vR3.leave();   
  -B25:   #1
        throw vR4;   
  +B28:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 25 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(F)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vl1);   [R R  ?R] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(D)V {
  +START:   #1
        b0 = vR0.lock;    
        vR3 = b0;    
        b0.enter();   
        vR0.print@this(vd1);   [?R R  ??R] 
        vR0.println@this();   [?R R  R..] 
        vR3.leave();   
        goto +B28;   forward return[?R R  ...]
  +H21<caught exception>:   #2 reference
        vR4 = <caught exception>;    
        vR3.leave();   
  -B25:   #1
        throw vR4;   
  +B28:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 25 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(Ljava/lang/Object;)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vR1);   [R R  RR] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(Ljava/lang/String;)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vR1);   [R R  RR] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println(C)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vi1);   [R R  iR] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method println([C)V {
  +START:   #1
        b0 = vR0.lock;    
        vR2 = b0;    
        b0.enter();   
        vR0.print@this(vR1);   [R R  RR] 
        vR0.println@this();   [R R  R.] 
        vR2.leave();   
        goto +B26;   forward return[R R  ..]
  +H21<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B24:   #1
        throw vR3;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 println
 
 method write(I)V {
  +START:   #2
        vR0.out.write(vi1);   [   iR] 
  +B8:   #1
        goto +B17;   forward return[   ..]
  +H11<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        vR0.error = 1;   
  +B17:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 8 handler 11 type 37
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 write
 
 method write([CII)V {
  +START:   #2
        vR0.out.write(vR1,vi2,vi3);   [   iiRR] 
  +B10:   #1
        goto +B20;   forward return[   ....]
  +H13<caught exception>:   #1 reference
        vR4 = <caught exception>;    
        vR0.error = 1;   
  +B20:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 10 handler 13 type 37
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 write
 
 method write(Ljava/lang/String;II)V {
  +START:   #2
        vR0.out.write(vR1,vi2,vi3);   [   iiRR] 
  +B10:   #1
        goto +B20;   forward return[   ....]
  +H13<caught exception>:   #1 reference
        vR4 = <caught exception>;    
        vR0.error = 1;   
  +B20:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 10 handler 13 type 37
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 write
 
 method write([C)V {
  +START:   #1
        vR0.write@this(vR1,0,vR1.length);   [  i iiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 write
 
 method write(Ljava/lang/String;)V {
  +START:   #1
        vR0.write@this(vR1,0,vR1.length@extra());   [  i iiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 write
 
 method <clinit>()V {
  +START:   #1
        line_separator = 0;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 <clinit>
}
