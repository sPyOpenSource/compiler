class java/util/Spliterators$IteratorSpliterator {
 
 method <init>(Ljava/util/Collection;I)V {
  +START:   #1
        vR0.<init>@special();   [ Ri  R] 
        vR0.collection = vR1;   
        vR0.it = 0;   
        b0 = vR0;    
        if (vi2 & 4096)!=0 goto B34;   
  +B23b0:   #1 reference
        b1 = ((vi2 | 64) | 16384);    
        goto +B35b0b1;   [ Ri  .]
  +B34b0:   #1 reference
        b1 = vi2;    
  +B35b0b1:   #1 reference int
        b0.characteristics = b1;   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 3 swaps 0 any 4 found 0 <init>
 
 method getExactSizeIfKnown()J {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getExactSizeIfKnown
 
 method hasCharacteristics(I)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 hasCharacteristics
 
 method <init>(Ljava/util/Iterator;JI)V {
  +START:   #1
        vR0.<init>@special();   [ Ri  R] 
        vR0.collection = 0;   
        vR0.it = vR1;   
        vR0.est = vl2;   
        b0 = vR0;    
        if (vi4 & 4096)!=0 goto B41;   
  +B29b0:   #1 reference
        b1 = ((vi4 | 64) | 16384);    
        goto +B43b0b1;   [i Ri  .]
  +B41b0:   #1 reference
        b1 = vi4;    
  +B43b0b1:   #1 reference int
        b0.characteristics = b1;   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 3 swaps 0 any 4 found 0 <init>
 
 method <init>(Ljava/util/Iterator;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.collection = 0;   
        vR0.it = vR1;   
        vR0.est = 9223372036854775807;   
        vR0.characteristics = (vi2 & -16449);   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 <init>
 
 method trySplit()Ljava/util/Spliterator; {
  +START:   #1
        b0 = vR0.it;    
        vR1 = b0;    
        if b0!=null goto B43;   
  +B9:   #1
        b1 = vR0.collection.iterator();    [R RR  R] 
        b0 = b1;    
        vR0.it = b1;   
        vR1 = b0;    
        b1 = (long)vR0.collection.size();    
        b0 = b1;    
        vR0.est = b1;   
        vl2 = b0;    
        goto +B48;   [Rl RR  .]
  +B43:   #1
        vl2 = vR0.est;    
  +B48:   #1
        if compare(vl2,1)<=0 goto B182;   
  +B54:   #1
        if vR1.hasNext()==0 goto B182;   
  +B63:   #1
        vi4 = (vR0.batch+1024);    
        if compare((long)vi4,vl2)<=0 goto B85;   
  +B81:   #1
        vi4 = (int)vl2;    
  +B85:   #1
        if vi4<=33554432 goto B96;   
  +B92:   #1
        vi4 = 33554432;    
  +B96:   #1
        vR5 = new java/lang/Object()[vi4];    
        vi6 = 0;    
  +B106:   #1
        vR5[vi6] = vR1.next();   
        vi6++;   
        if vi6>=vi4 goto B136;   
  +B127:   #1
        if vR1.hasNext()!=0 goto B106;   
  +B136:   #1
        vR0.batch = vi6;   
        if compare(vR0.est,9223372036854775807)==0 goto B165;   
  +B153:   #1
        vR0.est = (vR0.est-(long)vi6);   
  +B165:   #1
        return new java/util/Spliterators$ArraySpliterator(vR5,0,vi6,vR0.characteristics);   
  +B182:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 25/25 wr 12 swaps 0 any 7 found 0 trySplit
 
 method forEachRemaining(Ljava/util/function/Consumer;)V {
  +START:   #1
        if vR1!=null goto B12;   
  -B4:   #1
        throw new java/lang/NullPointerException();   
  +B12:   #1
        b0 = vR0.it;    
        vR2 = b0;    
        if b0!=null goto B50;   
  +B21:   #1
        b1 = vR0.collection.iterator();    [R RR  R.] 
        b0 = b1;    
        vR0.it = b1;   
        vR2 = b0;    
        vR0.est = (long)vR0.collection.size();   
  +B50:   #1
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 5 swaps 0 any 5 found 0 forEachRemaining
 
 method tryAdvance(Ljava/util/function/Consumer;)Z {
  +START:   #1
        if vR1!=null goto B12;   
  -B4:   #1
        throw new java/lang/NullPointerException();   
  +B12:   #1
        if vR0.it!=null goto B46;   
  +B19:   #1
        vR0.it = vR0.collection.iterator();   
        vR0.est = (long)vR0.collection.size();   
  +B46:   #1
        if vR0.it.hasNext()==0 goto B75;   
  +B58:   #1
        vR1.accept(vR0.it.next());   [ R i RR] 
        return 1;   
  +B75:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 7/7 wr 1 swaps 1 any 1 found 0 tryAdvance
 
 method estimateSize()J {
  +START:   #1
        if vR0.it!=null goto B36;   
  +B7:   #1
        vR0.it = vR0.collection.iterator();   
        b1 = (long)vR0.collection.size();    
        b0 = b1;    
        vR0.est = b1;   
        return b0;   
  +B36:   #1
        return vR0.est;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 estimateSize
 
 method characteristics()I {
  +START:   #1
        return vR0.characteristics;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 characteristics
 
 method getComparator()Ljava/util/Comparator; {
  +START:   #1
        if vR0.hasCharacteristics@this(4)==0 goto B10;   
  +B8:   #1
        return 0;   
  -B10:   #1
        throw new java/lang/IllegalStateException();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getComparator
}
