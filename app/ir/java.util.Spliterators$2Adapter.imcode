class java/util/Spliterators$2Adapter {
 
 method <init>(Ljava/util/Spliterator$OfInt;)V {
  +START:   #1
        vR0.val$spliterator = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.valueReady = 0;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 <init>
 
 method accept(I)V {
  +START:   #1
        vR0.valueReady = 1;   
        vR0.nextElement = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 accept
 
 method hasNext()Z {
  +START:   #1
        if vR0.valueReady!=0 goto B18;   
  +B7:   #1
        vR0.val$spliterator.tryAdvance(vR0);   [   RR] 
  +B18:   #1
        return vR0.valueReady;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 hasNext
 
 method nextInt()I {
  +START:   #1
        if vR0.valueReady!=0 goto B22;   
  +B7:   #1
        if vR0.hasNext@this()!=0 goto B22;   
  -B14:   #1
        throw new java/util/NoSuchElementException();   
  +B22:   #2
        vR0.valueReady = 0;   
        return vR0.nextElement;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 nextInt
 
 method forEachRemaining(Ljava/util/function/IntConsumer;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 forEachRemaining
 
 method next()Ljava/lang/Integer; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 next
 
 method remove()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 remove
 
 method forEachRemaining(Ljava/lang/Object;)V {
  +START:   #1
        vR0.forEachRemaining@this((java/util/function/IntConsumer)(vR1));   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 1 forEachRemaining
 
 method next()Ljava/lang/Object; {
  +START:   #1
        return vR0.next@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 next
}
