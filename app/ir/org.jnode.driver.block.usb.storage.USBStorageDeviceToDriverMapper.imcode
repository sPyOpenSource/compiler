class org/jnode/driver/block/usb/storage/USBStorageDeviceToDriverMapper {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method findDriver(Ljx/devices/Device;)Lorg/jnode/driver/block/usb/storage/USBStorageSCSIHostDriver; {
  +START:   #1
        if (vR1 instanceof org/jnode/driver/bus/usb/USBDevice)!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        vR2 = (org/jnode/driver/bus/usb/USBDevice)(vR1);    
        if vR2.getDescriptor@extra().getDeviceClass@extra()==0 goto B26;   
  +B24:   #1
        return 0;   
  +B26:   #1
        vR3 = vR2.getConfiguration@extra(0);    [R R . iR] 
        vR4 = vR3.getInterface@extra(0);    [RR R . iR] 
        vR5 = vR4.getDescriptor@extra();    [RRR R . R.] 
        if vR5.getInterfaceClass@extra()==8 goto B58;   
  +B56:   #1
        return 0;   
  +B58:   #1
        tswitch (vR5.getInterfaceSubClass@extra()) B104 B106 B108 B110 B112 B114 B122 : B124;   
  +B104:   #1
        return 0;   
  +B106:   #1
        return 0;   
  +B108:   #1
        return 0;   
  +B110:   #1
        return 0;   
  +B112:   #1
        return 0;   
  +B114:   #1
        return new org/jnode/driver/block/usb/storage/USBStorageSCSIHostDriver();   
  +B122:   #1
        return 0;   
  +B124:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 9/9 wr 5 swaps 0 any 1 found 1 findDriver
 
 method getMatchLevel()I {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getMatchLevel
}
