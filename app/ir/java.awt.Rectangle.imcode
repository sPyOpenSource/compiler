class java/awt/Rectangle {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = 0;   
        vR0.y = 0;   
        vR0.width = 0;   
        vR0.height = 0;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/awt/Rectangle;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = vR1.x;   
        vR0.y = vR1.y;   
        vR0.width = vR1.width;   
        vR0.height = vR1.height;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(IIII)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = vi1;   
        vR0.y = vi2;   
        vR0.width = vi3;   
        vR0.height = vi4;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(II)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = 0;   
        vR0.y = 0;   
        vR0.width = vi1;   
        vR0.height = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/awt/Point;Ljava/awt/Dimension;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = vR1.x;   
        vR0.y = vR1.y;   
        vR0.width = vR2.width;   
        vR0.height = vR2.height;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/awt/Point;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = vR1.x;   
        vR0.y = vR1.y;   
        vR0.width = 0;   
        vR0.height = 0;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/awt/Dimension;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = 0;   
        vR0.y = 0;   
        vR0.width = vR1.width;   
        vR0.height = vR1.height;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method getBounds()Ljava/awt/Rectangle; {
  +START:   #1
        return new java/awt/Rectangle(vR0.x,vR0.y,vR0.width,vR0.height);   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 getBounds
 
 method add(II)V {
  +START:   #1
        if vR0.x<=vi1 goto B12;   
  +B8:   #1
        b0 = vi1;    
        goto +B16b0;   [ ii  ]
  +B12:   #1
        b0 = vR0.x;    
  +B16b0:   #1 int
        vi3 = b0;    
        if vR0.y<=vi2 goto B29;   
  +B25:   #1
        b0 = vi2;    
        goto +B33b0;   [i ii  ]
  +B29:   #1
        b0 = vR0.y;    
  +B33b0:   #1 int
        vi4 = b0;    
        b0 = vR0;    
        if (vR0.x+vR0.width)<=vi1 goto B61;   
  +B49b0:   #1 reference
        b1 = (vR0.x+vR0.width);    
        goto +B62b0b1;   [ii Ri  ]
  +B61b0:   #1 reference
        b1 = vi1;    
  +B62b0b1:   #1 reference int
        b0.width = (b1-vi3);   
        b0 = vR0;    
        if (vR0.y+vR0.height)<=vi2 goto B93;   
  +B81b0:   #1 reference
        b1 = (vR0.y+vR0.height);    
        goto +B94b0b1;   [ii Ri  ]
  +B93b0:   #1 reference
        b1 = vi2;    
  +B94b0b1:   #1 reference int
        b0.height = (b1-vi4);   
        vR0.x = vi3;   
        vR0.y = vi4;   
        return;   
  +END:   #1
 }
// Register: rd 34/34 wr 12 swaps 0 any 8 found 0 add
 
 method add(Ljava/awt/Point;)V {
  +START:   #1
        vR0.add@this(vR1.x,vR1.y);   [  ii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 add
 
 method add(Ljava/awt/Rectangle;)V {
  +START:   #1
        if vR0.x<=vR1.x goto B18;   
  +B11:   #1
        b0 = vR1.x;    
        goto +B22b0;   [ ii  ]
  +B18:   #1
        b0 = vR0.x;    
  +B22b0:   #1 int
        vi2 = b0;    
        if vR0.y<=vR1.y goto B41;   
  +B34:   #1
        b0 = vR1.y;    
        goto +B45b0;   [i ii  ]
  +B41:   #1
        b0 = vR0.y;    
  +B45b0:   #1 int
        vi3 = b0;    
        b0 = vR0;    
        if (vR0.x+vR0.width)<=(vR1.x+vR1.width) goto B80;   
  +B68b0:   #1 reference
        b1 = (vR0.x+vR0.width);    
        goto +B89b0b1;   [ii Ri  ]
  +B80b0:   #1 reference
        b1 = (vR1.x+vR1.width);    
  +B89b0b1:   #1 reference int
        b0.width = (b1-vi2);   
        b0 = vR0;    
        if (vR0.y+vR0.height)<=(vR1.y+vR1.height) goto B128;   
  +B116b0:   #1 reference
        b1 = (vR0.y+vR0.height);    
        goto +B137b0b1;   [ii Ri  ]
  +B128b0:   #1 reference
        b1 = (vR1.y+vR1.height);    
  +B137b0b1:   #1 reference int
        b0.height = (b1-vi3);   
        vR0.x = vi2;   
        vR0.y = vi3;   
        return;   
  +END:   #1
 }
// Register: rd 38/38 wr 12 swaps 0 any 4 found 0 add
 
 method contains(II)Z {
  +START:   #1
        if vi1<vR0.x goto B46;   
  +B8:   #1
        if vi1>(vR0.x+vR0.width) goto B46;   
  +B21:   #1
        if vi2<vR0.y goto B46;   
  +B29:   #1
        if vi2>(vR0.y+vR0.height) goto B46;   
  +B42:   #1
        b0 = 1;    
        goto +B47b0;   forward return[ i  ]
  +B46:   #4
        b0 = 0;    
  +B47b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 11/11 wr 1 swaps 0 any 4 found 0 contains
 
 method contains(IIII)Z {
  +START:   #1
        if vi1<vR0.x goto B51;   
  +B8:   #1
        if (vi1+vi3)>(vR0.x+vR0.width) goto B51;   
  +B23:   #1
        if vi2<vR0.y goto B51;   
  +B31:   #1
        if (vi2+vi4)>(vR0.y+vR0.height) goto B51;   
  +B47:   #1
        b0 = 1;    
        goto +B52b0;   forward return[ i  ]
  +B51:   #4
        b0 = 0;    
  +B52b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 13/13 wr 1 swaps 0 any 4 found 0 contains
 
 method contains(Ljava/awt/Point;)Z {
  +START:   #1
        return vR0.contains@this(vR1.x,vR1.y);   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 contains
 
 method contains(Ljava/awt/Rectangle;)Z {
  +START:   #1
        return vR0.contains@this(vR1.x,vR1.y,vR1.width,vR1.height);   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 1 any 0 found 0 contains
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if (vR1 instanceof java/awt/Rectangle)==0 goto B62;   
  +B7:   #1
        vR2 = (java/awt/Rectangle)(vR1);    
        if vR2.x!=vR0.x goto B60;   
  +B23:   #1
        if vR2.y!=vR0.y goto B60;   
  +B34:   #1
        if vR2.width!=vR0.width goto B60;   
  +B45:   #1
        if vR2.height!=vR0.height goto B60;   
  +B56:   #1
        b0 = 1;    
        goto +B61b0;   forward return[R i  ..]
  +B60:   #4
        b0 = 0;    
  +B61b0:   #1 int
        return b0;   
  +B62:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 12/12 wr 2 swaps 0 any 1 found 1 equals
 
 method getHeight()D {
  +START:   #1
        return (double)vR0.height;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getHeight
 
 method getLocation()Ljava/awt/Point; {
  +START:   #1
        return new java/awt/Point(vR0.x,vR0.y);   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 getLocation
 
 method getSize()Ljava/awt/Dimension; {
  +START:   #1
        return new java/awt/Dimension(vR0.width,vR0.height);   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 getSize
 
 method grow(II)V {
  +START:   #1
        vR0.width = (vR0.width+vi1);   
        vR0.height = (vR0.height+vi2);   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 grow
 
 method inside(II)Z {
  +START:   #1
        return vR0.contains@this(vi1,vi2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 inside
 
 method intersection(Ljava/awt/Rectangle;)Ljava/awt/Rectangle; {
  +START:   #1
        if vR0.x>=vR1.x goto B18;   
  +B11:   #1
        b0 = vR1.x;    
        goto +B22b0;   [ i  ]
  +B18:   #1
        b0 = vR0.x;    
  +B22b0:   #1 int
        vi2 = b0;    
        if vR0.y>=vR1.y goto B41;   
  +B34:   #1
        b0 = vR1.y;    
        goto +B45b0;   [i i  ]
  +B41:   #1
        b0 = vR0.y;    
  +B45b0:   #1 int
        vi3 = b0;    
        if (vR0.x+vR0.width)>=(vR1.x+vR1.width) goto B79;   
  +B67:   #1
        b0 = (vR0.x+vR0.width);    
        goto +B88b0;   [ii i  ]
  +B79:   #1
        b0 = (vR1.x+vR1.width);    
  +B88b0:   #1 int
        vi4 = (b0-vi2);    
        if (vR0.y+vR0.height)>=(vR1.y+vR1.height) goto B125;   
  +B113:   #1
        b0 = (vR0.y+vR0.height);    
        goto +B134b0;   [iii i  ]
  +B125:   #1
        b0 = (vR1.y+vR1.height);    
  +B134b0:   #1 int
        vi5 = (b0-vi3);    
        if vi4< 0 goto B162;   
  +B143:   #1
        if vi5< 0 goto B162;   
  +B148:   #1
        return new java/awt/Rectangle(vi2,vi3,vi4,vi5);   
  +B162:   #2
        return new java/awt/Rectangle(0,0,0,0);   
  +END:   #1
 }
// Register: rd 38/38 wr 14 swaps 0 any 6 found 0 intersection
 
 method intersects(Ljava/awt/Rectangle;)Z {
  +START:   #1
        if (vR0.x+vR0.width)>=(vR1.x+vR1.width) goto B33;   
  +B21:   #1
        b0 = (vR0.x+vR0.width);    
        goto +B42b0;   [ ii  ]
  +B33:   #1
        b0 = (vR1.x+vR1.width);    
  +B42b0:   #1 int
        if vR0.x>=vR1.x goto B60;   
  +B53b0:   #1 int
        b1 = vR1.x;    
        goto +B64b0b1;   [ ii  ]
  +B60b0:   #1 int
        b1 = vR0.x;    
  +B64b0b1:   #1 int int
        vi2 = (b0-b1);    
        if (vR0.y+vR0.height)>=(vR1.y+vR1.height) goto B99;   
  +B87:   #1
        b0 = (vR0.y+vR0.height);    
        goto +B108b0;   [i ii  ]
  +B99:   #1
        b0 = (vR1.y+vR1.height);    
  +B108b0:   #1 int
        if vR0.y>=vR1.y goto B126;   
  +B119b0:   #1 int
        b1 = vR1.y;    
        goto +B130b0b1;   [i ii  ]
  +B126b0:   #1 int
        b1 = vR0.y;    
  +B130b0b1:   #1 int int
        vi3 = (b0-b1);    
        if vi2<=0 goto B144;   
  +B136:   #1
        if vi3<=0 goto B144;   
  +B140:   #1
        b0 = 1;    
        goto +B145b0;   forward return[ii ii  ]
  +B144:   #2
        b0 = 0;    
  +B145b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 31/31 wr 11 swaps 0 any 4 found 0 intersects
 
 method isEmpty()Z {
  +START:   #1
        if vR0.width<=0 goto B14;   
  +B7:   #1
        if vR0.height> 0 goto B18;   
  +B14:   #1
        b0 = 1;    
        goto +B19b0;   forward return[ i  ]
  +B18:   #1
        b0 = 0;    
  +B19b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 isEmpty
 
 method move(II)V {
  +START:   #1
        vR0.setLocation@this(vi1,vi2);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 move
 
 method reshape(IIII)V {
  +START:   #1
        vR0.setBounds@this(vi1,vi2,vi3,vi4);   [   iiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 reshape
 
 method resize(II)V {
  +START:   #1
        vR0.setSize@this(vi1,vi2);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 resize
 
 method setBounds(IIII)V {
  +START:   #1
        vR0.x = vi1;   
        vR0.y = vi2;   
        vR0.width = vi3;   
        vR0.height = vi4;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 0 found 0 setBounds
 
 method setBounds(Ljava/awt/Rectangle;)V {
  +START:   #1
        vR0.x = vR1.x;   
        vR0.y = vR1.y;   
        vR0.width = vR1.width;   
        vR0.height = vR1.height;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 0 found 0 setBounds
 
 method setLocation(II)V {
  +START:   #1
        vR0.x = vi1;   
        vR0.y = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setLocation
 
 method setLocation(Ljava/awt/Point;)V {
  +START:   #1
        vR0.x = vR1.x;   
        vR0.y = vR1.y;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setLocation
 
 method setSize(Ljava/awt/Dimension;)V {
  +START:   #1
        vR0.width = vR1.width;   
        vR0.height = vR1.height;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setSize
 
 method setSize(II)V {
  +START:   #1
        vR0.width = vi1;   
        vR0.height = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setSize
 
 method translate(II)V {
  +START:   #1
        vi1 = (vi1+vi1);    
        vi2 = (vi2+vi2);    
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 2 found 2 translate
 
 method union(Ljava/awt/Rectangle;)Ljava/awt/Rectangle; {
  +START:   #1
        if vR0.x<=vR1.x goto B18;   
  +B11:   #1
        b0 = vR1.x;    
        goto +B22b0;   [ i  ]
  +B18:   #1
        b0 = vR0.x;    
  +B22b0:   #1 int
        vi2 = b0;    
        if vR0.y<=vR1.y goto B41;   
  +B34:   #1
        b0 = vR1.y;    
        goto +B45b0;   [i i  ]
  +B41:   #1
        b0 = vR0.y;    
  +B45b0:   #1 int
        vi3 = b0;    
        if (vR0.x+vR0.width)<=(vR1.x+vR1.width) goto B79;   
  +B67:   #1
        b0 = (vR0.x+vR0.width);    
        goto +B88b0;   [ii i  ]
  +B79:   #1
        b0 = (vR1.x+vR1.width);    
  +B88b0:   #1 int
        vi4 = (b0-vi2);    
        if (vR0.y+vR0.height)<=(vR1.y+vR1.height) goto B125;   
  +B113:   #1
        b0 = (vR0.y+vR0.height);    
        goto +B134b0;   [iii i  ]
  +B125:   #1
        b0 = (vR1.y+vR1.height);    
  +B134b0:   #1 int
        vi5 = (b0-vi3);    
        return new java/awt/Rectangle(vi2,vi3,vi4,vi5);   
  +END:   #1
 }
// Register: rd 35/35 wr 13 swaps 0 any 4 found 0 union
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("[x=").append@extra(vR0.x).append@extra(",y=").append@extra(vR0.y).append@extra(",width=").append@extra(vR0.width).append@extra(",height=").append@extra(vR0.height).append@extra("]").toString@extra();   
  +END:   #1
 }
// Register: rd 6/6 wr 22 swaps 16 any 0 found 0 toString
 
 method hashCode()I {
  +START:   #1
        return ((((vR0.x*vR0.y)*vR0.width)*vR0.height)*37);   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 hashCode
 
 method getBounds2D()Ljava/awt/geom/Rectangle2D; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getBounds2D
 
 method contains(DD)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 contains
 
 method contains(Ljava/awt/geom/Point2D;)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 contains
 
 method intersects(DDDD)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 intersects
 
 method intersects(Ljava/awt/geom/Rectangle2D;)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 intersects
 
 method contains(DDDD)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 contains
 
 method contains(Ljava/awt/geom/Rectangle2D;)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 contains
 
 method getPathIterator(Ljava/awt/geom/AffineTransform;)Ljava/awt/geom/PathIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getPathIterator
 
 method getPathIterator(Ljava/awt/geom/AffineTransform;D)Ljava/awt/geom/PathIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getPathIterator
}
