class jx/buffer/multithread/Buffer {
 
 method <init>(Ljx/zero/Memory;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.data = vR1;   
        vR0.cpuManager = (jx/zero/CPUManager)(getInitialNaming@special().lookup("CPUManager"));   
        vR0.next = vR0.cpuManager.getAtomicVariable();   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 1 any 0 found 0 <init>
 
 method getMem()Ljx/zero/Memory; {
  +START:   #1
        return vR0.data;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMem
 
 method setMem(Ljx/zero/Memory;)V {
  +START:   #1
        vR0.data = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setMem
 
 method getData()Ljx/zero/Memory; {
  +START:   #1
        return vR0.data;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getData
 
 method getMoreData()Ljava/lang/Object; {
  +START:   #1
        return vR0.moreData;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMoreData
 
 method setMoreData(Ljava/lang/Object;)V {
  +START:   #1
        if vR1!=null goto B14;   
  -B4:   #1
        throw new java/lang/Error("");   
  +B14:   #1
        vR0.moreData = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 setMoreData
 
 method setData(Ljx/zero/Memory;)V {
  +START:   #1
        vR0.data = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setData
 
 method copyDataFrom(Ljx/buffer/multithread/Buffer;)V {
  +START:   #1
        vR0.data = vR1.data;   
        vR0.moreData = vR1.moreData;   
        if vR0.data==null goto B38;   
  +B23:   #1
        if vR0.data.size()==1514 goto B38;   
  +B38:   #2
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 copyDataFrom
 
 method init()V {
  +START:   #1
        vR0.data = 0;   
        vR0.moreData = 0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 init
}
