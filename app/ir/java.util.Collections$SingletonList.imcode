class java/util/Collections$SingletonList {
 
 method <init>(Ljava/lang/Object;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.element = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return singletonIterator@special(vR0.element);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 iterator
 
 method size()I {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 size
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        return eq@special(vR1,vR0.element);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 contains
 
 method get(I)Ljava/lang/Object; {
  +START:   #1
        if vi1==0 goto B36;   
  -B4:   #1
        b0 = new java/lang/IndexOutOfBoundsException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra("Index: ").append@extra(vi1).append@extra(", Size: 1").toString@extra());   [ RRR iii.. RR..] 
        throw b0;   
  +B36:   #1
        return vR0.element;   
  +END:   #1
 }
// Register: rd 6/6 wr 9 swaps 3 any 2 found 0 get
 
 method forEach(Ljava/util/function/Consumer;)V {
  +START:   #1
        vR1.accept(vR0.element);   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 forEach
 
 method removeIf(Ljava/util/function/Predicate;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 removeIf
 
 method replaceAll(Ljava/util/function/UnaryOperator;)V {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 replaceAll
 
 method spliterator()Ljava/util/Spliterator; {
  +START:   #1
        return singletonSpliterator@special(vR0.element);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 spliterator
 
 method listIterator()Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method listIterator(I)Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method add(ILjava/lang/Object;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 add
 
 method indexOf(Ljava/lang/Object;)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 indexOf
 
 method lastIndexOf(Ljava/lang/Object;)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 lastIndexOf
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 set
 
 method subList(II)Ljava/util/List; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 subList
 
 method toArray([Ljava/lang/Object;)[Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 toArray
 
 method addAll(ILjava/util/Collection;)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 addAll
}
