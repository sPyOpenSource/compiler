class org/jnode/fs/jfat/FatChain$ChainPosition {
 
 method <init>(Lorg/jnode/fs/jfat/FatChain;)V {
  +START:   #1
        vR0.<init>@special(vR1,0);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Lorg/jnode/fs/jfat/FatChain;I)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.size = access$1000@special(vR1).getClusterSize@extra();   
        vR0.setPosition@special(vi2);   [  . iR] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 <init>
 
 method getIndex()I {
  +START:   #1
        return vR0.index;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getIndex
 
 method getOffset()I {
  +START:   #1
        return vR0.offset;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getOffset
 
 method getSize()I {
  +START:   #1
        return vR0.size;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getSize
 
 method getPartial()I {
  +START:   #1
        return (vR0.size-vR0.offset);   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 getPartial
 
 method getPosition()J {
  +START:   #1
        return vR0.position;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getPosition
 
 method setPosition(I)V {
  +START:   #1
        vR0.position = (long)vi1;   
        vR0.index = (vi1/vR0.size);   
        vR0.offset = (vi1%vR0.size);   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 setPosition
 
 method <init>(Lorg/jnode/fs/jfat/FatChain;Lorg/jnode/fs/jfat/FatChain$1;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method access$200(Lorg/jnode/fs/jfat/FatChain$ChainPosition;I)V {
  +START:   #1
        vR0.setPosition@special(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 access$200
 
 method access$500(Lorg/jnode/fs/jfat/FatChain$ChainPosition;)I {
  +START:   #1
        return vR0.getIndex@special();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 access$500
 
 method access$700(Lorg/jnode/fs/jfat/FatChain$ChainPosition;)I {
  +START:   #1
        return vR0.getPartial@special();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 access$700
 
 method access$800(Lorg/jnode/fs/jfat/FatChain$ChainPosition;)I {
  +START:   #1
        return vR0.getOffset@special();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 access$800
 
 method access$900(Lorg/jnode/fs/jfat/FatChain$ChainPosition;)I {
  +START:   #1
        return vR0.getSize@special();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 access$900
}
