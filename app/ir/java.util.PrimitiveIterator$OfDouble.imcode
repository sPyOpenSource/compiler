class java/util/PrimitiveIterator$OfDouble {
 
 method forEachRemaining(Ljava/util/function/DoubleConsumer;)V {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
  +B5:   #1
        if vR0.hasNext()==0 goto B29;   
  +B14:   #1
        vR1.accept(vR0.nextDouble());   [   ??R] 
        goto +B5;   [   ...]
  +B29:   #1
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 forEachRemaining
 
 method next()Ljava/lang/Double; {
  +START:   #1
        if ENABLED==0 goto B15;   
  +B6:   #1
        trip@special(vR0.getClass@this(),"{0} calling PrimitiveIterator.OfDouble.nextLong()");   [ R RR RR]
  -B15:   #1
        throw new java/lang/Error("NOT IMPLEMENTED");   
  +END:   #1
 }
// Register: rd 2/2 wr 3 swaps 0 any 0 found 0 next
 
 method forEachRemaining(Ljava/util/function/Consumer;)V {
  +START:   #1
        if (vR1 instanceof java/util/function/DoubleConsumer)==0 goto B20;   
  +B7:   #1
        vR0.forEachRemaining((java/util/function/DoubleConsumer)(vR1));   [   RR] 
        goto +B40;   forward return[   ..]
  +B20:   #1
        requireNonNull@special(vR1);   [   R.]
        if ENABLED==0 goto B40;   
  +B31:   #1
        trip@special(vR0.getClass@this(),"{0} calling PrimitiveIterator.OfDouble.forEachRemainingDouble(action::accept)");   [  RR RR]
  +B40:   #2
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 2 swaps 0 any 0 found 1 forEachRemaining
 
 method forEachRemaining(Ljava/lang/Object;)V {
  +START:   #1
        vR0.forEachRemaining((java/util/function/DoubleConsumer)(vR1));   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 1 forEachRemaining
 
 method next()Ljava/lang/Object; {
  +START:   #1
        return vR0.next();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 next
}
