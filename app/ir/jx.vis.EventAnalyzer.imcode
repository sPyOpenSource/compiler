class jx/vis/EventAnalyzer {
 
 method usage()V {
  +START:   #1
        out.println("<eventin> [-dumpAll] [-dumpTypes] [-dump <eventnames ...>] [-diff <eventnames ...>] [-graph <filename>] [-timefactor <factor>] [-timescale <number>] [-timecorrector <timetosubtract>] [-maxtime <time>] [-pattern <patternlength>] [-startAt <eventname>] [-maxevents <number>] [-remove <eventnames ...>] [-include <eventnames ...>]");   [  i. RR] 
        out.println("-graph <filename>: Create file <filename> that contains the times between events as an event graph and can be used as input for the dot program.");   [  ii. RR] 
        out.println("-count <filename>: Create file <filename> that contains the number of events and can be used as input for the gnuplot program.");   [  iii. RR] 
        out.println("-countfreq <filename> <interval>: Create file <filename> that contains the number of events sampled over <interval> and can be used as input for the gnuplot program.");   [  iiii. RR] 
        out.println("-maxevents <number>: Only process number events.");   [  iiiii. RR] 
        out.println("-timescale <number>: 1=nano, 2=micro, 3=milli, 4=sec");   [  iiiiii. RR] 
        out.println("-threadid: info1 contains thread id");   [  iiiiiii. RR] 
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 14 swaps 7 any 0 found 0 usage
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        b0 = new jx/vis/EventAnalyzer(vR0);    [ R  i][ R . iRR]
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 main
 
 method getNames([Ljava/lang/String;I)[Ljava/lang/String; {
  +START:   #1
        vi4 = 0;    
  +B3:   #1
        if vi4>=((vR1.length-vi2)-1) goto B40;   
  +B14:   #1
        if vR1[((vi2+vi4)+1)].charAt@extra(0)!=45 goto B34;   
  +B31:   #1
        goto +B40;   [?i   ..]
  +B34:   #1
        vi4++;   
        goto +B3;   [Rii   ..]
  +B40:   #2
        vR3 = new java/lang/String()[vi4];    
        vi5 = 0;    
  +B49:   #1
        if vi5>=vi4 goto B74;   
  +B56:   #1
        vR3[vi5] = vR1[((vi2+vi5)+1)];   
        vi5++;   
        goto +B49;   [Rii   ..]
  +B74:   #1
        return vR3;   
  +END:   #1
 }
// Register: rd 17/17 wr 5 swaps 0 any 4 found 0 getNames
 
 method <init>([Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [ RRRR  R] 
        vR0.opt_graph = 0;   
        vR0.opt_count = 0;   
        vR0.opt_countfreq = 0;   
        vR0.opt_diff = 0;   
        vR0.opt_dump = 0;   
        vR0.opt_dumpAll = 0;   
        vR0.opt_dumpTypes = 0;   
        vR0.opt_pattern = 0;   
        vR0.opt_remove = 0;   
        vR0.opt_include = 0;   
        vR0.opt_tid = 0;   
        vR0.nums = 0;   
        vR0.names = 0;   
        vR0.out = 0;   
        vR0.starteventname = 0;   
        vR0.verbose = 0;   
        vR0.maxtime = 0;   
        vR0.timefactor = 1;   
        vR0.timecorrector = 0;   
        vR0.patternlength = 0;   
        vR0.maxevents = -1;   
        vR0.interval = -1;   
        vR0.timescale = -1;   
        if vR1.length!=0 goto B128;   
  +B124:   #1
        usage@special();   [ RRRR  .]
        return;   
  +B128:   #1
        b1 = new java/io/FileInputStream(vR1[0]);    [ RRRR  i][ RRRR . iRR]
        vR0.in = b1;   
        vi2 = 1;    
  +B144:   #1
        if vi2>=vR1.length goto B1063;   
  +B150:   #1
        vR3 = vR1[vi2];    
        vi4 = -1;    
        lswitch (vR3.hashCode@extra()) { 
           -1618204328:B353
           -1235339301:B338
           -1168181696:B368
           -780132504:B446
           -313405968:B462
           -198553328:B526
           44641714:B383
           44653473:B308
           325963459:B542
           348349169:B323
           1099115130:B430
           1383163138:B414
           1386927425:B398
           1742554066:B558
           1836595347:B510
           1962117476:B478
           2060823113:B494
           ::B571
        };   
  +B308:   #1
        if vR3.equals@extra("-dump")==0 goto B571;   
  +B317:   #1
        vi4 = 0;    
        goto +B571;   [iRi RRRR . ...]
  +B323:   #1
        if vR3.equals@extra("-remove")==0 goto B571;   
  +B332:   #1
        vi4 = 1;    
        goto +B571;   [iRi RRRR . ...]
  +B338:   #1
        if vR3.equals@extra("-include")==0 goto B571;   
  +B347:   #1
        vi4 = 2;    
        goto +B571;   [iRi RRRR . ...]
  +B353:   #1
        if vR3.equals@extra("-dumpTypes")==0 goto B571;   
  +B362:   #1
        vi4 = 3;    
        goto +B571;   [iRi RRRR . ...]
  +B368:   #1
        if vR3.equals@extra("-dumpAll")==0 goto B571;   
  +B377:   #1
        vi4 = 4;    
        goto +B571;   [iRi RRRR . ...]
  +B383:   #1
        if vR3.equals@extra("-diff")==0 goto B571;   
  +B392:   #1
        vi4 = 5;    
        goto +B571;   [iRi RRRR . ...]
  +B398:   #1
        if vR3.equals@extra("-graph")==0 goto B571;   
  +B407:   #1
        vi4 = 6;    
        goto +B571;   [iRi RRRR . ...]
  +B414:   #1
        if vR3.equals@extra("-count")==0 goto B571;   
  +B423:   #1
        vi4 = 7;    
        goto +B571;   [iRi RRRR . ...]
  +B430:   #1
        if vR3.equals@extra("-countfreq")==0 goto B571;   
  +B439:   #1
        vi4 = 8;    
        goto +B571;   [iRi RRRR . ...]
  +B446:   #1
        if vR3.equals@extra("-startAt")==0 goto B571;   
  +B455:   #1
        vi4 = 9;    
        goto +B571;   [iRi RRRR . ...]
  +B462:   #1
        if vR3.equals@extra("-maxevents")==0 goto B571;   
  +B471:   #1
        vi4 = 10;    
        goto +B571;   [iRi RRRR . ...]
  +B478:   #1
        if vR3.equals@extra("-maxtime")==0 goto B571;   
  +B487:   #1
        vi4 = 11;    
        goto +B571;   [iRi RRRR . ...]
  +B494:   #1
        if vR3.equals@extra("-timefactor")==0 goto B571;   
  +B503:   #1
        vi4 = 12;    
        goto +B571;   [iRi RRRR . ...]
  +B510:   #1
        if vR3.equals@extra("-timecorrector")==0 goto B571;   
  +B519:   #1
        vi4 = 13;    
        goto +B571;   [iRi RRRR . ...]
  +B526:   #1
        if vR3.equals@extra("-timescale")==0 goto B571;   
  +B535:   #1
        vi4 = 14;    
        goto +B571;   [iRi RRRR . ...]
  +B542:   #1
        if vR3.equals@extra("-pattern")==0 goto B571;   
  +B551:   #1
        vi4 = 15;    
        goto +B571;   [iRi RRRR . ...]
  +B558:   #1
        if vR3.equals@extra("-threadid")==0 goto B571;   
  +B567:   #1
        vi4 = 16;    
  +B571:   #34
        tswitch (vi4) B656 B682 B708 B734 B742 B750 B758 B792 B834 B891 B906 B924 B942 B960 B978 B996 B1019 : B1027;   
  +B656:   #1
        vR0.opt_dump = 1;   
        vR0.names = vR0.getNames@special(vR1,vi2);   
        vi2 = (vi2+vR0.names.length);    
        goto +B1057;   [iRi RRRR . ...]
  +B682:   #1
        vR0.opt_remove = 1;   
        vR0.names = vR0.getNames@special(vR1,vi2);   
        vi2 = (vi2+vR0.names.length);    
        goto +B1057;   [iRi RRRR . ...]
  +B708:   #1
        vR0.opt_include = 1;   
        vR0.names = vR0.getNames@special(vR1,vi2);   
        vi2 = (vi2+vR0.names.length);    
        goto +B1057;   [iRi RRRR . ...]
  +B734:   #1
        vR0.opt_dumpTypes = 1;   
        goto +B1057;   [iRi RRRR . ...]
  +B742:   #1
        vR0.opt_dumpAll = 1;   
        goto +B1057;   [iRi RRRR . ...]
  +B750:   #1
        vR0.opt_diff = 1;   
        goto +B1057;   [iRi RRRR . ...]
  +B758:   #1
        b1 = new java/io/PrintStream;    
        b2 = b1;    
        b3 = new java/io/FileOutputStream(vR1[(vi2+1)]);    [ RRRR . i..][ RRRR . iRR]
        b2.<init>@special(b3);   [iRi RRRR . RR.] 
        vR0.out = b1;   
        vi2++;   
        vR0.opt_graph = 1;   
        goto +B1057;   [iRi RRRR . ...]
  +B792:   #1
        vR0.filename = vR1[(vi2+1)];   
        b1 = new java/io/PrintStream;    
        b2 = b1;    
        b3 = new java/io/FileOutputStream(vR0.filename);    [ RRRR . i..][ RRRR . iRR]
        b2.<init>@special(b3);   [iRi RRRR . RR.] 
        vR0.out = b1;   
        vi2++;   
        vR0.opt_count = 1;   
        goto +B1057;   [iRi RRRR . ...]
  +B834:   #1
        vR0.filename = vR1[(vi2+1)];   
        b1 = new java/io/PrintStream;    
        b2 = b1;    
        b3 = new java/io/FileOutputStream(vR0.filename);    [ RRRR . i..][ RRRR . iRR]
        b2.<init>@special(b3);   [iRi RRRR . RR.] 
        vR0.out = b1;   
        vi2++;   
        vR0.interval = parseInt@special(vR1[(vi2+1)]);   
        vi2++;   
        vR0.opt_countfreq = 1;   
        goto +B1057;   [iRi RRRR R ...]
  +B891:   #1
        vR0.starteventname = vR1[(vi2+1)];   
        vi2++;   
        goto +B1057;   [iRi RRRR . ...]
  +B906:   #1
        vR0.maxevents = parseInt@special(vR1[(vi2+1)]);   
        vi2++;   
        goto +B1057;   [iRi RRRR R ...]
  +B924:   #1
        vR0.maxtime = parseInt@special(vR1[(vi2+1)]);   
        vi2++;   
        goto +B1057;   [iRi RRRR R ...]
  +B942:   #1
        vR0.timefactor = parseFloat@special(vR1[(vi2+1)]);   
        vi2++;   
        goto +B1057;   [iRi RRRR . ...]
  +B960:   #1
        vR0.timecorrector = parseLong@special(vR1[(vi2+1)]);   
        vi2++;   
        goto +B1057;   [iRi RRRR . ...]
  +B978:   #1
        vR0.timescale = parseInt@special(vR1[(vi2+1)]);   
        vi2++;   
        goto +B1057;   [iRi RRRR R ...]
  +B996:   #1
        vR0.patternlength = parseInt@special(vR1[(vi2+1)]);   
        vi2++;   
        vR0.opt_pattern = 1;   
        goto +B1057;   [iRi RRRR R ...]
  +B1019:   #1
        vR0.opt_tid = 1;   
        goto +B1057;   [iRi RRRR . ...]
  +B1027:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR . i..][ RRRR . iR.]
        b0.println(b1.append@extra("Unknown option ").append@extra(vR1[vi2]).toString@extra());   [iRi RRRR iii. RR.] 
        usage@special();   [iRi RRRR iii. ...]
  +B1057:   #17
        vi2++;   
        goto +B144;   [iRi RRRR .... ...]
  +B1063:   #1
        vR3 = new jx/vis/Events(vR0.in,vR0.verbose);    [ RRRR .... i..][ RRRR .... ibRR]
        vR0.names2nums@special(vR3);   [iRi RRRR .... RR..] 
        if vR0.opt_graph==0 goto B1559;   
  +B1091:   #1
        vR0.out.println("digraph G {");   [iRi RRRR i... RR..] 
        vR4 = new java/util/Vector();    [ RRRR i... i...][ RRRR i... iR..]
        out.println("Creating graph...");   [iRR RRRR ii.. RR..] 
        b2 = new jx/vis/EventAnalyzer$1(vR0,vR4);    [ RRRR ii.. i...][ RRRR ii.. iRRR]
        vR0.processAll@special(vR3,b2);   [iRR RRRR ii.. RRR.] 
        out.println("Done.");   [iRR RRRR iii. RR..] 
        vi5 = 0;    
  +B1143:   #1
        if vi5>=vR4.size@extra() goto B1224;   
  +B1153:   #1
        vR6 = (jx/vis/EventAnalyzer$1Edge)(vR4.elementAt(vi5));    
        vi7 = 0;    
  +B1168:   #1
        if vi7>=vR6.number goto B1202;   
  +B1178:   #1
        vR6.median = (vR6.median+vR6.times[vi7]);   
        vi7++;   
        goto +B1168;   [iRRiRi RRRR .... ....]
  +B1202:   #1
        vR6.median = (vR6.median/(long)vR6.number);   
        vi5++;   
        goto +B1143;   [iRRiRi RRRR .... ....]
  +B1224:   #1
        vi5 = 0;    
  +B1227:   #1
        if vi5>=vR4.size@extra() goto B1341;   
  +B1237:   #1
        vR6 = (jx/vis/EventAnalyzer$1Edge)(vR4.elementAt(vi5));    
        vl7 = 0;    
        vi8 = 0;    
  +B1255:   #1
        if vi8>=vR6.number goto B1304;   
  +B1265:   #1
        vl7 = ((float)vR6.median-(float)vR6.times[vi8]);    
        vR6.variance = (vR6.variance+(vl7*vl7));   
        vi8++;   
        goto +B1255;   [iRRiRli RRRR .... ....]
  +B1304:   #1
        vR6.variance = (vR6.variance/(float)vR6.number);   
        vR6.deviation = (float)sqrt@special((double)vR6.variance);   
        vi5++;   
        goto +B1227;   [iRRiRli RRRR .... ....]
  +B1341:   #1
        vi5 = 0;    
  +B1344:   #1
        if vi5>=vR4.size@extra() goto B1396;   
  +B1354:   #1
        vR6 = (jx/vis/EventAnalyzer$1Edge)(vR4.elementAt(vi5));    
        if vR0.maxtime==0 goto B1390;   
  +B1373:   #1
        if compare(vR6.median,(long)vR0.maxtime)<=0 goto B1390;   
  +B1387:   #1
        goto +B1390;   [iRRiRli RRRR .... ....]
  +B1390:   #3
        vi5++;   
        goto +B1344;   [iRRiRli RRRR .... ....]
  +B1396:   #1
        vR5 = vR3.types;    
        vi6 = vR5.length;    
        vi7 = 0;    
  +B1410:   #1
        if vi7>=vi6 goto B1546;   
  +B1417:   #1
        vR8 = vR5[vi7];    
        vi9 = 0;    
        vi10 = 0;    
  +B1430:   #1
        if vi10>=vR4.size@extra() goto B1490;   
  +B1440:   #1
        vR11 = (jx/vis/EventAnalyzer$1Edge)(vR4.elementAt(vi10));    
        if vR11.from==vR8.number goto B1478;   
  +B1465:   #1
        if vR11.to!=vR8.number goto B1484;   
  +B1478:   #1
        vi9 = 1;    
        goto +B1490;   [iRRRiiRiiR RRRR .... ....]
  +B1484:   #1
        vi10++;   
        goto +B1430;   [iRRRiiRiiR RRRR .... ....]
  +B1490:   #2
        if vi9==0 goto B1540;   
  +B1495:   #1
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RRRR .... i...][ RRRR .... iR..]
        b0.println(b1.append@extra(vR8.number).append@extra(" [label="").append@extra(vR8.name).append@extra(""];").toString@extra());   [iRRRiiRiiR RRRR iiiii... RR...] 
  +B1540:   #1
        vi7++;   
        goto +B1410;   [iRRRiiRiiR RRRR ........ .....]
  +B1546:   #1
        vR0.out.println("}");   [iRRRiiRiiR RRRR i....... RR...] 
        goto +B2367;   forward return[iRRRiiRiiR RRRR i....... .....]
  +B1559:   #1
        if vR0.opt_count!=0 goto B1573;   
  +B1566:   #1
        if vR0.opt_countfreq==0 goto B1911;   
  +B1573:   #1
        out.println("Creating file...");   [iRRRiiRiiR RRRR i....... RR...] 
        vR0.out.print("# time ");   [iRRRiiRiiR RRRR ii...... RR...] 
        vR4 = vR3.types;    
        vi5 = vR4.length;    
        vi6 = 0;    
  +B1606:   #1
        if vi6>=vi5 goto B1657;   
  +B1613:   #1
        vR7 = vR4[vi6];    
        b0 = vR0.out;    
        b1 = new java/lang/StringBuilder();    [ RRRR ........ i....][ RRRR ........ iR...]
        b0.print(b1.append@extra(vR7.name).append@extra(" ").toString@extra());   [iRRiiRRiiR RRRR iii..... RR...] 
        vi6++;   
        goto +B1606;   [iRRiiRRiiR RRRR iii..... .....]
  +B1657:   #1
        vR0.out.println();   [iRRiiRRiiR RRRR ........ R....] 
        vR4 = new int[vR3.types.length];    
        b2 = new jx/vis/EventAnalyzer$2(vR0,vR3,vR4);    [ RRRR ........ i....][ RRRR ........ iRRRR]
        vR0.processAll@special(vR3,b2);   [iRRiiRRiiR RRRR ........ RRR..] 
        out.println("Use the following lines to control gnuplot:");   [iRRiiRRiiR RRRR i....... RR...] 
        out.println("set output "schedevents.mif"");   [iRRiiRRiiR RRRR ii...... RR...] 
        out.println("set terminal mif monochrome");   [iRRiiRRiiR RRRR iii..... RR...] 
        if vR0.opt_count==0 goto B1735;   
  +B1723:   #1
        out.println("set ylabel "Events" ");   [iRRiiRRiiR RRRR i....... RR...] 
        goto +B1770;   [iRRiiRRiiR RRRR i....... .....]
  +B1735:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR ........ i....][ RRRR ........ iR...]
        b0.println(b1.append@extra("set ylabel "Events/").append@extra(vR0.interval).append@extra("" ").toString@extra());   [iRRiiRRiiR RRRR iiii.... RR...] 
  +B1770:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR ........ i....][ RRRR ........ iR...]
        b0.println(b1.append@extra("set xlabel "Time (").append@extra(vR0.getTimeScale@special()).append@extra(")"").toString@extra());   [iRRiiRRiiR RRRR ii.ii... RR...] 
        out.println("plot \");   [iRRiiRRiiR RRRR iiiii... RR...] 
        vi5 = 0;    
  +B1817:   #1
        if vi5>=vR3.types.length goto B1908;   
  +B1827:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR ........ i....][ RRRR ........ iR...]
        b0.print(b1.append@extra(""").append@extra(vR0.filename).append@extra("" using 1:").append@extra((vi5+2)).append@extra(" with lines").toString@extra());   [iRRiiRRiiR RRRR iiiiii.... RR....] 
        if vi5>=(vR3.types.length-1) goto B1896;   
  +B1887:   #1
        out.print(",");   [iRRiiRRiiR RRRR i......... RR....] 
  +B1896:   #1
        out.println();   [iRRiiRRiiR RRRR .......... R.....] 
        vi5++;   
        goto +B1817;   [iRRiiRRiiR RRRR .......... ......]
  +B1908:   #1
        goto +B2367;   forward return[iRRiiRRiiR RRRR .......... ......]
  +B1911:   #1
        if vR0.opt_pattern==0 goto B2259;   
  +B1918:   #1
        vR4 = new java/util/Vector();    [ RRRR .......... i.....][ RRRR .......... iR....]
        vi5 = vR0.patternlength;    
  +B1933:   #1
        if vi5>=vR3.nevents goto B2138;   
  +B1942:   #1
        vi6 = 0;    
        vi7 = 0;    
  +B1948:   #1
        if vi7>=vR4.size@extra() goto B2049;   
  +B1958:   #1
        vR8 = (jx/vis/EventAnalyzer$1Pattern)(vR4.elementAt(vi7));    
        vi9 = 0;    
  +B1973:   #1
        if vi9>=vR0.patternlength goto B2017;   
  +B1982:   #1
        if vR8.pattern[vi9]!=vR3.all[((vi5-vR0.patternlength)+vi9)].number goto B2017;   
  +B2011:   #1
        vi9++;   
        goto +B1973;   [iRRiiiRiiR RRRR .......... ......]
  +B2017:   #2
        if vi9!=vR0.patternlength goto B2043;   
  +B2026:   #1
        vR8.number = (vR8.number+1);   
        vi6 = 1;    
        goto +B2049;   [iRRiiiRiiR RRRR .......... ......]
  +B2043:   #1
        vi7++;   
        goto +B1948;   [iRRiiiiiiR RRRR .......... ......]
  +B2049:   #2
        if vi6!=0 goto B2132;   
  +B2054:   #1
        vR7 = new jx/vis/EventAnalyzer$1Pattern(vR0);    [ RRRR .......... i.....][ RRRR .......... iRR...]
        vR7.pattern = new int[vR0.patternlength];   
        vR7.number = 1;   
        vi8 = 0;    
  +B2084:   #1
        if vi8>=vR0.patternlength goto B2125;   
  +B2093:   #1
        vR7.pattern[vi8] = vR3.all[((vi5-vR0.patternlength)+vi8)].number;   
        vi8++;   
        goto +B2084;   [iRRiiRiiiR RRRR .......... ......]
  +B2125:   #1
        vR4.addElement@extra(vR7);   [iRRiiRiiiR RRRR .......... RR....] 
  +B2132:   #1
        vi5++;   
        goto +B1933;   [iRRiiRiiiR RRRR .......... ......]
  +B2138:   #1
        vi5 = 0;    
  +B2141:   #1
        if vi5>=vR4.size@extra() goto B2256;   
  +B2151:   #1
        vR6 = (jx/vis/EventAnalyzer$1Pattern)(vR4.elementAt(vi5));    
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR .......... i.....][ RRRR .......... iR....]
        b0.print(b1.append@extra(vR6.number).append@extra("    ").toString@extra());   [iRRiRiiiiR RRRR iii....... RR....] 
        vi7 = 0;    
  +B2196:   #1
        if vi7>=vR0.patternlength goto B2244;   
  +B2205:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR .......... i.....][ RRRR .......... iR....]
        b0.print(b1.append@extra(" ").append@extra(vR6.pattern[vi7]).toString@extra());   [iRRiRiiiiR RRRR iii....... RR....] 
        vi7++;   
        goto +B2196;   [iRRiRiiiiR RRRR iii....... ......]
  +B2244:   #1
        out.println();   [iRRiRiiiiR RRRR .......... R.....] 
        vi5++;   
        goto +B2141;   [iRRiRiiiiR RRRR .......... ......]
  +B2256:   #1
        goto +B2367;   forward return[iRRiRiiiiR RRRR .......... ......]
  +B2259:   #1
        if vR0.opt_dumpAll==0 goto B2282;   
  +B2266:   #1
        b2 = new jx/vis/EventAnalyzer$3(vR0);    [ RRRR .......... i.....][ RRRR .......... iRR...]
        vR0.processAll@special(vR3,b2);   [iRRiRiiiiR RRRR .......... RRR...] 
        goto +B2367;   forward return[iRRiRiiiiR RRRR .......... ......]
  +B2282:   #1
        if vR0.opt_dumpTypes==0 goto B2364;   
  +B2289:   #1
        vR4 = vR3.types;    
        vi5 = vR4.length;    
        vi6 = 0;    
  +B2303:   #1
        if vi6>=vi5 goto B2361;   
  +B2310:   #1
        vR7 = vR4[vi6];    
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRRR .......... i.....][ RRRR .......... iR....]
        b0.println(b1.append@extra(vR7.number).append@extra(" ").append@extra(vR7.name).toString@extra());   [iRRiiRiiiR RRRR iiii...... RR....] 
        vi6++;   
        goto +B2303;   [iRRiiRiiiR RRRR iiii...... ......]
  +B2361:   #1
        goto +B2367;   forward return[iRRiiRiiiR RRRR .......... ......]
  +B2364:   #1
        usage@special();   [iRRiiRiiiR RRRR .......... ......]
  +B2367:   #5
        return;   
  +END:   #1
 }
// Register: rd 306/306 wr 223 swaps 64 any 56 found 6 <init>
 
 method processAll(Ljx/vis/Events;Ljx/vis/EventAction;)V {
  +START:   #1
        vi3 = -1;    
        if vR0.starteventname==null goto B67;   
  +B9:   #1
        vR4 = vR1.types;    
        vi5 = vR4.length;    
        vi6 = 0;    
  +B23:   #1
        if vi6>=vi5 goto B67;   
  +B30:   #1
        vR7 = vR4[vi6];    
        if vR7.name.equals@extra(vR0.starteventname)==0 goto B61;   
  +B52:   #1
        vi3 = vR7.number;    
        goto +B67;   [iRiiR R . ..]
  +B61:   #1
        vi6++;   
        goto +B23;   [iiiiR R . ..]
  +B67:   #3
        vi4 = 0;    
  +B70:   #1
        if vi4>=vR1.nevents goto B217;   
  +B79:   #1
        if compare(vR1.all[vi4].timestamp,0)>=0 goto B102;   
  -B94:   #1
        throw new java/lang/Error();   
  +B102:   #1
        if vi3==-1 goto B124;   
  +B107:   #1
        if vR1.all[vi4].number==vi3 goto B124;   
  +B121:   #1
        goto +B211;   [iiiiR R . ..]
  +B124:   #2
        vi3 = -1;    
        if vR0.isRemovedEvent@special(vR1.all[vi4].number)!=0 goto B211;   
  +B143:   #1
        if vR0.opt_include==0 goto B170;   
  +B150:   #1
        if vR0.isIncludedEvent@special(vR1.all[vi4].number)!=0 goto B170;   
  +B167:   #1
        goto +B211;   [iiiiR R . ..]
  +B170:   #2
        if vR0.maxevents==-1 goto B198;   
  +B178:   #1
        vR0.maxevents = (vR0.maxevents-1);   
        if vR0.maxevents>=0 goto B198;   
  +B195:   #1
        goto +B217;   [iiiiR R . ..]
  +B198:   #2
        vR2.action(vR1.all[vi4]);   [iiiiR R i RR] 
  +B211:   #3
        vi4++;   
        goto +B70;   [iiiiR R . ..]
  +B217:   #2
        if vi3==-1 goto B233;   
  -B222:   #1
        throw new java/lang/Error("Start event never happened!!");   
  +B233:   #1
        return;   
  +END:   #1
 }
// Register: rd 34/34 wr 13 swaps 4 any 6 found 0 processAll
 
 method names2nums(Ljx/vis/Events;)V {
  +START:   #1
        if vR0.names!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        vR0.nums = new int[vR0.names.length];   
        vi2 = 0;    
  +B21:   #1
        if vi2>=vR0.names.length goto B98;   
  +B30:   #1
        vR3 = vR1.types;    
        vi4 = vR3.length;    
        vi5 = 0;    
  +B42:   #1
        if vi5>=vi4 goto B92;   
  +B49:   #1
        vR6 = vR3[vi5];    
        if vR6.name.equals@extra(vR0.names[vi2])==0 goto B86;   
  +B72:   #1
        vR0.nums[vi2] = vR6.number;   
        goto +B92;   [iRiiR  . ..]
  +B86:   #1
        vi5++;   
        goto +B42;   [iRiiR  . ..]
  +B92:   #2
        vi2++;   
        goto +B21;   [iRiiR  . ..]
  +B98:   #1
        return;   
  +END:   #1
 }
// Register: rd 19/19 wr 8 swaps 1 any 4 found 0 names2nums
 
 method isRemovedEvent(I)Z {
  +START:   #1
        if vR0.opt_remove!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        vi2 = 0;    
  +B11:   #1
        if vi2>=vR0.nums.length goto B38;   
  +B20:   #1
        if vi1!=vR0.nums[vi2] goto B32;   
  +B30:   #1
        return 1;   
  +B32:   #1
        vi2++;   
        goto +B11;   [i   ]
  +B38:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 3 found 0 isRemovedEvent
 
 method isIncludedEvent(I)Z {
  +START:   #1
        if vR0.opt_include!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        vi2 = 0;    
  +B11:   #1
        if vi2>=vR0.nums.length goto B38;   
  +B20:   #1
        if vi1!=vR0.nums[vi2] goto B32;   
  +B30:   #1
        return 1;   
  +B32:   #1
        vi2++;   
        goto +B11;   [i   ]
  +B38:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 3 found 0 isIncludedEvent
 
 method getTimeScale()Ljava/lang/String; {
  +START:   #1
        tswitch (vR0.timescale) B36 B40 B44 B48 : B52;   
  +B36:   #1
        return "nano";   
  +B40:   #1
        return "micro";   
  +B44:   #1
        return "milli";   
  +B48:   #1
        return "sec";   
  +B52:   #1
        return "unknown";   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getTimeScale
 
 method correctTime(J)D {
  +START:   #1
        return ((double)(vl1-vR0.timecorrector)*(double)vR0.timefactor);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 correctTime
 
 method access$000(Ljx/vis/EventAnalyzer;J)D {
  +START:   #1
        return vR0.correctTime@special(vl1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 access$000
}
