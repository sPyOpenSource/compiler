class java/awt/image/RGBImageFilter {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.origmodel = getRGBdefault@special();   
        vR0.canFilterIndexColorModel = 0;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method setColorModel(Ljava/awt/image/ColorModel;)V {
  +START:   #1
        vR0.origmodel = vR1;   
        vR0.newmodel = vR1;   
        if (vR1 instanceof java/awt/image/IndexColorModel)==0 goto B36;   
  +B17:   #1
        if vR0.canFilterIndexColorModel==0 goto B36;   
  +B24:   #1
        vR0.newmodel = vR0.filterIndexColorModel@this((java/awt/image/IndexColorModel)(vR1));   
  +B36:   #2
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 0 swaps 0 any 0 found 1 setColorModel
 
 method substituteColorModel(Ljava/awt/image/ColorModel;Ljava/awt/image/ColorModel;)V {
  +START:   #1
        vR0.origmodel = vR1;   
        vR0.newmodel = vR2;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 substituteColorModel
 
 method filterIndexColorModel(Ljava/awt/image/IndexColorModel;)Ljava/awt/image/IndexColorModel; {
  +START:   #1
        vi2 = vR1.getMapSize@extra();    [ R  R] 
        vR4 = new byte[vi2];    
        vR5 = new byte[vi2];    
        vR6 = new byte[vi2];    
        vR7 = new byte[vi2];    
        vR1.getAlphas@extra(vR7);   [i?RRRR R  RR] 
        vR1.getReds@extra(vR4);   [i?RRRR R  RR] 
        vR1.getGreens@extra(vR5);   [i?RRRR R  RR] 
        vR1.getBlues@extra(vR6);   [i?RRRR R  RR] 
        vi8 = 0;    
  +B52:   #1
        if vi8>=vi2 goto B145;   
  +B58:   #1
        vi3 = vR0.filterRGB@this(-1,-1,vR0.makeColor@special(vR7[vi8],vR4[vi8],vR5[vi8],vR6[vi8]));    [i?RRRRi R ibbbi iiiR.] 
        vR7[vi8] = (byte)((-16777216 & vi3) >> 24);   
        vR4[vi8] = (byte)((16711680 & vi3) >> 16);   
        vR5[vi8] = (byte)((65280 & vi3) >> 8);   
        vR6[vi8] = (byte)(255 & vi3);   
        vi8++;   
        goto +B52;   [iiRRRRi R ibbbi .....]
  +B145:   #1
        return new java/awt/image/IndexColorModel(vR1.getPixelSize(),vi2,vR4,vR5,vR6,vR7);   
  +END:   #1
 }
// Register: rd 41/41 wr 14 swaps 2 any 2 found 0 filterIndexColorModel
 
 method makeColor(BBBB)I {
  +START:   #1
        return ((((-16777216 & (vi1 << 24)) | (16711680 & (vi2 << 16))) | (65280 & (vi4 << 8))) | (255 & vi3));   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 makeColor
 
 method filterRGBPixels(IIII[III)V {
  +START:   #1
        vi8 = vi1;    
  +B3:   #1
        if vi8>=(vi1+vi3) goto B71;   
  +B11:   #1
        vi9 = vi2;    
  +B14:   #1
        if vi9>=(vi2+vi4) goto B65;   
  +B23:   #1
        vR5[((vi6+(vi9*vi7))+vi8)] = vR0.filterRGB@this(vi8,vi9,vR5[((vi6+(vi9*vi7))+vi8)]);   
        vi9++;   
        goto +B14;   [ii  i ....]
  +B65:   #1
        vi8++;   
        goto +B3;   [ii  . ....]
  +B71:   #1
        return;   
  +END:   #1
 }
// Register: rd 21/21 wr 5 swaps 1 any 6 found 0 filterRGBPixels
 
 method setPixels(IIIILjava/awt/image/ColorModel;[BII)V {
  +START:   #1
        if vR5!=vR0.origmodel goto B36;   
  +B9:   #1
        vR0.consumer.setPixels(vi1,vi2,vi3,vi4,vR0.newmodel,vR6,vi7,vi8);   [  i iiRRiiiiR] 
        goto +B60;   forward return[  i .........]
  +B36:   #1
        vR9 = new int[(vR6.length/4)];    
        vR0.filterRGBPixels@this(vi1,vi2,vi3,vi4,vR9,vi7,vi8);   [R  . iiRiiiiR.] 
  +B60:   #1
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 1 any 1 found 0 setPixels
 
 method setPixels(IIIILjava/awt/image/ColorModel;[III)V {
  +START:   #1
        if vR5!=vR0.origmodel goto B36;   
  +B9:   #1
        vR0.consumer.setPixels(vi1,vi2,vi3,vi4,vR0.newmodel,vR6,vi7,vi8);   [  i iiRRiiiiR] 
        goto +B68;   forward return[  i .........]
  +B36:   #1
        vR0.convertColorModelToDefault@special(vi1,vi2,vi3,vi4,vR5,vR6,vi7,vi8);   [  . iiRRiiiiR] 
        vR0.filterRGBPixels@this(vi1,vi2,vi3,vi4,vR6,vi7,vi8);   [  . iiRiiiiR.] 
  +B68:   #1
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 1 any 1 found 0 setPixels
 
 method convertColorModelToDefault(IIIILjava/awt/image/ColorModel;[III)V {
  +START:   #1
        vi9 = vi1;    
  +B3:   #1
        if vi9>=(vi1+vi3) goto B67;   
  +B11:   #1
        vi10 = vi2;    
  +B14:   #1
        if vi10>=(vi2+vi4) goto B61;   
  +B23:   #1
        vR6[((vi7+(vi10*vi8))+vi9)] = vR0.makeColorbyDefaultCM@special(vR6[((vi7+(vi10*vi8))+vi9)]);   
        vi10++;   
        goto +B14;   [ii  i ..]
  +B61:   #1
        vi9++;   
        goto +B3;   [ii  . ..]
  +B67:   #1
        return;   
  +END:   #1
 }
// Register: rd 21/21 wr 5 swaps 1 any 6 found 0 convertColorModelToDefault
 
 method makeColorbyDefaultCM(I)I {
  +START:   #1
        return vR0.makeColor@special(vR0.origmodel.getRed(vi1),vR0.origmodel.getGreen(vi1),vR0.origmodel.getGreen(vi1),vR0.origmodel.getBlue(vi1));   
  +END:   #1
 }
// Register: rd 8/8 wr 7 swaps 3 any 0 found 0 makeColorbyDefaultCM
 
 method makeColor(IIII)I {
  +START:   #1
        return ((((-16777216 & (vi1 << 24)) | (16711680 & (vi2 << 16))) | (65280 & (vi4 << 8))) | (255 & vi3));   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 makeColor
}
