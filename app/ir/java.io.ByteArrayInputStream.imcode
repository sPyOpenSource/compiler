class java/io/ByteArrayInputStream {
 
 method <init>([B)V {
  +START:   #1
        vR0.<init>@special(vR1,0,vR1.length);   [  i iiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>([BII)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.buf = vR1;   
        vR0.pos = vi2;   
        vR0.count = vi3;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method close()V {
  +START:   #1
        vR0.close@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 close
 
 method available()I {
  +START:   #1
        return (vR0.count-vR0.pos);   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 available
 
 method markSupported()Z {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 markSupported
 
 method mark(I)V {
  +START:   #1
        vR0.mark = vR0.pos;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 mark
 
 method reset()V {
  +START:   #1
        vR0.pos = vR0.mark;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 reset
 
 method skip(J)J {
  +START:   #1
        if compare(vl1,(long)(vR0.count-vR0.pos))<=0 goto B36;   
  +B15:   #1
        vi3 = (vR0.count-vR0.pos);    
        vR0.pos = vR0.count;   
        return (long)vi3;   
  +B36:   #1
        vR0.pos = (int)((long)vR0.pos+vl1);   
        return vl1;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 0 found 0 skip
 
 method read()I {
  +START:   #1
        if vR0.pos<vR0.count goto B13;   
  +B11:   #1
        return -1;   
  +B13:   #1
        vR0.pos = (vR0.pos+1);   
        return (vR0.buf[(vR0.pos-1)] & 255);   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 read
 
 method read([BII)I {
  +START:   #1
        if vi3!=0 goto B6;   
  +B4:   #1
        return 0;   
  +B6:   #1
        if vR0.pos!=vR0.count goto B19;   
  +B17:   #1
        return -1;   
  +B19:   #1
        if vi3>=(vR0.count-vR0.pos) goto B58;   
  +B32:   #1
        arraycopy@special(vR0.buf,vR0.pos,vR1,vi2,vi3);   [  Ri iiRiR]
        vR0.pos = (vR0.pos+vi3);   
        return vi3;   
  +B58:   #1
        arraycopy@special(vR0.buf,vR0.pos,vR1,vi2,(vR0.count-vR0.pos));   [  Rii iiRiR]
        vi4 = (vR0.count-vR0.pos);    
        vR0.pos = vR0.count;   
        return vi4;   
  +END:   #1
 }
// Register: rd 21/21 wr 6 swaps 0 any 2 found 0 read
}
