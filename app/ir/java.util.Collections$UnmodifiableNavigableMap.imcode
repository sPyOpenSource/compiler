class java/util/Collections$UnmodifiableNavigableMap {
 
 method <init>(Ljava/util/NavigableMap;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.nm = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method lowerKey(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.nm.lowerKey(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lowerKey
 
 method floorKey(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.nm.floorKey(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 floorKey
 
 method ceilingKey(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.nm.ceilingKey(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 ceilingKey
 
 method higherKey(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.nm.higherKey(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 higherKey
 
 method lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry; {
  +START:   #1
        vR2 = vR0.nm.lowerEntry(vR1);    [ R  RR] 
        if 0==vR2 goto B27;   
  +B16:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR2);    [ R  i.][ R . iRR]
        goto +B28b0;   forward return[R R . ...]
  +B27:   #1
        b0 = 0;    
  +B28b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 lowerEntry
 
 method floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry; {
  +START:   #1
        vR2 = vR0.nm.floorEntry(vR1);    [ R  RR] 
        if 0==vR2 goto B27;   
  +B16:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR2);    [ R  i.][ R . iRR]
        goto +B28b0;   forward return[R R . ...]
  +B27:   #1
        b0 = 0;    
  +B28b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 floorEntry
 
 method ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry; {
  +START:   #1
        vR2 = vR0.nm.ceilingEntry(vR1);    [ R  RR] 
        if 0==vR2 goto B27;   
  +B16:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR2);    [ R  i.][ R . iRR]
        goto +B28b0;   forward return[R R . ...]
  +B27:   #1
        b0 = 0;    
  +B28b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 ceilingEntry
 
 method higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry; {
  +START:   #1
        vR2 = vR0.nm.higherEntry(vR1);    [ R  RR] 
        if 0==vR2 goto B27;   
  +B16:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR2);    [ R  i.][ R . iRR]
        goto +B28b0;   forward return[R R . ...]
  +B27:   #1
        b0 = 0;    
  +B28b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 higherEntry
 
 method firstEntry()Ljava/util/Map$Entry; {
  +START:   #1
        vR1 = vR0.nm.firstEntry();    [ R  R] 
        if 0==vR1 goto B26;   
  +B15:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR1);    [ R  i][ R . iRR]
        goto +B27b0;   forward return[R R . ...]
  +B26:   #1
        b0 = 0;    
  +B27b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 firstEntry
 
 method lastEntry()Ljava/util/Map$Entry; {
  +START:   #1
        vR1 = vR0.nm.lastEntry();    [ R  R] 
        if 0==vR1 goto B26;   
  +B15:   #1
        b0 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR1);    [ R  i][ R . iRR]
        goto +B27b0;   forward return[R R . ...]
  +B26:   #1
        b0 = 0;    
  +B27b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 lastEntry
 
 method pollFirstEntry()Ljava/util/Map$Entry; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 pollFirstEntry
 
 method pollLastEntry()Ljava/util/Map$Entry; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 pollLastEntry
 
 method descendingMap()Ljava/util/NavigableMap; {
  +START:   #1
        return unmodifiableNavigableMap@special(vR0.nm.descendingMap());   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 descendingMap
 
 method navigableKeySet()Ljava/util/NavigableSet; {
  +START:   #1
        return unmodifiableNavigableSet@special(vR0.nm.navigableKeySet());   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 navigableKeySet
 
 method descendingKeySet()Ljava/util/NavigableSet; {
  +START:   #1
        return unmodifiableNavigableSet@special(vR0.nm.descendingKeySet());   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 descendingKeySet
 
 method subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap; {
  +START:   #1
        return unmodifiableNavigableMap@special(vR0.nm.subMap(vR1,vi2,vR3,vi4));   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 subMap
 
 method headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap; {
  +START:   #1
        return unmodifiableNavigableMap@special(vR0.nm.headMap(vR1,vi2));   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 headMap
 
 method tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap; {
  +START:   #1
        return unmodifiableNavigableMap@special(vR0.nm.tailMap(vR1,vi2));   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 tailMap
}
