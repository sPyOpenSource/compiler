class jx/synch/blocking/Test {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method init(Ljx/zero/Naming;)V {
  +START:   #1
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream((jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0")));    [ RRR  i][ RRR .i. iRR]
        b1.<init>@special(b2);   [ RRR .i. RR.] 
        out = b0;   
        vR1 = (jx/zero/CPUManager)(vR0.lookup("CPUManager"));    
        vR2 = new jx/synch/blocking/Queue(vR1.getCPUState());    [ RRR ii. i..][ RRR ii. iRR]
        b0 = new jx/synch/blocking/Test$1(vR2);    [ RRR ii. i..][ RRR ii. iRR]
        b0.start();   [RR RRR ii. R..] 
        produce@special(vR2);   [RR RRR ii. R..]
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 13 swaps 2 any 1 found 1 init
 
 method produce(Ljx/synch/blocking/Queue;)V {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        vR2 = new java/lang/Integer(vi1);    [ R  i][ R . iiR]
        vR0.enqueue@this(vR2);   [iR R . RR.] 
        vi1++;   
        goto +B2;   [iR R . ...]
  +END:   #1
 }
// Register: rd 4/4 wr 4 swaps 0 any 1 found 0 produce
 
 method consume(Ljx/synch/blocking/Queue;)V {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        vR2 = (java/lang/Integer)(vR0.dequeue@this());    
        if vR2.intValue()==vi1 goto B28;   
  -B18:   #1
        throw new java/lang/Error("ERROR IN QUEUE / WRONG ELEMENT");   
  +B28:   #1
        vi1++;   
        out.print("*");   [iR R i. RR.] 
        goto +B2;   [iR R i. ...]
  +END:   #1
 }
// Register: rd 6/6 wr 7 swaps 1 any 1 found 0 consume
}
