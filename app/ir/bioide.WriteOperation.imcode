class bioide/WriteOperation {
 
 method <init>(Ljx/zero/Memory;ILbioide/Controller;Lbioide/Drive;IZ)V {
  +START:   #1
        vR0.<init>@special(vR1,vi2,vR3,vR4,vi5,vi6);   [   iiRRiRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method startOperation()V {
  +START:   #1
        vR0.ioInit@this();   [ R  R] 
        if vR0.sector>=100 goto B36;   
  -B13:   #1
        out.println("Write with sector < 100, aborting.");   [ R i. RR] 
        vR0.endOperation@this(0);   [ R i. iR] 
        throw new bioide/IDEException("Write with sector < 100, aborting.");   
  +B36:   #1
        vR0.controller.setCommandReg(48);   [ R .. iR.] 
        if vR0.controller.waitFor(88,-95,50)!=0 goto B84;   
  -B61:   #1
        out.println("Drive not ready.");   [ R i. RR..] 
        vR0.endOperation@this(0);   [ R i. iR..] 
        throw new bioide/IDEException("Drive not ready.");   
  +B84:   #1
        vR0.controller.setTimeout(10,0);   [ R .. iiR.] 
        vR0.controller.outputData(vR0.buffer,0,128);   [ R i. iiRR] 
  +B109:   #1
        if vR0.count<=0 goto B222;   
  +B116:   #1
        vi1 = 100;    
  +B119:   #1
        if vi1> 0 goto B141;   
  -B123:   #1
        out.println("Timeout");   [i R i. RR..] 
        throw new bioide/IDEException("Timeout");   
  +B141:   #1
        sleepManager.mdelay(50);   [i R .. iR..] 
        vi1--;   
        if vR0.controller.statusBusy()!=0 goto B119;   
  +B164:   #1
        sleepManager.mdelay(50);   [i R .. iR..] 
        if (vR0.controller.getStatus() & -15)==80 goto B215;   
  -B189:   #1
        vR0.controller.getStatus();   [i R .. R...] 
        out.println("Interrupt, but drive not ready");   [i R i. RR..] 
        throw new bioide/IDEException("Interrupt, but drive not ready");   
  +B215:   #1
        vR0.handler@this();   [i R .. R...] 
        goto +B109;   [i R .. ....]
  +B222:   #1
        return;   
  +END:   #1
 }
// Register: rd 20/20 wr 16 swaps 5 any 2 found 0 startOperation
 
 method handler()V {
  +START:   #1
        vi1 = vR0.controller.getStatus();    [ ii  R] 
        if (vi1 & -15)!=80 goto B147;   
  +B17:   #1
        if vR0.count!=1 goto B29;   
  +B25:   #1
        b0 = 1;    
        goto +B30b0;   [i ii  .]
  +B29:   #1
        b0 = 0;    
  +B30b0:   #1 int
        if (vi1 & 8)==0 goto B41;   
  +B37b0:   #1 int
        b1 = 1;    
        goto +B42b0b1;   [i ii  .]
  +B41b0:   #1 int
        b1 = 0;    
  +B42b0b1:   #1 int int
        if (b0 ^ b1)==0 goto B139;   
  +B46:   #1
        vR0.sector = (vR0.sector+1);   
        vR0.offset = (vR0.offset+128);   
        vR0.errors = 0;   
        vR0.count = (vR0.count-1);   
        if vR0.count> 0 goto B98;   
  +B90:   #1
        vR0.endOperation@this(1);   [i ii  iR] 
        goto +B138;   forward return[i ii  ..]
  +B98:   #1
        vR0.controller.setTimeout(10,0);   [i ii  iiR] 
        vR0.controller.outputData(vR0.buffer,vR0.offset,128);   [i ii ii iiRR] 
        vR0.state.set(STATE_COMPLETED);   [i ii iii RR..] 
  +B138:   #1
        return;   
  +B139:   #1
        out.println("Laufwerk nicht bereit");   [i ii i.. RR..] 
  +B147:   #1
        vR0.controller.ideError(vR0.drive,"write interrupt",vi1);   [i ii iR. iRRR] 
        return;   
  +END:   #1
 }
// Register: rd 22/22 wr 10 swaps 4 any 3 found 0 handler
}
