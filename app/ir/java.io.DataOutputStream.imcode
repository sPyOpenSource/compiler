class java/io/DataOutputStream {
 
 method <init>(Ljava/io/OutputStream;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method write(I)V {
  +START:   #1
        vR0.out.write(vi1);   [   iR] 
        vR0.written = (vR0.written+1);   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 write
 
 method write([BII)V {
  +START:   #1
        vR0.out.write(vR1,vi2,vi3);   [   iiRR] 
        vR0.written = (vR0.written+vi3);   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 write
 
 method flush()V {
  +START:   #1
        vR0.out.flush();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 flush
 
 method writeBoolean(Z)V {
  +START:   #1
        b0 = vR0.out;    
        if vi1==0 goto B12;   
  +B8b0:   #1 reference
        b1 = 1;    
        goto +B13b0b1;   [ Ri  ]
  +B12b0:   #1 reference
        b1 = 0;    
  +B13b0b1:   #1 reference int
        b0.write(b1);   [ Ri  iR] 
        vR0.written = (vR0.written+1);   
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 1 found 0 writeBoolean
 
 method writeByte(I)V {
  +START:   #1
        vR0.out.write(vi1);   [   iR] 
        vR0.written = (vR0.written+1);   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 writeByte
 
 method writeShort(I)V {
  +START:   #1
        vR2 = vR0.out;    
        vR2.write(((vi1 >>> 8) & 255));   [R  i iR] 
        vR2.write(((vi1 >>> 0) & 255));   [R  ii iR] 
        vR0.written = (vR0.written+2);   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 2 any 0 found 0 writeShort
 
 method writeChar(I)V {
  +START:   #1
        vR2 = vR0.out;    
        vR2.write(((vi1 >>> 8) & 255));   [R  i iR] 
        vR2.write(((vi1 >>> 0) & 255));   [R  ii iR] 
        vR0.written = (vR0.written+2);   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 2 any 0 found 0 writeChar
 
 method writeInt(I)V {
  +START:   #1
        vR2 = vR0.out;    
        vR2.write(((vi1 >>> 24) & 255));   [R  i iR] 
        vR2.write(((vi1 >>> 16) & 255));   [R  ii iR] 
        vR2.write(((vi1 >>> 8) & 255));   [R  iii iR] 
        vR2.write(((vi1 >>> 0) & 255));   [R  iiii iR] 
        vR0.written = (vR0.written+4);   
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 5 swaps 4 any 0 found 0 writeInt
 
 method writeLong(J)V {
  +START:   #1
        vR3 = vR0.out;    
        vR3.write(((int)(vl1 >>> 56) & 255));   [?R  i iR] 
        vR3.write(((int)(vl1 >>> 48) & 255));   [?R  ii iR] 
        vR3.write(((int)(vl1 >>> 40) & 255));   [?R  iii iR] 
        vR3.write(((int)(vl1 >>> 32) & 255));   [?R  iiii iR] 
        vR3.write(((int)(vl1 >>> 24) & 255));   [?R  iiiii iR] 
        vR3.write(((int)(vl1 >>> 16) & 255));   [?R  iiiiii iR] 
        vR3.write(((int)(vl1 >>> 8) & 255));   [?R  iiiiiii iR] 
        vR3.write(((int)(vl1 >>> 0) & 255));   [?R  iiiiiiii iR] 
        vR0.written = (vR0.written+8);   
        return;   
  +END:   #1
 }
// Register: rd 19/19 wr 17 swaps 8 any 0 found 0 writeLong
 
 method writeFloat(F)V {
  +START:   #1
        vR0.writeInt@extra(floatToIntBits@special(vl1));   [  i iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 writeFloat
 
 method writeDouble(D)V {
  +START:   #1
        vR0.writeLong@extra(doubleToLongBits@special(vd1));   [   ??R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 writeDouble
 
 method writeBytes(Ljava/lang/String;)V {
  +START:   #1
        vR2 = vR0.out;    
        vi3 = vR1.length@extra();    [R   R] 
        vi4 = 0;    
  +B13:   #1
        if vi4>=vi3 goto B36;   
  +B19:   #1
        vR2.write((byte)vR1.charAt@extra(vi4));   [Rii  i iR] 
        vi4++;   
        goto +B13;   [Rii  i ..]
  +B36:   #1
        vR0.written = (vR0.written+vi3);   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 5 swaps 1 any 2 found 0 writeBytes
 
 method writeChars(Ljava/lang/String;)V {
  +START:   #1
        vR2 = vR0.out;    
        vi3 = vR1.length@extra();    [R   R] 
        vi4 = 0;    
  +B13:   #1
        if vi4>=vi3 goto B58;   
  +B19:   #1
        vi5 = vR1.charAt@extra(vi4);    [Rii   iR] 
        vR2.write(((vi5 >>> 8) & 255));   [Riii  i iR] 
        vR2.write(((vi5 >>> 0) & 255));   [Riii  ii iR] 
        vi4++;   
        goto +B13;   [Riii  ii ..]
  +B58:   #1
        vR0.written = (vR0.written+(vi3*2));   
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 7 swaps 2 any 2 found 0 writeChars
 
 method writeUTF(Ljava/lang/String;)V {
  +START:   #1
        vR2 = vR0.out;    
        vi3 = vR1.length@extra();    [R R  R] 
        vi4 = 0;    
        vi5 = 0;    
  +B16:   #1
        if vi5>=vi3 goto B72;   
  +B22:   #1
        vi6 = vR1.charAt@extra(vi5);    [Riii R  iR] 
        if vi6<1 goto B49;   
  +B36:   #1
        if vi6>127 goto B49;   
  +B43:   #1
        vi4++;   
        goto +B66;   [Riiii R  ..]
  +B49:   #2
        if vi6<=2047 goto B63;   
  +B57:   #1
        vi4+=3;   
        goto +B66;   [Riiii R  ..]
  +B63:   #1
        vi4+=2;   
  +B66:   #2
        vi5++;   
        goto +B16;   [Riiii R  ..]
  +B72:   #1
        if vi4<=65535 goto B87;   
  -B79:   #1
        throw new java/io/UTFDataFormatException();   
  +B87:   #1
        vR2.write(((vi4 >>> 8) & 255));   [Riiii R i iR] 
        vR2.write(((vi4 >>> 0) & 255));   [Riiii R ii iR] 
        vi5 = 0;    
  +B115:   #1
        if vi5>=vi3 goto B266;   
  +B121:   #1
        vi6 = vR1.charAt@extra(vi5);    [Riiii R .. iR] 
        if vi6<1 goto B151;   
  +B135:   #1
        if vi6>127 goto B151;   
  +B142:   #1
        vR2.write(vi6);   [Riiii R .. iR] 
        goto +B260;   [Riiii R .. ..]
  +B151:   #2
        if vi6<=2047 goto B219;   
  +B159:   #1
        vR2.write((224 | ((vi6 >> 12) & 15)));   [Riiii R i. iR] 
        vR2.write((128 | ((vi6 >> 6) & 63)));   [Riiii R ii iR] 
        vR2.write((128 | ((vi6 >> 0) & 63)));   [Riiii R iii iR] 
        vR0.written = (vR0.written+2);   
        goto +B260;   [Riiii R iii ..]
  +B219:   #1
        vR2.write((192 | ((vi6 >> 6) & 31)));   [Riiii R i.. iR] 
        vR2.write((128 | ((vi6 >> 0) & 63)));   [Riiii R ii. iR] 
        vR0.written = (vR0.written+1);   
  +B260:   #2
        vi5++;   
        goto +B115;   [Riiii R ... ..]
  +B266:   #1
        vR0.written = (vR0.written+(vi3+2));   
        return;   
  +END:   #1
 }
// Register: rd 42/42 wr 19 swaps 7 any 14 found 0 writeUTF
 
 method size()I {
  +START:   #1
        return vR0.written;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
}
