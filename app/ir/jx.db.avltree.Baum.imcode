class jx/db/avltree/Baum {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.inhalt = 0;   
        vR0.links = 0;   
        vR0.rechts = 0;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/lang/Object;)V {
  +START:   #1
        vR0.<init>@special(LEER,vR1,LEER);   [  iR RRRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 3 swaps 1 any 0 found 0 <init>
 
 method <init>(Ljx/db/avltree/Baum;Ljava/lang/Object;Ljx/db/avltree/Baum;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.inhalt = vR2;   
        vR0.links = vR1;   
        vR0.rechts = vR3;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method empty()Z {
  +START:   #1
        if vR0.inhalt!=null goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  ]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 empty
 
 method left()Ljx/db/avltree/Baum; {
  +START:   #1
        if vR0.empty@this()==0 goto B17;   
  -B7:   #1
        throw new java/lang/Exception("in left: leerer Baum");   
  +B17:   #1
        return vR0.links;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 left
 
 method right()Ljx/db/avltree/Baum; {
  +START:   #1
        if vR0.empty@this()==0 goto B17;   
  -B7:   #1
        throw new java/lang/Exception("in right: leerer Baum");   
  +B17:   #1
        return vR0.rechts;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 right
 
 method value()Ljava/lang/Object; {
  +START:   #1
        if vR0.empty@this()==0 goto B17;   
  -B7:   #1
        throw new java/lang/Exception("in value: leerer Baum");   
  +B17:   #1
        return vR0.inhalt;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 value
 
 method <clinit>()V {
  +START:   #1
        b0 = new jx/db/avltree/Baum();    [ R  i][ R  iR]
        LEER = b0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 1 <clinit>
}
