class java/util/HashMap$HashMapIterator {
 
 method <init>(Ljava/util/HashMap;I)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.myType = vi2;   
        vR0.knownMods = vR1.modCount;   
        vR0.position = 0;   
        vR0.bucketIndex = -1;   
        vR0.currentNode = 0;   
        vR0.currentKey = 0;   
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 0 swaps 0 any 0 found 0 <init>
 
 method checkMod()V {
  +START:   #1
        if vR0.knownMods==vR0.this$0.modCount goto B22;   
  -B14:   #1
        throw new java/util/ConcurrentModificationException();   
  +B22:   #1
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 checkMod
 
 method hasNext()Z {
  +START:   #1
        vR0.checkMod@special();   [ i  R] 
        if vR0.position>=vR0.this$0.size() goto B22;   
  +B18:   #1
        b0 = 1;    
        goto +B23b0;   forward return[ i . .]
  +B22:   #1
        b0 = 0;    
  +B23b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 2 swaps 0 any 0 found 0 hasNext
 
 method next()Ljava/lang/Object; {
  +START:   #1
        vR1 = 0;    
        vR0.checkMod@special();   [R Rii  R] 
  +B6:   #2
        if vR0.currentNode!=null goto B51;   
  +B13:   #1
        if vR1!=null goto B40;   
  +B17:   #1
        b0 = access$100@special(vR0.this$0);    [R Rii R R]
        b2 = (vR0.bucketIndex+1);    
        b1 = b2;    
        vR0.bucketIndex = b2;   
        vR1 = b0[b1];    
        goto +B13;   [R Rii R .]
  +B40:   #1
        vR0.currentNode = vR1.first;   
        goto +B6;   [R Rii . .]
  +B51:   #1
        vR0.currentKey = vR0.currentNode.getKey();   
        if vR0.myType!=0 goto B76;   
  +B69:   #1
        b0 = vR0.currentKey;    
        goto +B98b0;   [R Rii . .]
  +B76:   #1
        if vR0.myType!=1 goto B94;   
  +B84:   #1
        b0 = vR0.currentNode.getValue();    [RR Rii . R] 
        goto +B98b0;   [RR Rii . .]
  +B94:   #1
        b0 = vR0.currentNode;    
  +B98b0:   #2 reference
        vR2 = b0;    
        vR0.currentNode = vR0.currentNode.next;   
  +B110:   #1
        goto +B122;   [RR Rii . .]
  -H113<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        throw new java/util/NoSuchElementException();   
  +B122:   #1
        vR0.position = (vR0.position+1);   
        return vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
6 - 110 handler 113 type 20
 }
// Register: rd 25/25 wr 11 swaps 0 any 3 found 0 next
 
 method remove()V {
  +START:   #1
        vR0.checkMod@special();   [ R  R] 
        if vR0.currentKey!=null goto B19;   
  -B11:   #1
        throw new java/lang/IllegalStateException();   
  +B19:   #1
        vR0.this$0.remove(vR0.currentKey);   [ R i RR] 
        vR0.knownMods = (vR0.knownMods+1);   
        vR0.position = (vR0.position-1);   
        vR0.currentKey = 0;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 1 swaps 1 any 0 found 0 remove
}
