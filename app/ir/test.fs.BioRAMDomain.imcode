class test/fs/BioRAMDomain {
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        vR1 = getInitialNaming@special();    
        vR2 = (jx/zero/CPUManager)(vR1.lookup("CPUManager"));    
        vR2.setThreadName("BioRAM");   [RR R ii RR] 
        vR3 = vR0[0];    
        b0 = new test/fs/BioRAMDomain(vR1,vR3);    [ R ii i.][ R ii. iRRR]
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 8 swaps 2 any 0 found 0 main
 
 method init(Ljx/zero/Naming;[Ljava/lang/String;)V {
  +START:   #1
        vR2 = (jx/zero/CPUManager)(vR0.lookup("CPUManager"));    
        out.println("BioRAMDomain speaking.");   [R R ii. RR] 
        vR3 = vR1[0];    
        b0 = new test/fs/BioRAMDomain(vR0,vR3);    [ R ii. i.][ R ii. iRRR]
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 8 swaps 2 any 0 found 0 init
 
 method <init>(Ljx/zero/Naming;Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        vR0.naming = vR1;   
        vR3 = new jx/bio/ram/BlockIORAM(20480);    [ RR  i][ RR . iiR]
        getInitialNaming@special().registerPortal(vR3,vR2);   [R RR . RRR] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR . i..][ RR . iR.]
        b0.println(b1.append@extra("Block I/O device registered as ").append@extra(vR2).toString@extra());   [R RR ii. RR.] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 9 swaps 2 any 0 found 0 <init>
}
