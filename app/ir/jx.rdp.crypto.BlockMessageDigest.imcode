class jx/rdp/crypto/BlockMessageDigest {
 
 method <init>(Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.algorithm = vR1;   
        vR0.data_length = vR0.engineGetDataLength@this();   
        vR0.buffer = new byte[vR0.data_length];   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method bitcount()I {
  +START:   #1
        return (vR0.count*8);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 bitcount
 
 method engineReset()V {
  +START:   #1
        vR0.buffered = 0;   
        vR0.count = 0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 engineReset
 
 method engineUpdate(B)V {
  +START:   #1
        b0 = new byte[1];    
        b0[0] = vi1;   
        vR2 = b0;    
        vR0.engineUpdate@this(vR2,0,1);   [R R  iiRR] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 2 found 0 engineUpdate
 
 method engineUpdate([BII)V {
  +START:   #1
        vR0.count = (vR0.count+vi3);   
        if vR0.count<=268435455 goto B49;   
  -B19:   #1
        b0 = new jx/rdp/crypto/CryptoException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra(vR0.getAlgorithm@this()).append@extra(": Maximum input length exceeded").toString@extra());   [ RRR ii.i RR.] 
        throw b0;   
  +B49:   #1
        vi4 = vR0.data_length;    
  +B55:   #1
        b1 = (vi4-vR0.buffered);    
        vi5 = b1;    
        if vi3<b1 goto B110;   
  +B69:   #1
        arraycopy@special(vR1,vi2,vR0.buffer,vR0.buffered,vi5);   [ii RiR Ri.. iiRiR]
        vR0.engineTransform@this(vR0.buffer);   [ii RiR Rii. RR...] 
        vi3 = (vi3-vi5);    
        vi2 = (vi2+vi5);    
        vR0.buffered = 0;   
        goto +B55;   [ii RiR Rii. .....]
  +B110:   #1
        if vi3<=0 goto B138;   
  +B114:   #1
        arraycopy@special(vR1,vi2,vR0.buffer,vR0.buffered,vi3);   [ii RiR Ri.. iiRiR]
        vR0.buffered = (vR0.buffered+vi3);   
  +B138:   #1
        return;   
  +END:   #1
 }
// Register: rd 30/30 wr 18 swaps 4 any 7 found 0 engineUpdate
 
 method engineDigest()[B {
  +START:   #1
        return vR0.engineDigest@this(vR0.buffer,vR0.buffered);   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 engineDigest
 
 method getAlgorithm()Ljava/lang/String; {
  +START:   #1
        return vR0.algorithm;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getAlgorithm
}
