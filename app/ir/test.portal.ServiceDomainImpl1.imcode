class test/portal/ServiceDomainImpl1 {
 
 method init(Ljx/zero/Naming;)V {
  +START:   #1
        vR1 = (jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0"));    
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream(vR1);    [ RRR i. i.][ RRR i. iRR]
        b1.<init>@special(b2);   [R RRR i. RR.] 
        out = b0;   
        b0 = new test/portal/ServiceDomainImpl1(vR0);    [ RRR i. i..][ RRR i. iRR]
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 9 swaps 1 any 1 found 1 init
 
 method <init>(Ljx/zero/Naming;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.SMPcpuManager = (jx/zero/SMPCPUManager)(vR1.lookup("SMPCPUManager"));   
        vR2 = (jx/zero/CPUManager)(vR1.lookup("CPUManager"));    
        out.println("Hello I am ServiceDomain 1");   [R  iii. RR] 
        vR3 = vR0;    
        vR1.registerPortal(vR3,"Service1");   [RR  iiii RRR] 
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 9 swaps 4 any 1 found 0 <init>
 
 method lookup(Ljava/lang/String;)Ljx/zero/Portal; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 lookup
 
 method do_service1(I)I {
  +START:   #1
        vR2 = (test/portal/ServiceDomain)(getInitialNaming@special().lookup("Service2"));    
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR i. i.][ RR i. iR]
        b0.println(b1.append@extra("  Service 1 is calling Service 2 with: ").append@extra(vi1).toString@extra());   [R RR iii. RR.] 
        vi3 = vR2.do_service1(vi1);    [R RR iii. iR.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR iii. i..][ RR iii. iR.]
        b0.println(b1.append@extra("   result from Service 2: ").append@extra(vi3).toString@extra());   [Ri RR iiiii. RR.] 
        return vR0.do_service2@this((vi3+1));   
  +END:   #1
 }
// Register: rd 8/8 wr 18 swaps 6 any 0 found 0 do_service1
 
 method do_service2(I)I {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("  Service 1 (do_service2): ").append@extra(vi1).toString@extra());   [ RR ii. RR.] 
        vi2 = 0;    
        vi3 = 0;    
  +B29:   #1
        if vi3>=50000000 goto B60;   
  +B35:   #1
        b0 = vi2;    
        vi2++;   
        if b0<=100000 goto B54;   
  +B44:   #1
        vi2 = 0;    
        out.print(".");   [ii iR i.. RR.] 
  +B54:   #1
        vi3++;   
        goto +B29;   [ii iR ... ...]
  +B60:   #1
        out.println("end");   [ii iR i.. RR.] 
        return vi1;   
  +END:   #1
 }
// Register: rd 8/8 wr 16 swaps 4 any 5 found 0 do_service2
 
 method dump()V {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 dump
 
 method destroy()V {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 destroy
}
