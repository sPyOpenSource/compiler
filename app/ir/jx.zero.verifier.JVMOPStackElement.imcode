class jx/zero/verifier/JVMOPStackElement {
 
 method getBCAddr()I {
  +START:   #1
        return vR0.bcAddr;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getBCAddr
 
 method getPrev()Ljx/zero/verifier/JVMOPStackElement; {
  +START:   #1
        return vR0.prev;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPrev
 
 method setPrev(Ljx/zero/verifier/JVMOPStackElement;)V {
  +START:   #1
        if vR0.prev!=null goto B15;   
  +B7:   #1
        vR0.prev = vR1;   
        goto +B25;   forward return[ R  ]
  -B15:   #1
        throw new java/lang/Error("Internal Error: trying to change prev Element of JVMOPStackElement that is not null!");   
  +B25:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 setPrev
 
 method <init>(Ljx/zero/verifier/JVMOPStackElement;)V {
  +START:   #1
        vR0.<init>@special(vR1,-1);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljx/zero/verifier/JVMOPStackElement;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.prev = vR1;   
        vR0.bcAddr = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method addressString()Ljava/lang/String; {
  +START:   #1
        tswitch (vR0.bcAddr) B44 B38 B32 : B50;   
  +B32:   #1
        vR1 = "init";    
        goto +B58;   forward return[R   ]
  +B38:   #1
        vR1 = "exception";    
        goto +B58;   forward return[R   ]
  +B44:   #1
        vR1 = "merge";    
        goto +B58;   forward return[R   ]
  +B50:   #1
        vR1 = toHexString@special(vR0.bcAddr);    [  i i]
  +B58:   #3
        return vR1;   
  +END:   #1
 }
// Register: rd 3/3 wr 5 swaps 0 any 0 found 0 addressString
 
 method toString()Ljava/lang/String; {
  +START:   #1
        if vR0.prev==null goto B47;   
  +B7:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        b0 = b0.append@extra(vR0.prev.toString()).append@extra(": (").append@extra(vR0.addressString@this()).append@extra(")").toString@extra();    [ R i..ii..i R....] [ R iR.ii..i RR...] [ R iRRii..i RRR..] [ R iRRiiR.i RRRR.] [ R iRRiiRRi RRRRR] 
        goto +B74b0;   forward return[ R i..ii..i .....]
  +B47:   #1
        b0 = new java/lang/StringBuilder();    [ R ........ i....][ R ........ iR...]
        b0 = b0.append@extra("(").append@extra(vR0.addressString@this()).append@extra(")").toString@extra();    [ R i..ii... R....] [ R iR.ii... RR...] [ R iRRii... RRR..] [ R iRRiiR.. RRRR.] 
  +B74b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 7/7 wr 18 swaps 7 any 0 found 0 toString
}
