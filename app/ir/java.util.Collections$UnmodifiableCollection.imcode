class java/util/Collections$UnmodifiableCollection {
 
 method <init>(Ljava/util/Collection;)V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        if vR1!=null goto B16;   
  -B8:   #1
        throw new java/lang/NullPointerException();   
  +B16:   #1
        vR0.c = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 1 found 0 <init>
 
 method size()I {
  +START:   #1
        return vR0.c.size();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method isEmpty()Z {
  +START:   #1
        return vR0.c.isEmpty();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isEmpty
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.c.contains(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 contains
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        return vR0.c.toArray();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toArray
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return vR0.c.toString();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toString
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return new java/util/Collections$UnmodifiableCollection$1(vR0);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 iterator
 
 method add(Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 add
 
 method remove(Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 remove
 
 method containsAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.c.containsAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 containsAll
 
 method addAll(Ljava/util/Collection;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 addAll
 
 method removeAll(Ljava/util/Collection;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 removeAll
 
 method retainAll(Ljava/util/Collection;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 retainAll
 
 method clear()V {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 clear
 
 method forEach(Ljava/util/function/Consumer;)V {
  +START:   #1
        vR0.c.forEach(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 forEach
 
 method removeIf(Ljava/util/function/Predicate;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 removeIf
 
 method spliterator()Ljava/util/Spliterator; {
  +START:   #1
        return vR0.c.spliterator();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 spliterator
}
