class java/util/LinkedHashMap$LinkedValues {
 
 method <init>(Ljava/util/LinkedHashMap;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method size()I {
  +START:   #1
        return vR0.this$0.size;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method clear()V {
  +START:   #1
        vR0.this$0.clear();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 clear
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return new java/util/LinkedHashMap$LinkedValueIterator(vR0.this$0);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 iterator
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.this$0.containsValue(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 contains
 
 method spliterator()Ljava/util/Spliterator; {
  +START:   #1
        return spliterator@special(vR0,80);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 spliterator
 
 method forEach(Ljava/util/function/Consumer;)V {
  +START:   #1
        if vR1!=null goto B12;   
  -B4:   #1
        throw new java/lang/NullPointerException();   
  +B12:   #1
        vi2 = vR0.this$0.modCount;    
        vR3 = vR0.this$0.head;    
  +B28:   #1
        if vR3==null goto B50;   
  +B32:   #1
        vR1.accept(vR3.value);   [iR R i RR] 
        vR3 = vR3.after;    
        goto +B28;   [iR R i ..]
  +B50:   #1
        if vR0.this$0.modCount==vi2 goto B69;   
  -B61:   #1
        throw new java/util/ConcurrentModificationException();   
  +B69:   #1
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 4 swaps 1 any 2 found 0 forEach
}
