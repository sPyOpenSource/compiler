class jx/fs/FSInterfaceDomain {
 
 method init(Ljx/zero/Naming;[Ljava/lang/String;)V {
  +START:   #1
        vR2 = (jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0"));    
        vR3 = (jx/zero/CPUManager)(vR0.lookup("CPUManager"));    
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream(vR2);    [ RRR ii. i.][ RRR ii. iRR]
        b1.<init>@special(b2);   [RR RRR ii. RR.] 
        out = b0;   
        vR4 = vR1[0];    
        out.println("Domain FSInterfaceDomain speaking.");   [RRR RRR iii. RR.] 
        vR3.setThreadName("FSDomain-Main");   [RRR RRR iiii RR.] 
        vR5 = (jx/bio/BlockIO)(waitUntilPortalAvailable@special(vR0,vR4));    
        b0 = new jx/fs/FSInterfaceDomain(vR0,vR5);    [ RRR iiii. i..][ RRR iiii. iRRR]
        return;   
  +END:   #1
 }
// Register: rd 17/17 wr 18 swaps 4 any 1 found 1 init
 
 method <init>(Ljx/zero/Naming;Ljx/bio/BlockIO;)V {
  +START:   #1
        vR0.<init>@special();   [ RRR  R] 
  +B4:   #1
        vR0.naming = vR1;   
        out.println("Create FileSystem on BlockIO");   [ RRR i. RR] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR i. i.][ RRR i. iR]
        b0.println(b1.append@extra("Capacity: ").append@extra(vR2.getCapacity()).toString@extra());   [ RRR iiii. RR.] 
        vR3 = new javafs/FileSystem();    [ RRR iiii. i..][ RRR iiii. iR.]
        vR4 = new jx/fs/MyDummyClock();    [ RRR iiii. i..][ RRR iiii. iR.]
        b2 = new buffercache/BufferCache(vR2,vR4,800,1000,100,1024);    [ RRR iiii. i..][ RRR iiii. iiiiiRRR]
        vR3.init(vR2,b2,vR4);   [RR RRR iiii. RRRR....] 
        vR3.build("TestFS",1024);   [RR RRR iiiii iRR.....] 
        vR5 = new jx/fs/FilesystemImpl(vR3);    [ RRR iiiii i.......][ RRR iiiii. iRR.....]
        out.println("FileSystem is ready !!!");   [RRR RRR iiiiii. RR......] 
        vR1.registerPortal(vR5,"FSInterface");   [RRR RRR iiiiiii RRR.....] 
  +B129:   #1
        goto +B145;   forward return[RRR RRR ....... ........]
  -H132<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        vR3.printStackTrace();   [RRR RRR ....... R.......] 
        throw new java/lang/Error();   
  +B145:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
4 - 129 handler 132 type 43
 }
// Register: rd 16/16 wr 20 swaps 7 any 0 found 0 <init>
}
