class jx/fs/FSInterfaceDomain {
 
 method init(Ljx/zero/Naming;[Ljava/lang/String;)V {
  +START:   #1
        vR2 = (jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0"));    
        vR3 = (jx/zero/CPUManager)(vR0.lookup("CPUManager"));    
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream(vR2);    [ RRR ii. i.][ RRR ii. iRR]
        b1.<init>@special(b2);   [RR RRR ii. RR.] 
        out = b0;   
        vR4 = vR1[0];    
        out.println("Domain FSInterfaceDomain speaking.");   [RRR RRR iii. RR.] 
        vR3.setThreadName("FSDomain-Main");   [RRR RRR iiii RR.] 
        vR5 = (jx/devices/bio/BlockIO)(waitUntilPortalAvailable@special(vR0,vR4));    
        b0 = new jx/fs/FSInterfaceDomain(vR0,vR5);    [ RRR iiii. i..][ RRR iiii. iRRR]
        return;   
  +END:   #1
 }
// Register: rd 17/17 wr 18 swaps 4 any 1 found 1 init
 
 method <init>(Ljx/zero/Naming;Ljx/devices/bio/BlockIO;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
  +B4:   #1
        vR0.naming = vR1;   
        out.println("Create FileSystem on BlockIO");   [ RR i. RR] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR i. i.][ RR i. iR]
        b0.println(b1.append@extra("Capacity: ").append@extra(vR2.getCapacity()).toString@extra());   [ RR iiii. RR.] 
        vR3 = new jx/fs/MyDummyClock();    [ RR iiii. i..][ RR iiii. iR.]
        out.println("FileSystem is ready !!!");   [R RR iiiii. RR.] 
  +B63:   #1
        goto +B79;   forward return[R RR ...... ...]
  -H66<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        vR3.printStackTrace();   [R RR ...... R..] 
        throw new java/lang/Error();   
  +B79:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
4 - 63 handler 66 type 92
 }
// Register: rd 7/7 wr 13 swaps 5 any 0 found 0 <init>
}
