class test/net/WebServer {
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        b0 = new test/net/WebServer(vR0);    [ R  i][ R . iRR]
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 main
 
 method usage()V {
  +START:   #1
        out.println("[-verbose] [-port <port>] [-fs <FSName>] [-threads] [-dummyfiles]");   [  i. RR] 
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 2 swaps 1 any 0 found 0 usage
 
 method <init>([Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        vR0.naming = getInitialNaming@special();   
        vR0.fs = 0;   
        vi2 = 80;    
        vi3 = 0;    
        vR4 = 0;    
        vi5 = 0;    
        vi6 = 0;    
        vi7 = 0;    
  +B33:   #1
        if vi7>=vR1.length goto B268;   
  +B40:   #1
        vR8 = vR1[vi7];    
        vi9 = -1;    
        lswitch (vR8.hashCode@extra()) { 
           -245708100:B144
           -220883236:B112
           46522:B96
           45005358:B128
           ::B157
        };   
  +B96:   #1
        if vR8.equals@extra("-fs")==0 goto B157;   
  +B106:   #1
        vi9 = 0;    
        goto +B157;   [iiRiiiRi RR . ..]
  +B112:   #1
        if vR8.equals@extra("-threads")==0 goto B157;   
  +B122:   #1
        vi9 = 1;    
        goto +B157;   [iiRiiiRi RR . ..]
  +B128:   #1
        if vR8.equals@extra("-port")==0 goto B157;   
  +B138:   #1
        vi9 = 2;    
        goto +B157;   [iiRiiiRi RR . ..]
  +B144:   #1
        if vR8.equals@extra("-dummyfiles")==0 goto B157;   
  +B154:   #1
        vi9 = 3;    
  +B157:   #8
        tswitch (vi9) B188 B203 B208 B222 : B231;   
  +B188:   #1
        vi7++;   
        vi5 = 1;    
        vR4 = vR1[vi7];    
        goto +B262;   [iiRiiiRR RR . ..]
  +B203:   #1
        vi3 = 1;    
        goto +B262;   [iiRiiiRR RR . ..]
  +B208:   #1
        vi7++;   
        vi2 = parseInt@special(vR1[vi7]);    [iiRiiiRR RR R R.]
        goto +B262;   [iiRiiiRR RR R ..]
  +B222:   #1
        vi7++;   
        vi6 = 1;    
        goto +B262;   [iiRiiiRR RR . ..]
  +B231:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR . i.][ RR . iR]
        b0.println(b1.append@extra("Unknown option ignored: ").append@extra(vR1[vi7]).toString@extra());   [iiRiiiRi RR iii. RR.] 
        goto +B268;   [iiRiiiRi RR iii. ...]
  +B262:   #4
        vi7++;   
        goto +B33;   [iiRiiiRR RR .... ...]
  +B268:   #2
        if vi5==0 goto B373;   
  +B273:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR .... i..][ RR .... iR.]
        b0.println(b1.append@extra("Webserver: use filesystem with name ").append@extra(vR4).toString@extra());   [iiRiiiRi RR ii.. RR.] 
        vR0.fs = (jx/fs/FS)(waitUntilPortalAvailable@special(vR0.naming,vR4));   
        vR8 = (jx/zero/MemoryManager)(getInitialNaming@special().lookup("MemoryManager"));    
        vR0.buffer = vR8.alloc(1024);   
        if vi6==0 goto B373;   
  +B349:   #1
        vR0.createFile@special(vR0.fs,"index.html","<html><head><title>JX index.html Testseite (FILEXX)</title><body bgcolor=ffffff>

<center><h2>Herzlich willkommen auf der JX-FILE-Testseite</h2></center><br><br>
Link zur <a href=page2.html>zweiten</a> Seite</body></html>
");   [iiRiiiRi RR iRR.. RRRR] 
        vR0.createFile@special(vR0.fs,"page2.html","<html><head><title>JX Page2 (FILE)</title><body bgcolor=ffffff>

<center><h2>Herzlich willkommen auf der JX-FILEXX-Testseite</h2></center><br><br>
Link zur <a href=index.html>ersten</a> Seite</body></html>
");   [iiRiiiRi RR iRRiRR RRRR] 
  +B373:   #2
        vR8 = new java/net/ServerSocket(vi2);    [ RR ...... i...][ RR ...... iiR.]
        if vi3==0 goto B398;   
  +B387:   #1
        out.println("Webserver: use one thread per connection");   [iiRiiiRi RR i..... RR..] 
        goto +B406;   [iiRiiiRi RR i..... ....]
  +B398:   #1
        out.println("Webserver: use one domain per connection");   [iiRiiiRR RR i..... RR..] 
  +B406:   #3
        vR9 = vR8.accept();    [iiRiiiRi RR ...... R...] 
        if vi3==0 goto B426;   
  +B417:   #1
        vR0.startWorkerThread@special(vR9);   [iiRiiiRR RR ...... RR..] 
        goto +B432;   [iiRiiiRR RR ...... ....]
  +B426:   #1
        vR0.startWorkerDomain@special(vR9);   [iiRiiiRR RR ...... RR..] 
  +B432:   #2
        goto +B406;   [iiRiiiRR RR ...... ....]
  +H435<caught exception>:   #1 reference
        vR9 = <caught exception>;    
        goto +B440;   forward return[iiRiiiRR RR ...... ....]
  +B440:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
406 - 432 handler 435 type 137
 }
// Register: rd 46/46 wr 51 swaps 14 any 10 found 0 <init>
 
 method createFile(Ljx/fs/FS;Ljava/lang/String;Ljava/lang/String;)V {
  +START:   #1
        vR1.create(vR2,420);   [   iRR] 
        vR4 = vR1.lookup(vR2);    [   RR.] 
        vR5 = vR3.getBytes@extra();    [R   R..] 
        vR0.buffer.copyFromByteArray(vR5,0,0,vR5.length);   [RR  i iiiRR] 
        vR4.write(vR0.buffer,0,vR5.length);   [RR  iii iiRR.] 
        vR4.decUseCount();   [RR  iii R....] 
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 5 swaps 2 any 0 found 0 createFile
 
 method startWorkerThread(Ljava/net/Socket;)V {
  +START:   #1
        b0 = new test/net/WebServer$1(vR0,"WebWorker",vR1);    [ R  i][ R . iRRRR]
        b0.start();   [ R . R....] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 startWorkerThread
 
 method startWorkerDomain(Ljava/net/Socket;)V {
  +START:   #1
        vR2 = "Servlet";    
        vR3 = "init.jll";    
        vR4 = "test/net/TCPWebWorker";    
        vR5 = new java/lang/String()[0];    
        b0 = new java/lang/Object()[2];    
        b0[0] = vR1;   
        b0[1] = vR0.fs;   
        vR6 = b0;    
        vi7 = 0;    
        vi8 = 10000;    
        if vi7==0 goto B85;   
  +B46:   #1
        vi9 = 40000;    
        vi10 = 10000;    
        vi11 = 80000;    
        vR12 = createDomain@special(vR2,vR3,vR4,(java/lang/String)(0),vi9,vi10,vi11,vR5,vR6);    [RRRRRiiiii R R RRiiiRRRR]
        goto +B106;   forward return[RRRRRiiiiiR R R .........]
  +B85:   #1
        vi9 = 400000;    
        vR10 = createDomain@special(vR2,vR3,vR4,vi9,vi8,vR5,vR6);    [RRRRRiiiiiR R . RRiiRRR..]
  +B106:   #1
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 11 swaps 0 any 3 found 0 startWorkerDomain
}
