class org/jnode/driver/net/lance/BufferManager {
 
 method <init>(Ljx/zero/MemoryManager;IIILmetaxa/os/devices/net/EthernetAdress;J)V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        vR0.size = 28;   
        vR0.rm = vR1;   
        vi8 = 0;    
        vi9 = ((vi2*16)+0);    
        vi10 = (vi9+(vi3*16));    
        vi11 = (vi10+(vi2*2048));    
        vR12 = vR1.allocAligned(((vi2+vi2)*2064),2);    [?iiii ?R i iiR] 
        b1 = new org/jnode/driver/net/lance/RxDescriptorRing(vR12,0,vi2,vi10);    [ ?R i i..][ ?R i. iiiiRR]
        vR0.rxRing = b1;   
        b1 = new org/jnode/driver/net/lance/TxDescriptorRing(vR12,vi9,vi3,vi11);    [ ?R i. i.....][ ?R i. iiiiRR]
        vR0.txRing = b1;   
        vR0.mem = vR1.alloc(vR0.size);   
        b1 = new org/jnode/driver/net/lance/InitializationBlock32Bit(vR0.mem,(short)vi4,vR5,vR0.rxRing,vR0.txRing,vl6);    [ ?R ii i.....][ ?R ii. ilRRRsRR]
        vR0.initBlock = b1;   
        return;   
  +END:   #1
 }
// Register: rd 37/37 wr 13 swaps 1 any 3 found 1 <init>
 
 method getInitDataAddressAs32Bit()I {
  +START:   #1
        return vR0.mem.getStartAddress();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getInitDataAddressAs32Bit
 
 method transmit(Ljx/zero/Memory;)V {
  +START:   #1
        vi2 = vR1.size();    [   R] 
        if vi2<=2048 goto B22;   
  +B14:   #1
        out.println("Length must be <= 2048");   [i  i. RR] 
  +B22:   #1
        vR0.txRing.transmit(vR1);   [i  .. RR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 3 swaps 1 any 1 found 0 transmit
 
 method getPacket()Ljx/zero/Memory; {
  +START:   #1
        return vR0.rxRing.getPacket(vR0.rm);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 getPacket
}
