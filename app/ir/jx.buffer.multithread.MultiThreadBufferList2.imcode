class jx/buffer/multithread/MultiThreadBufferList2 {
 
 method <init>()V {
  +START:   #1
        b1 = new jx/buffer/multithread/Buffer2(0);    [ ?R  i][ ?R . iRR]
        vR0.<init>@special(b1,0);   [ ?R . RRR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 <init>
 
 method <init>([Ljx/zero/Memory;)V {
  +START:   #1
        b1 = new jx/buffer/multithread/Buffer2(vR1[0]);    [ RR  i][ RR . iRR]
        vR0.<init>@special(b1,0);   [ RR . RRR] 
        if vR0.verbose==0 goto B57;   
  +B22:   #1
        b0 = vR0.cpuManager;    
        b1 = new java/lang/StringBuilder();    [ RR . i..][ RR . iR.]
        b0.dump(b1.append@extra("MultiThreadBufferList2(Memory[").append@extra(vR1.length).append@extra("])").toString@extra(),vR0);   [ RR iiii.. RRR.] 
  +B57:   #1
        vi2 = 1;    
  +B59:   #1
        if vi2>=vR1.length goto B117;   
  +B65:   #1
        if vR0.verbose==0 goto B97;   
  +B72:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ...... i...][ RR ...... iR..]
        b0.println(b1.append@extra("       loop:").append@extra(vi2).toString@extra());   [i RR ii.... RR..] 
  +B97:   #1
        b1 = new jx/buffer/multithread/Buffer2(vR1[vi2]);    [ RR ...... i...][ RR ...... iRR.]
        vR0.appendElement@this(b1);   [i RR ...... RR..] 
        vi2++;   
        goto +B59;   [i RR ...... ....]
  +B117:   #1
        if vR0.verbose==0 goto B128;   
  +B124:   #1
        vR0.dump@this();   [i RR ...... R...] 
  +B128:   #1
        return;   
  +END:   #1
 }
// Register: rd 22/22 wr 20 swaps 6 any 2 found 0 <init>
}
