class java/security/Permissions {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        b1 = new java/util/Hashtable();    [ ?R  i][ ?R  iR]
        vR0.perms = b1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 <init>
 
 method add(Ljava/security/Permission;)V {
  +START:   #1
        if vR0.isReadOnly@this()==0 goto B17;   
  -B7:   #1
        throw new java/lang/SecurityException("PermissionCollection is read only");   
  +B17:   #1
        if (vR1 instanceof java/security/AllPermission)==0 goto B61;   
  +B24:   #1
        if vR0.allPermission!=null goto B153;   
  +B31:   #1
        b1 = new gnu/java/security/DefaultPermissionCollection("java.security.AllPermission");    [ RR . i..][ RR . iRR]
        vR0.allPermission = b1;   
        vR0.perms.put("java.security.AllPermission",vR0.allPermission);   [ RR iR RRR] 
        goto +B153;   forward return[ RR iR ...]
  +B61:   #1
        vR2 = vR0.perms.get(vR1.getClass().getName@extra());    [ RR i. RR.] 
        if vR2==null goto B108;   
  +B80:   #1
        if (vR2 instanceof java/security/PermissionCollection)!=0 goto B97;   
  -B87:   #1
        throw new java/lang/RuntimeException("Internal error in Permissions");   
  +B97:   #1
        (java/security/PermissionCollection)(vR2).add(vR1);   [R RR .. RR.] 
        goto +B153;   forward return[R RR .. ...]
  +B108:   #1
        vR3 = vR1.newPermissionCollection();    [R RR .. R..] 
        if vR3!=null goto B132;   
  +B117:   #1
        vR3 = new gnu/java/security/DefaultPermissionCollection(vR1.getClass().getName@extra());    [ RR .. i..][ RR .. iRR]
  +B132:   #1
        vR3.add(vR1);   [RR RR .. RR.] 
        vR0.perms.put(vR1.getClass().getName@extra(),vR3);   [RR RR i. RRR] 
  +B153:   #3
        return;   
  +END:   #1
 }
// Register: rd 23/23 wr 15 swaps 3 any 2 found 1 add
 
 method implies(Ljava/security/Permission;)Z {
  +START:   #1
        if vR0.allPermission==null goto B9;   
  +B7:   #1
        return 1;   
  +B9:   #1
        vR2 = vR0.perms.get(vR1.getClass().getName@extra());    [  i RR] 
        if vR2!=null goto B30;   
  +B28:   #1
        return 0;   
  +B30:   #1
        if (vR2 instanceof java/security/PermissionCollection)!=0 goto B39;   
  +B37:   #1
        return 0;   
  +B39:   #1
        return (java/security/PermissionCollection)(vR2).implies(vR1);   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 1 any 1 found 1 implies
 
 method elements()Ljava/util/Enumeration; {
  +START:   #1
        return new java/security/Permissions$1(vR0);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 elements
}
