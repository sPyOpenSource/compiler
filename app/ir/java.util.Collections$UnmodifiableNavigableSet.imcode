class java/util/Collections$UnmodifiableNavigableSet {
 
 method toArray([Ljava/lang/Object;)[Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 toArray
 
 method <init>(Ljava/util/NavigableSet;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.ns = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method lower(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.lower(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lower
 
 method floor(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.floor(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 floor
 
 method ceiling(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.ceiling(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 ceiling
 
 method higher(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR0.ns.higher(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 higher
 
 method pollFirst()Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 pollFirst
 
 method pollLast()Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 pollLast
 
 method descendingSet()Ljava/util/NavigableSet; {
  +START:   #1
        return new java/util/Collections$UnmodifiableNavigableSet(vR0.ns.descendingSet());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 descendingSet
 
 method descendingIterator()Ljava/util/Iterator; {
  +START:   #1
        return vR0.descendingSet@this().iterator();   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 descendingIterator
 
 method subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet; {
  +START:   #1
        return new java/util/Collections$UnmodifiableNavigableSet(vR0.ns.subSet(vR1,vi2,vR3,vi4));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 subSet
 
 method headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet; {
  +START:   #1
        return new java/util/Collections$UnmodifiableNavigableSet(vR0.ns.headSet(vR1,vi2));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 headSet
 
 method tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet; {
  +START:   #1
        return new java/util/Collections$UnmodifiableNavigableSet(vR0.ns.tailSet(vR1,vi2));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 tailSet
 
 method access$000()Ljava/util/NavigableSet; {
  +START:   #1
        return EMPTY_NAVIGABLE_SET;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 access$000
 
 method <clinit>()V {
  +START:   #1
        b0 = new java/util/Collections$UnmodifiableNavigableSet$EmptyNavigableSet();    [ R  i][ R  iR]
        EMPTY_NAVIGABLE_SET = b0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 1 <clinit>
}
