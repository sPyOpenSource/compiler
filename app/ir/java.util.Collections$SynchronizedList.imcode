class java/util/Collections$SynchronizedList {
 
 method <init>(Ljava/util/List;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.list = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljava/util/List;Ljava/lang/Object;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR2);   [   RRR] 
        vR0.list = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0!=vR1 goto B7;   
  +B5:   #1
        return 1;   
  +B7:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.list.equals(vR1);    [R b  RR] 
        vR2.leave();   
        return b0;   
  +H25<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B28:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
14 - 24 handler 25 type 0
25 - 28 handler 25 type 0
 }
// Register: rd 7/7 wr 4 swaps 0 any 2 found 0 equals
 
 method hashCode()I {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        b0 = vR0.list.hashCode();    [R i  R] 
        vR1.leave();   
        return b0;   
  +H17<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B20:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 16 handler 17 type 0
17 - 20 handler 17 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 hashCode
 
 method get(I)Ljava/lang/Object; {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.list.get(vi1);    [R R  iR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 get
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        b0 = vR0.mutex;    
        vR3 = b0;    
        b0.enter();   
        b0 = vR0.list.set(vi1,vR2);    [R R  RiR] 
        vR3.leave();   
        return b0;   
  +H21<caught exception>:   #2 reference
        vR4 = <caught exception>;    
        vR3.leave();   
  -B25:   #1
        throw vR4;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 20 handler 21 type 0
21 - 25 handler 21 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 set
 
 method add(ILjava/lang/Object;)V {
  +START:   #1
        b0 = vR0.mutex;    
        vR3 = b0;    
        b0.enter();   
        vR0.list.add(vi1,vR2);   [R R  RiR] 
        vR3.leave();   
        goto +B30;   forward return[R R  ...]
  +H23<caught exception>:   #2 reference
        vR4 = <caught exception>;    
        vR3.leave();   
  -B27:   #1
        throw vR4;   
  +B30:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 20 handler 23 type 0
23 - 27 handler 23 type 0
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 0 add
 
 method remove(I)Ljava/lang/Object; {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.list.remove(vi1);    [R R  iR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 remove
 
 method indexOf(Ljava/lang/Object;)I {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.list.indexOf(vR1);    [R i  RR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 indexOf
 
 method lastIndexOf(Ljava/lang/Object;)I {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.list.lastIndexOf(vR1);    [R i  RR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 lastIndexOf
 
 method listIterator()Ljava/util/ListIterator; {
  +START:   #1
        return vR0.list.listIterator();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 listIterator
 
 method listIterator(I)Ljava/util/ListIterator; {
  +START:   #1
        return vR0.list.listIterator(vi1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 listIterator
 
 method subList(II)Ljava/util/List; {
  +START:   #1
        b0 = vR0.mutex;    
        vR3 = b0;    
        b0.enter();   
        b0 = new java/util/Collections$SynchronizedList(vR0.list.subList(vi1,vi2),vR0.mutex);    [ R  i][ R . iRRR.]
        vR3.leave();   
        return b0;   
  +H32<caught exception>:   #2 reference
        vR4 = <caught exception>;    
        vR3.leave();   
  -B36:   #1
        throw vR4;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 31 handler 32 type 0
32 - 36 handler 32 type 0
 }
// Register: rd 7/7 wr 5 swaps 0 any 1 found 0 subList
 
 method sort(Ljava/util/Comparator;)V {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        vR0.list.sort(vR1);   [R R  RR] 
        vR2.leave();   
        goto +B27;   forward return[R R  ..]
  +H22<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B25:   #1
        throw vR3;   
  +B27:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 22 type 0
22 - 25 handler 22 type 0
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 0 sort
 
 method readResolve()Ljava/lang/Object; {
  +START:   #1
        if (vR0.list instanceof java/util/RandomAccess)==0 goto B24;   
  +B10:   #1
        b0 = new java/util/Collections$SynchronizedRandomAccessList(vR0.list);    [ R  i.][ R . iRR]
        goto +B25b0;   forward return[ R . ...]
  +B24:   #1
        b0 = vR0;    
  +B25b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 1 found 0 readResolve
}
