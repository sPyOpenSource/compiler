class jx/rdp/orders/PolyLineOrder {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.x = 0;   
        vR0.y = 0;   
        vR0.flags = 0;   
        vR0.fgcolor = 0;   
        vR0.lines = 0;   
        vR0.datasize = 0;   
        vR0.data = new byte[256];   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 0 found 0 <init>
 
 method getX()I {
  +START:   #1
        return vR0.x;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getX
 
 method getY()I {
  +START:   #1
        return vR0.y;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getY
 
 method getFlags()I {
  +START:   #1
        return vR0.flags;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getFlags
 
 method getForegroundColor()I {
  +START:   #1
        return vR0.fgcolor;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getForegroundColor
 
 method getLines()I {
  +START:   #1
        return vR0.lines;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getLines
 
 method getDataSize()I {
  +START:   #1
        return vR0.datasize;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDataSize
 
 method getData()[B {
  +START:   #1
        return vR0.data;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getData
 
 method setX(I)V {
  +START:   #1
        vR0.x = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setX
 
 method setY(I)V {
  +START:   #1
        vR0.y = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setY
 
 method setFlags(I)V {
  +START:   #1
        vR0.flags = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setFlags
 
 method setForegroundColor(I)V {
  +START:   #1
        vR0.fgcolor = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setForegroundColor
 
 method setDataSize(I)V {
  +START:   #1
        vR0.datasize = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setDataSize
 
 method setData([B)V {
  +START:   #1
        vR0.data = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setData
 
 method reset()V {
  +START:   #1
        vR0.x = 0;   
        vR0.y = 0;   
        vR0.flags = 0;   
        vR0.fgcolor = 0;   
        vR0.lines = 0;   
        vR0.datasize = 0;   
        vR0.data = new byte[256];   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 reset
}
