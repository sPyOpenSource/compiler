class java/awt/Component {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.visible = 1;   
        vR0.enabled = 1;   
        vR0.eventMask = 8192;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 <init>
 
 method getName()Ljava/lang/String; {
  +START:   #1
        if vR0.name!=null goto B22;   
  +B7:   #1
        if vR0.nameExplicitlySet!=0 goto B22;   
  +B14:   #1
        vR0.name = vR0.generateName@this();   
  +B22:   #2
        return vR0.name;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 getName
 
 method setName(Ljava/lang/String;)V {
  +START:   #1
        vR0.nameExplicitlySet = 1;   
        vR0.name = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 setName
 
 method generateName()Ljava/lang/String; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 generateName
 
 method getParent()Ljava/awt/Container; {
  +START:   #1
        return vR0.parent;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getParent
 
 method setPeer(Ljava/awt/peer/ComponentPeer;)V {
  +START:   #1
        vR0.peer = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setPeer
 
 method getPeer()Ljava/awt/peer/ComponentPeer; {
  +START:   #1
        return vR0.peer;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPeer
 
 method getTreeLock()Ljava/lang/Object; {
  +START:   #1
        return treeLock;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getTreeLock
 
 method setTreeLock(Ljava/lang/Object;)V {
  +START:   #1
        treeLock = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 1 setTreeLock
 
 method getToolkit()Ljava/awt/Toolkit; {
  +START:   #1
        if vR0.peer==null goto B23;   
  +B7:   #1
        vR1 = vR0.peer.getToolkit();    [   R] 
        if vR1==null goto B23;   
  +B21:   #1
        return vR1;   
  +B23:   #2
        if vR0.parent==null goto B38;   
  +B30:   #1
        return vR0.parent.getToolkit();   
  +B38:   #1
        return getDefaultToolkit@special();   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 1 found 0 getToolkit
 
 method isValid()Z {
  +START:   #1
        return vR0.valid;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isValid
 
 method isDisplayable()Z {
  +START:   #1
        if vR0.parent==null goto B15;   
  +B7:   #1
        return vR0.parent.isDisplayable();   
  +B15:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 isDisplayable
 
 method isVisible()Z {
  +START:   #1
        return vR0.visible;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isVisible
 
 method isShowing()Z {
  +START:   #1
        if vR0.visible==0 goto B14;   
  +B7:   #1
        if vR0.peer!=null goto B16;   
  +B14:   #1
        return 0;   
  +B16:   #1
        if vR0.parent!=null goto B27;   
  +B23:   #1
        b0 = 1;    
        goto +B34b0;   forward return[ i  ]
  +B27:   #1
        b0 = vR0.parent.isShowing();    [ b  R] 
  +B34b0:   #1 boolean
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 isShowing
 
 method isEnabled()Z {
  +START:   #1
        return vR0.enabled;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isEnabled
 
 method setEnabled(Z)V {
  +START:   #1
        vR0.enabled = vi1;   
        if vR0.peer==null goto B22;   
  +B12:   #1
        vR0.peer.setEnabled(vi1);   [   iR] 
  +B22:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setEnabled
 
 method enable()V {
  +START:   #1
        vR0.setEnabled@this(1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 enable
 
 method enable(Z)V {
  +START:   #1
        vR0.setEnabled@this(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 enable
 
 method disable()V {
  +START:   #1
        vR0.setEnabled@this(0);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 disable
 
 method isDoubleBuffered()Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 isDoubleBuffered
 
 method enableInputMethods(Z)V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 enableInputMethods
 
 method setVisible(Z)V {
  +START:   #1
        vR0.visible = vi1;   
        if vR0.peer==null goto B22;   
  +B12:   #1
        vR0.peer.setVisible(vi1);   [   iR] 
  +B22:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setVisible
 
 method show()V {
  +START:   #1
        vR0.setVisible@this(1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 show
 
 method show(Z)V {
  +START:   #1
        vR0.setVisible@this(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 show
 
 method hide()V {
  +START:   #1
        vR0.setVisible@this(0);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 hide
 
 method getForeground()Ljava/awt/Color; {
  +START:   #1
        if vR0.foreground==null goto B12;   
  +B7:   #1
        return vR0.foreground;   
  +B12:   #1
        if vR0.parent==null goto B27;   
  +B19:   #1
        return vR0.parent.getForeground();   
  +B27:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 getForeground
 
 method setForeground(Ljava/awt/Color;)V {
  +START:   #1
        if vR0.peer==null goto B17;   
  +B7:   #1
        vR0.peer.setForeground(vR1);   [   RR] 
  +B17:   #1
        vR0.foreground = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setForeground
 
 method getBackground()Ljava/awt/Color; {
  +START:   #1
        if vR0.background==null goto B12;   
  +B7:   #1
        return vR0.background;   
  +B12:   #1
        if vR0.parent==null goto B27;   
  +B19:   #1
        return vR0.parent.getBackground();   
  +B27:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 getBackground
 
 method setBackground(Ljava/awt/Color;)V {
  +START:   #1
        if vR0.peer==null goto B17;   
  +B7:   #1
        vR0.peer.setBackground(vR1);   [   RR] 
  +B17:   #1
        vR0.background = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setBackground
 
 method getLocation()Ljava/awt/Point; {
  +START:   #1
        return new java/awt/Point(vR0.x,vR0.y);   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 getLocation
 
 method getLocationOnScreen()Ljava/awt/Point; {
  +START:   #1
        if vR0.isShowing@this()!=0 goto B17;   
  -B7:   #1
        throw new java/awt/IllegalComponentStateException("component not showing");   
  +B17:   #1
        return vR0.peer.getLocationOnScreen();   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 getLocationOnScreen
 
 method location()Ljava/awt/Point; {
  +START:   #1
        return vR0.getLocation@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 location
 
 method setLocation(II)V {
  +START:   #1
        if vR0.x!=vi1 goto B17;   
  +B8:   #1
        if vR0.y!=vi2 goto B17;   
  +B16:   #1
        return;   
  +B17:   #2
        vR0.invalidate@this();   [   R] 
        vR0.x = vi1;   
        vR0.y = vi2;   
        if vR0.peer==null goto B57;   
  +B38:   #1
        vR0.peer.setBounds(vi1,vi2,vR0.width,vR0.height);   [  ii iiiiR] 
  +B57:   #1
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 2 swaps 1 any 0 found 0 setLocation
 
 method move(II)V {
  +START:   #1
        vR0.setLocation@this(vi1,vi2);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 move
 
 method setLocation(Ljava/awt/Point;)V {
  +START:   #1
        vR0.setLocation@this(vR1.x,vR1.y);   [  ii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 setLocation
 
 method getSize()Ljava/awt/Dimension; {
  +START:   #1
        return new java/awt/Dimension(vR0.width,vR0.height);   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 getSize
 
 method size()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getSize@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method setSize(II)V {
  +START:   #1
        if vR0.width!=vi1 goto B17;   
  +B8:   #1
        if vR0.height!=vi2 goto B17;   
  +B16:   #1
        return;   
  +B17:   #2
        vR0.invalidate@this();   [   R] 
        vR0.width = vi1;   
        vR0.height = vi2;   
        if vR0.peer==null goto B57;   
  +B38:   #1
        vR0.peer.setBounds(vR0.x,vR0.y,vi1,vi2);   [  ii iiiiR] 
  +B57:   #1
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 2 swaps 1 any 0 found 0 setSize
 
 method resize(II)V {
  +START:   #1
        vR0.setSize@this(vi1,vi2);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 resize
 
 method setSize(Ljava/awt/Dimension;)V {
  +START:   #1
        vR0.setSize@this(vR1.width,vR1.height);   [  ii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 setSize
 
 method resize(Ljava/awt/Dimension;)V {
  +START:   #1
        vR0.setSize@this(vR1.width,vR1.height);   [  ii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 resize
 
 method getBounds()Ljava/awt/Rectangle; {
  +START:   #1
        return new java/awt/Rectangle(vR0.x,vR0.y,vR0.width,vR0.height);   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 getBounds
 
 method bounds()Ljava/awt/Rectangle; {
  +START:   #1
        return vR0.getBounds@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 bounds
 
 method setBounds(IIII)V {
  +START:   #1
        if vR0.x!=vi1 goto B34;   
  +B8:   #1
        if vR0.y!=vi2 goto B34;   
  +B16:   #1
        if vR0.width!=vi3 goto B34;   
  +B24:   #1
        if vR0.height!=vi4 goto B34;   
  +B33:   #1
        return;   
  +B34:   #4
        vR0.invalidate@this();   [   R] 
        vR0.x = vi1;   
        vR0.y = vi2;   
        vR0.width = vi3;   
        vR0.height = vi4;   
        if vR0.peer==null goto B80;   
  +B66:   #1
        vR0.peer.setBounds(vi1,vi2,vi3,vi4);   [   iiiiR] 
  +B80:   #1
        return;   
  +END:   #1
 }
// Register: rd 19/19 wr 0 swaps 0 any 0 found 0 setBounds
 
 method reshape(IIII)V {
  +START:   #1
        vR0.setBounds@this(vi1,vi2,vi3,vi4);   [   iiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 reshape
 
 method setBounds(Ljava/awt/Rectangle;)V {
  +START:   #1
        vR0.setBounds@this(vR1.x,vR1.y,vR1.width,vR1.height);   [  iiii iiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 1 any 0 found 0 setBounds
 
 method getX()I {
  +START:   #1
        return vR0.x;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getX
 
 method getY()I {
  +START:   #1
        return vR0.y;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getY
 
 method getWidth()I {
  +START:   #1
        return vR0.width;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getWidth
 
 method getHeight()I {
  +START:   #1
        return vR0.height;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getHeight
 
 method getBounds(Ljava/awt/Rectangle;)Ljava/awt/Rectangle; {
  +START:   #1
        vR1.x = vR0.x;   
        vR1.y = vR0.y;   
        vR1.width = vR0.width;   
        vR1.height = vR0.height;   
        return vR1;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 getBounds
 
 method getSize(Ljava/awt/Dimension;)Ljava/awt/Dimension; {
  +START:   #1
        vR1.width = vR0.width;   
        vR1.height = vR0.height;   
        return vR1;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 getSize
 
 method getLocation(Ljava/awt/Point;)Ljava/awt/Point; {
  +START:   #1
        vR1.x = vR0.x;   
        vR1.y = vR0.y;   
        return vR1;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 getLocation
 
 method isOpaque()Z {
  +START:   #1
        if vR0.isLightweight@this()!=0 goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  .]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isOpaque
 
 method isLightweight()Z {
  +START:   #1
        if vR0.peer==null goto B21;   
  +B7:   #1
        if (vR0.peer instanceof java/awt/peer/LightweightPeer)==0 goto B21;   
  +B17:   #1
        b0 = 1;    
        goto +B22b0;   forward return[ i  ..]
  +B21:   #2
        b0 = 0;    
  +B22b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 isLightweight
 
 method getPreferredSize()Ljava/awt/Dimension; {
  +START:   #1
        if vR0.peer!=null goto B23;   
  +B7:   #1
        return new java/awt/Dimension(vR0.width,vR0.height);   
  +B23:   #1
        return vR0.peer.getPreferredSize();   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 getPreferredSize
 
 method preferredSize()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getPreferredSize@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 preferredSize
 
 method getMinimumSize()Ljava/awt/Dimension; {
  +START:   #1
        if vR0.peer!=null goto B23;   
  +B7:   #1
        return new java/awt/Dimension(vR0.width,vR0.height);   
  +B23:   #1
        return vR0.peer.getMinimumSize();   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 getMinimumSize
 
 method minimumSize()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getMinimumSize@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 minimumSize
 
 method getMaximumSize()Ljava/awt/Dimension; {
  +START:   #1
        return new java/awt/Dimension(2147483647,2147483647);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getMaximumSize
 
 method doLayout()V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 doLayout
 
 method layout()V {
  +START:   #1
        vR0.doLayout@this();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 layout
 
 method validate()V {
  +START:   #1
        vR0.valid = 1;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 validate
 
 method invalidate()V {
  +START:   #1
        vR0.valid = 0;   
        if vR0.parent==null goto B29;   
  +B12:   #1
        if vR0.parent.valid==0 goto B29;   
  +B22:   #1
        vR0.parent.invalidate();   [   R] 
  +B29:   #2
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 invalidate
 
 method getGraphics()Ljava/awt/Graphics; {
  +START:   #1
        if vR0.peer==null goto B61;   
  +B7:   #1
        vR1 = vR0.peer.getGraphics();    [   R] 
        if vR1==null goto B23;   
  +B21:   #1
        return vR1;   
  +B23:   #1
        vR2 = vR0.getParent@this();    [R   R] 
        if vR2==null goto B61;   
  +B32:   #1
        vR1 = vR2.getGraphics();    [RR   R] 
        vR3 = vR0.getBounds@this();    [RR   R] 
        vR1.setClip(vR3);   [RRR   RR] 
        vR1.translate(vR3.x,vR3.y);   [RRR  ii iiR] 
        return vR1;   
  +B61:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 13/13 wr 6 swaps 1 any 2 found 0 getGraphics
 
 method setCursor(Ljava/awt/Cursor;)V {
  +START:   #1
        vR0.cursor = vR1;   
        if vR0.peer==null goto B22;   
  +B12:   #1
        vR0.peer.setCursor(vR1);   [   RR] 
  +B22:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setCursor
 
 method getCursor()Ljava/awt/Cursor; {
  +START:   #1
        return vR0.cursor;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getCursor
 
 method paint(Ljava/awt/Graphics;)V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 paint
 
 method update(Ljava/awt/Graphics;)V {
  +START:   #1
        vR0.paint@this(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 update
 
 method paintAll(Ljava/awt/Graphics;)V {
  +START:   #1
        if vR0.visible!=0 goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        if vR0.peer==null goto B25;   
  +B15:   #1
        vR0.peer.paint(vR1);   [   RR] 
  +B25:   #1
        vR0.paint@this(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 paintAll
 
 method repaint()V {
  +START:   #1
        vR0.repaint@this(0,0,vR0.getWidth@this(),vR0.getHeight@this());   [  ii iiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 1 any 0 found 0 repaint
 
 method repaint(IIII)V {
  +START:   #1
        if vR0.isLightweight@this()==0 goto B44;   
  +B7:   #1
        if vR0.parent==null goto B44;   
  +B14:   #1
        if vR0.parent==null goto B43;   
  +B21:   #1
        vR0.parent.repaint((vi1+vR0.getX@this()),(vi2+vR0.getY@this()),vi3,vi4);   [  ii iiiiR] 
  +B43:   #1
        return;   
  +B44:   #2
        if vR0.peer==null goto B65;   
  +B51:   #1
        vR0.peer.repaint(vi1,vi2,vi3,vi4);   [  .. iiiiR] 
  +B65:   #1
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 3 swaps 1 any 0 found 2 repaint
 
 method print(Ljava/awt/Graphics;)V {
  +START:   #1
        vR0.paint@this(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 print
 
 method printAll(Ljava/awt/Graphics;)V {
  +START:   #1
        vR0.paintAll@this(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 printAll
 
 method imageUpdate(Ljava/awt/Image;IIIII)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 imageUpdate
 
 method createImage(II)Ljava/awt/Image; {
  -START:   #1
        throw new java/lang/Error("NOT Implemented");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 createImage
 
 method contains(II)Z {
  +START:   #1
        if vi1< 0 goto B28;   
  +B4:   #1
        if vi2< 0 goto B28;   
  +B8:   #1
        if vi1>=vR0.width goto B28;   
  +B16:   #1
        if vi2>=vR0.height goto B28;   
  +B24:   #1
        b0 = 1;    
        goto +B29b0;   forward return[ i  ]
  +B28:   #4
        b0 = 0;    
  +B29b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 7/7 wr 1 swaps 0 any 4 found 0 contains
 
 method inside(II)Z {
  +START:   #1
        return vR0.contains@this(vi1,vi2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 inside
 
 method contains(Ljava/awt/Point;)Z {
  +START:   #1
        return vR0.contains@this(vR1.x,vR1.y);   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 contains
 
 method getComponentAt(II)Ljava/awt/Component; {
  +START:   #1
        if vR0.contains@this(vi1,vi2)==0 goto B11;   
  +B9:   #1
        return vR0;   
  +B11:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 getComponentAt
 
 method locate(II)Ljava/awt/Component; {
  +START:   #1
        return vR0.getComponentAt@this(vi1,vi2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 locate
 
 method getComponentAt(Ljava/awt/Point;)Ljava/awt/Component; {
  +START:   #1
        return vR0.getComponentAt@this(vR1.x,vR1.y);   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 getComponentAt
 
 method dispatchEvent(Ljava/awt/AWTEvent;)V {
  +START:   #1
        vR0.dispatchEventImpl@this(vR1);   [   RR] 
        if vR0.peer==null goto B22;   
  +B12:   #1
        vR0.peer.handleEvent(vR1);   [   RR] 
  +B22:   #1
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 dispatchEvent
 
 method dispatchEventImpl(Ljava/awt/AWTEvent;)V {
  +START:   #1
        if vR1.id>103 goto B42;   
  +B9:   #1
        if vR1.id<100 goto B42;   
  +B18:   #1
        if vR0.componentListener!=null goto B34;   
  +B25:   #1
        if (vR0.eventMask & 1)==0 goto B42;   
  +B34:   #1
        vR0.processEvent@this(vR1);   [   RR] 
        goto +B219;   forward return[   ..]
  +B42:   #3
        if vR1.id>402 goto B87;   
  +B52:   #1
        if vR1.id<400 goto B87;   
  +B62:   #1
        if vR0.keyListener!=null goto B79;   
  +B69:   #1
        if (vR0.eventMask & 8)==0 goto B87;   
  +B79:   #1
        vR0.processEvent@this(vR1);   [   RR] 
        goto +B219;   forward return[   ..]
  +B87:   #3
        if vR1.id>507 goto B139;   
  +B97:   #1
        if vR1.id<500 goto B139;   
  +B107:   #1
        if vR0.mouseListener!=null goto B131;   
  +B114:   #1
        if vR0.mouseMotionListener!=null goto B131;   
  +B121:   #1
        if (vR0.eventMask & 16)==0 goto B139;   
  +B131:   #2
        vR0.processEvent@this(vR1);   [   RR] 
        goto +B219;   forward return[   ..]
  +B139:   #3
        if vR1.id>1005 goto B183;   
  +B149:   #1
        if vR1.id<1004 goto B183;   
  +B159:   #1
        if vR0.focusListener!=null goto B175;   
  +B166:   #1
        if (vR0.eventMask & 4)==0 goto B183;   
  +B175:   #1
        vR0.processEvent@this(vR1);   [   RR] 
        goto +B219;   forward return[   ..]
  +B183:   #3
        if vR1.id>801 goto B219;   
  +B193:   #1
        if vR1.id<800 goto B219;   
  +B203:   #1
        if (vR0.eventMask & 8192)==0 goto B219;   
  +B214:   #1
        vR0.processEvent@this(vR1);   [   RR] 
  +B219:   #7
        return;   
  +END:   #1
 }
// Register: rd 25/25 wr 0 swaps 0 any 0 found 0 dispatchEventImpl
 
 method postEvent(Ljava/awt/Event;)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 postEvent
 
 method addComponentListener(Ljava/awt/event/ComponentListener;)V {
  +START:   #1
        vR0.componentListener = add@special(vR0.componentListener,vR1);   
        if vR0.componentListener==null goto B24;   
  +B19:   #1
        vR0.enableEvents@extra(1);   [  . iR] 
  +B24:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 addComponentListener
 
 method removeComponentListener(Ljava/awt/event/ComponentListener;)V {
  +START:   #1
        vR0.componentListener = remove@special(vR0.componentListener,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 removeComponentListener
 
 method addFocusListener(Ljava/awt/event/FocusListener;)V {
  +START:   #1
        vR0.focusListener = add@special(vR0.focusListener,vR1);   
        if vR0.focusListener==null goto B24;   
  +B19:   #1
        vR0.enableEvents@extra(4);   [  . iR] 
  +B24:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 addFocusListener
 
 method removeFocusListener(Ljava/awt/event/FocusListener;)V {
  +START:   #1
        vR0.focusListener = remove@special(vR0.focusListener,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 removeFocusListener
 
 method addKeyListener(Ljava/awt/event/KeyListener;)V {
  +START:   #1
        vR0.keyListener = add@special(vR0.keyListener,vR1);   
        if vR0.keyListener==null goto B25;   
  +B19:   #1
        vR0.enableEvents@extra(8);   [  . iR] 
  +B25:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 addKeyListener
 
 method removeKeyListener(Ljava/awt/event/KeyListener;)V {
  +START:   #1
        vR0.keyListener = remove@special(vR0.keyListener,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 removeKeyListener
 
 method addMouseListener(Ljava/awt/event/MouseListener;)V {
  +START:   #1
        vR0.mouseListener = add@special(vR0.mouseListener,vR1);   
        if vR0.mouseListener==null goto B25;   
  +B19:   #1
        vR0.enableEvents@extra(16);   [  . iR] 
  +B25:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 addMouseListener
 
 method removeMouseListener(Ljava/awt/event/MouseListener;)V {
  +START:   #1
        vR0.mouseListener = remove@special(vR0.mouseListener,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 removeMouseListener
 
 method addMouseMotionListener(Ljava/awt/event/MouseMotionListener;)V {
  +START:   #1
        vR0.mouseMotionListener = add@special(vR0.mouseMotionListener,vR1);   
        if vR0.mouseMotionListener==null goto B25;   
  +B19:   #1
        vR0.enableEvents@extra(16);   [  . iR] 
  +B25:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 addMouseMotionListener
 
 method removeMouseMotionListener(Ljava/awt/event/MouseMotionListener;)V {
  +START:   #1
        vR0.mouseMotionListener = remove@special(vR0.mouseMotionListener,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 removeMouseMotionListener
 
 method enableEvents(I)V {
  +START:   #1
        vR0.eventMask = (vR0.eventMask | vi1);   
        if vR0.isLightweight@this()==0 goto B35;   
  +B17:   #1
        if vR0.parent==null goto B35;   
  +B24:   #1
        vR0.parent.enableEvents(vi1);   [   iR] 
        goto +B55;   forward return[   ..]
  +B35:   #2
        if vR0.peer==null goto B55;   
  +B42:   #1
        vR0.peer.setEventMask(vR0.eventMask);   [  i iR] 
  +B55:   #2
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 1 swaps 1 any 0 found 0 enableEvents
 
 method disableEvents(I)V {
  +START:   #1
        vR0.eventMask = (vR0.eventMask & (vi1 ^ -1));   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 disableEvents
 
 method coalesceEvents(Ljava/awt/AWTEvent;Ljava/awt/AWTEvent;)Ljava/awt/AWTEvent; {
  +START:   #1
        lswitch (vR1.id) { 
           503:B48
           506:B48
           800:B50
           801:B50
           ::B63
        };   
  +B48:   #2
        return vR2;   
  +B50:   #2
        return vR0.coalescePaintEvents@special((java/awt/event/PaintEvent)(vR1),(java/awt/event/PaintEvent)(vR2));   
  +B63:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 0 found 3 coalesceEvents
 
 method coalescePaintEvents(Ljava/awt/event/PaintEvent;Ljava/awt/event/PaintEvent;)Ljava/awt/event/PaintEvent; {
  +START:   #1
        vR3 = vR1.getUpdateRect();    [   R] 
        vR4 = vR2.getUpdateRect();    [R   R] 
        vR5 = vR3.union(vR4);    [RR   RR] 
        vi6 = (vR3.width*vR3.height);    
        vi7 = (vR4.width*vR4.height);    
        vi8 = (vR5.width*vR5.height);    
        if vi8<=((vi6+vi7)*2) goto B70;   
  +B68:   #1
        return 0;   
  +B70:   #1
        vR2.setUpdateRect(vR5);   [RRRiii   RR] 
        return vR2;   
  +END:   #1
 }
// Register: rd 14/14 wr 6 swaps 0 any 1 found 0 coalescePaintEvents
 
 method processEvent(Ljava/awt/AWTEvent;)V {
  +START:   #1
        if (vR1 instanceof java/awt/event/FocusEvent)==0 goto B18;   
  +B7:   #1
        vR0.processFocusEvent@this((java/awt/event/FocusEvent)(vR1));   [   RR] 
        goto +B118;   forward return[   ..]
  +B18:   #1
        if (vR1 instanceof java/awt/event/PaintEvent)==0 goto B36;   
  +B25:   #1
        vR0.processPaintEvent@special((java/awt/event/PaintEvent)(vR1));   [   RR] 
        goto +B118;   forward return[   ..]
  +B36:   #1
        if (vR1 instanceof java/awt/event/MouseEvent)==0 goto B85;   
  +B43:   #1
        if vR1.id==503 goto B63;   
  +B53:   #1
        if vR1.id!=506 goto B74;   
  +B63:   #1
        vR0.processMouseMotionEvent@this((java/awt/event/MouseEvent)(vR1));   [   RR] 
        goto +B118;   forward return[   ..]
  +B74:   #1
        vR0.processMouseEvent@this((java/awt/event/MouseEvent)(vR1));   [   RR] 
        goto +B118;   forward return[   ..]
  +B85:   #1
        if (vR1 instanceof java/awt/event/KeyEvent)==0 goto B103;   
  +B92:   #1
        vR0.processKeyEvent@this((java/awt/event/KeyEvent)(vR1));   [   RR] 
        goto +B118;   forward return[   ..]
  +B103:   #1
        if (vR1 instanceof java/awt/event/ComponentEvent)==0 goto B118;   
  +B110:   #1
        vR0.processComponentEvent@this((java/awt/event/ComponentEvent)(vR1));   [   RR] 
  +B118:   #6
        return;   
  +END:   #1
 }
// Register: rd 25/25 wr 0 swaps 0 any 0 found 6 processEvent
 
 method processComponentEvent(Ljava/awt/event/ComponentEvent;)V {
  +START:   #1
        if vR0.componentListener!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        tswitch (vR1.id) B57 B70 B83 B44 : B93;   
  +B44:   #1
        vR0.componentListener.componentHidden(vR1);   [   RR] 
        goto +B93;   forward return[   ..]
  +B57:   #1
        vR0.componentListener.componentMoved(vR1);   [   RR] 
        goto +B93;   forward return[   ..]
  +B70:   #1
        vR0.componentListener.componentResized(vR1);   [   RR] 
        goto +B93;   forward return[   ..]
  +B83:   #1
        vR0.componentListener.componentShown(vR1);   [   RR] 
  +B93:   #4
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 0 swaps 0 any 0 found 0 processComponentEvent
 
 method processFocusEvent(Ljava/awt/event/FocusEvent;)V {
  +START:   #1
        if vR0.focusListener!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        lswitch (vR1.id) { 
           1004:B40
           1005:B53
           ::B63
        };   
  +B40:   #1
        vR0.focusListener.focusGained(vR1);   [   RR] 
        goto +B63;   forward return[   ..]
  +B53:   #1
        vR0.focusListener.focusLost(vR1);   [   RR] 
  +B63:   #2
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 processFocusEvent
 
 method processKeyEvent(Ljava/awt/event/KeyEvent;)V {
  +START:   #1
        if vR0.keyListener!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        tswitch (vR1.id) B66 B40 B53 : B76;   
  +B40:   #1
        vR0.keyListener.keyPressed(vR1);   [   RR] 
        goto +B76;   forward return[   ..]
  +B53:   #1
        vR0.keyListener.keyReleased(vR1);   [   RR] 
        goto +B76;   forward return[   ..]
  +B66:   #1
        vR0.keyListener.keyTyped(vR1);   [   RR] 
  +B76:   #3
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 processKeyEvent
 
 method processMouseEvent(Ljava/awt/event/MouseEvent;)V {
  +START:   #1
        if vR0.mouseListener!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        tswitch (vR1.id) B52 B91 B104 B114 B65 B78 : B114;   
  +B52:   #1
        vR0.mouseListener.mouseClicked(vR1);   [   RR] 
        goto +B114;   forward return[   ..]
  +B65:   #1
        vR0.mouseListener.mouseEntered(vR1);   [   RR] 
        goto +B114;   forward return[   ..]
  +B78:   #1
        vR0.mouseListener.mouseExited(vR1);   [   RR] 
        goto +B114;   forward return[   ..]
  +B91:   #1
        vR0.mouseListener.mousePressed(vR1);   [   RR] 
        goto +B114;   forward return[   ..]
  +B104:   #1
        vR0.mouseListener.mouseReleased(vR1);   [   RR] 
  +B114:   #6
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 processMouseEvent
 
 method processMouseMotionEvent(Ljava/awt/event/MouseEvent;)V {
  +START:   #1
        if vR0.mouseMotionListener!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        lswitch (vR1.id) { 
           503:B53
           506:B40
           ::B63
        };   
  +B40:   #1
        vR0.mouseMotionListener.mouseDragged(vR1);   [   RR] 
        goto +B63;   forward return[   ..]
  +B53:   #1
        vR0.mouseMotionListener.mouseMoved(vR1);   [   RR] 
  +B63:   #2
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 processMouseMotionEvent
 
 method processPaintEvent(Ljava/awt/event/PaintEvent;)V {
  +START:   #1
        if vR0.peer!=null goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        vR2 = vR0.getGraphics@this();    [   R] 
        lswitch (vR1.id) { 
           800:B44
           801:B52
           ::B60
        };   
  +B44:   #1
        vR0.paint@this(vR2);   [R   RR] 
        goto +B60;   forward return[R   ..]
  +B52:   #1
        vR0.update@this(vR2);   [R   RR] 
        goto +B60;   forward return[R   ..]
  +B60:   #3
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 processPaintEvent
 
 method handleEvent(Ljava/awt/Event;)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 handleEvent
 
 method addNotify()V {
  +START:   #1
        if vR0.peer!=null goto B19;   
  +B7:   #1
        vR0.peer = vR0.getToolkit@this().createComponent(vR0);   
  +B19:   #1
        if vR0.popups==null goto B59;   
  +B26:   #1
        vi1 = 0;    
  +B28:   #1
        if vi1>=vR0.popups.size@extra() goto B59;   
  +B39:   #1
        (java/awt/PopupMenu)(vR0.popups.elementAt(vi1)).addNotify();   [i  . R.] 
        vi1++;   
        goto +B28;   [i  . ..]
  +B59:   #2
        vR0.peer.setEventMask(vR0.eventMask);   [i  i iR] 
        return;   
  +END:   #1
 }
// Register: rd 12/12 wr 6 swaps 1 any 2 found 1 addNotify
 
 method removeNotify()V {
  +START:   #1
        if vR0.peer==null goto B16;   
  +B7:   #1
        vR0.peer.dispose();   [   R] 
  +B16:   #1
        vR0.peer = 0;   
        if vR0.popups==null goto B61;   
  +B28:   #1
        vi1 = 0;    
  +B30:   #1
        if vi1>=vR0.popups.size@extra() goto B61;   
  +B41:   #1
        (java/awt/PopupMenu)(vR0.popups.elementAt(vi1)).removeNotify();   [i  . R.] 
        vi1++;   
        goto +B30;   [i  . ..]
  +B61:   #2
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 4 swaps 0 any 2 found 1 removeNotify
 
 method isFocusTraversable()Z {
  +START:   #1
        if vR0.enabled==0 goto B37;   
  +B7:   #1
        if vR0.visible==0 goto B37;   
  +B14:   #1
        if vR0.peer==null goto B33;   
  +B21:   #1
        if vR0.peer.isFocusTraversable()==0 goto B37;   
  +B33:   #1
        b0 = 1;    
        goto +B38b0;   forward return[ i  .]
  +B37:   #3
        b0 = 0;    
  +B38b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 isFocusTraversable
 
 method requestFocus()V {
  +START:   #1
        if vR0.peer==null goto B16;   
  +B7:   #1
        vR0.peer.requestFocus();   [   R] 
  +B16:   #1
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 requestFocus
 
 method findNextFocusComponent(Ljava/awt/Component;)Ljava/awt/Component; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 findNextFocusComponent
 
 method transferFocus()V {
  +START:   #1
        if vR0.parent!=null goto B16;   
  +B7:   #1
        vR1 = vR0.findNextFocusComponent@this(0);    [   RR] 
        goto +B25;   [R   ..]
  +B16:   #1
        vR1 = vR0.parent.findNextFocusComponent(vR0);    [R   RR] 
  +B25:   #1
        if vR1==null goto B38;   
  +B29:   #1
        if vR1==vR0 goto B38;   
  +B34:   #1
        vR1.requestFocus();   [R   R.] 
  +B38:   #2
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 2 found 0 transferFocus
 
 method nextFocus()V {
  +START:   #1
        vR0.transferFocus@this();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 nextFocus
 
 method hasFocus()Z {
  +START:   #1
        return vR0.hasFocus;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 hasFocus
 
 method add(Ljava/awt/PopupMenu;)V {
  +START:   #1
        if vR0.popups!=null goto B18;   
  +B7:   #1
        b1 = new java/util/Vector();    [ ?R  i][ ?R  iR]
        vR0.popups = b1;   
  +B18:   #1
        vR0.popups.addElement@extra(vR1);   [ ?R  RR] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 add
 
 method remove(Ljava/awt/MenuComponent;)V {
  +START:   #1
        vR0.popups.removeElement@extra(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 remove
 
 method paramString()Ljava/lang/String; {
  +START:   #1
        vR1 = new java/lang/StringBuffer();    [ R  i][ R  iR]
        vR2 = vR0.getName@this();    [R R  R.] 
        if vR2==null goto B31;   
  +B17:   #1
        vR1.append(vR2);   [RR R  RR] 
        vR1.append(",");   [RR R i RR] 
  +B31:   #1
        vR1.append(vR0.width);   [RR R i iR] 
        vR1.append("x");   [RR R ii RR] 
        vR1.append(vR0.height);   [RR R iii iR] 
        vR1.append("+");   [RR R iiii RR] 
        vR1.append(vR0.x);   [RR R iiiii iR] 
        vR1.append("+");   [RR R iiiiii RR] 
        vR1.append(vR0.y);   [RR R iiiiiii iR] 
        if vR0.isValid@this()!=0 goto B106;   
  +B98:   #1
        vR1.append(",invalid");   [RR R i...... RR] 
  +B106:   #1
        if vR0.isVisible@this()!=0 goto B121;   
  +B113:   #1
        vR1.append(",invisible");   [RR R i...... RR] 
  +B121:   #1
        if vR0.isEnabled@this()!=0 goto B136;   
  +B128:   #1
        vR1.append(",disabled");   [RR R i...... RR] 
  +B136:   #1
        if vR0.isOpaque@this()!=0 goto B151;   
  +B143:   #1
        vR1.append(",translucent");   [RR R i...... RR] 
  +B151:   #1
        if vR0.isDoubleBuffered@this()==0 goto B166;   
  +B158:   #1
        vR1.append(",doublebuffered");   [RR R i...... RR] 
  +B166:   #1
        return vR1.toString();   
  +END:   #1
 }
// Register: rd 26/26 wr 15 swaps 13 any 1 found 0 paramString
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("[").append@extra(vR0.paramString@this()).append@extra("]").toString@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 10 swaps 4 any 0 found 0 toString
 
 method list()V {
  +START:   #1
        vR0.list@this(out,0);   [  i iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 list
 
 method list(Ljava/io/PrintStream;)V {
  +START:   #1
        vR0.list@this(vR1,0);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 list
 
 method list(Ljava/io/PrintStream;I)V {
  +START:   #1
        vi3 = 0;    
  +B2:   #1
        if vi3>=vi2 goto B19;   
  +B7:   #1
        vR1.print(32);   [i   iR] 
        vi3++;   
        goto +B2;   [i   ..]
  +B19:   #1
        vR1.println(vR0.toString@this());   [i  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 3 swaps 1 any 2 found 0 list
 
 method list(Ljava/io/PrintWriter;)V {
  +START:   #1
        vR0.list@this(vR1,0);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 list
 
 method list(Ljava/io/PrintWriter;I)V {
  +START:   #1
        vi3 = 0;    
  +B2:   #1
        if vi3>=vi2 goto B19;   
  +B7:   #1
        vR1.print(32);   [i   iR] 
        vi3++;   
        goto +B2;   [i   ..]
  +B19:   #1
        vR1.println(vR0.toString@this());   [i  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 3 swaps 1 any 2 found 0 list
 
 method <clinit>()V {
  +START:   #1
        treeLock = "AWT_TREE_LOCK";   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 <clinit>
}
