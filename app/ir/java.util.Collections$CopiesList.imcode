class java/util/Collections$CopiesList {
 
 method <init>(ILjava/lang/Object;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.n = vi1;   
        vR0.element = vR2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method size()I {
  +START:   #1
        return vR0.n;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0.n==0 goto B22;   
  +B7:   #1
        if eq@special(vR1,vR0.element)==0 goto B22;   
  +B18:   #1
        b0 = 1;    
        goto +B23b0;   forward return[ i . ..]
  +B22:   #2
        b0 = 0;    
  +B23b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 contains
 
 method indexOf(Ljava/lang/Object;)I {
  +START:   #1
        if vR0.contains@this(vR1)==0 goto B12;   
  +B8:   #1
        b0 = 0;    
        goto +B13b0;   forward return[ i  ..]
  +B12:   #1
        b0 = -1;    
  +B13b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 indexOf
 
 method lastIndexOf(Ljava/lang/Object;)I {
  +START:   #1
        if vR0.contains@this(vR1)==0 goto B17;   
  +B8:   #1
        b0 = (vR0.n-1);    
        goto +B18b0;   forward return[ i  ..]
  +B17:   #1
        b0 = -1;    
  +B18b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 lastIndexOf
 
 method get(I)Ljava/lang/Object; {
  +START:   #1
        if vi1< 0 goto B12;   
  +B4:   #1
        if vi1<vR0.n goto B51;   
  -B12:   #1
        b0 = new java/lang/IndexOutOfBoundsException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra("Index: ").append@extra(vi1).append@extra(", Size: ").append@extra(vR0.n).toString@extra());   [ RRR iiii... RR...] 
        throw b0;   
  +B51:   #1
        return vR0.element;   
  +END:   #1
 }
// Register: rd 9/9 wr 11 swaps 4 any 3 found 0 get
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        vR1 = new java/lang/Object()[vR0.n];    
        if vR0.element==null goto B28;   
  +B15:   #1
        fill@special(vR1,0,vR0.n,vR0.element);   [R  iR RiiR]
  +B28:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 0 found 0 toArray
 
 method toArray([Ljava/lang/Object;)[Ljava/lang/Object; {
  +START:   #1
        vi2 = vR0.n;    
        if vR1.length>=vi2 goto B46;   
  +B11:   #1
        vR1 = ([Ljava/lang/Object;)(newInstance@special(vR1.getClass().getComponentType@extra(),vi2));    
        if vR0.element==null goto B66;   
  +B33:   #1
        fill@special(vR1,0,vi2,vR0.element);   [i  R. RiiR]
        goto +B66;   forward return[i  R. ....]
  +B46:   #1
        fill@special(vR1,0,vi2,vR0.element);   [i  R. RiiR]
        if vR1.length<=vi2 goto B66;   
  +B62:   #1
        vR1[vi2] = 0;   
  +B66:   #3
        return vR1;   
  +END:   #1
 }
// Register: rd 13/13 wr 7 swaps 0 any 0 found 0 toArray
 
 method subList(II)Ljava/util/List; {
  +START:   #1
        if vi1>=0 goto B31;   
  -B4:   #1
        b0 = new java/lang/IndexOutOfBoundsException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra("fromIndex = ").append@extra(vi1).toString@extra());   [ RRR ii. RR.] 
        throw b0;   
  +B31:   #1
        if vi2<=vR0.n goto B66;   
  -B39:   #1
        b0 = new java/lang/IndexOutOfBoundsException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR ... i..][ RRR ... iR.]
        b1.<init>@special(b2.append@extra("toIndex = ").append@extra(vi2).toString@extra());   [ RRR ii. RR.] 
        throw b0;   
  +B66:   #1
        if vi1<=vi2 goto B112;   
  -B71:   #1
        b0 = new java/lang/IllegalArgumentException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR ... i..][ RRR ... iR.]
        b1.<init>@special(b2.append@extra("fromIndex(").append@extra(vi1).append@extra(") > toIndex(").append@extra(vi2).append@extra(")").toString@extra());   [ RRR iiii.... RR....] 
        throw b0;   
  +B112:   #1
        return new java/util/Collections$CopiesList((vi2-vi1),vR0.element);   
  +END:   #1
 }
// Register: rd 21/21 wr 27 swaps 8 any 6 found 0 subList
 
 method stream()Ljava/util/stream/Stream; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 stream
 
 method parallelStream()Ljava/util/stream/Stream; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 parallelStream
 
 method listIterator()Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method listIterator(I)Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method add(ILjava/lang/Object;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 add
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 set
}
