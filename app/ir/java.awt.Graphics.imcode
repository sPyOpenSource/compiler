class java/awt/Graphics {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method create(IIII)Ljava/awt/Graphics; {
  +START:   #1
        vR5 = vR0.create@this();    [   R] 
        vR5.translate(vi1,vi2);   [R   iiR] 
        vR5.clipRect(0,0,vi3,vi4);   [R   iiiiR] 
        return vR5;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 0 create
 
 method getClipRect()Ljava/awt/Rectangle; {
  +START:   #1
        return vR0.getClipBounds@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getClipRect
 
 method drawRect(IIII)V {
  +START:   #1
        vi5 = vi1;    
        vi6 = vi2;    
        vi7 = (vi1+vi3);    
        vi8 = (vi2+vi4);    
        vR0.drawLine@this(vi5,vi6,vi7,vi6);   [iiii   iiiiR] 
        vR0.drawLine@this(vi7,vi6,vi7,vi8);   [iiii   iiiiR] 
        vR0.drawLine@this(vi7,vi8,vi5,vi8);   [iiii   iiiiR] 
        vR0.drawLine@this(vi5,vi8,vi5,vi6);   [iiii   iiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 4 swaps 0 any 4 found 0 drawRect
 
 method draw3DRect(IIIIZ)V {
  +START:   #1
        vR6 = vR0.getColor@this();    [   R] 
        vR7 = vR6.brighter();    [R   R] 
        vR8 = vR6.darker();    [RR   R] 
        if vi5!=0 goto B37;   
  +B25:   #1
        vR9 = vR7;    
        vR7 = vR8;    
        vR8 = vR9;    
  +B37:   #1
        vi9 = vi1;    
        vi10 = vi2;    
        vi11 = (vi1+vi3);    
        vi12 = (vi2+vi4);    
        vR0.setColor@this(vR7);   [RRRiiii   RR] 
        vR0.drawLine@this(vi9,vi10,vi11,vi10);   [RRRiiii   iiiiR] 
        vR0.drawLine@this(vi9,vi12,vi9,vi10);   [RRRiiii   iiiiR] 
        vR0.setColor@this(vR8);   [RRRiiii   RR...] 
        vR0.drawLine@this(vi11,vi10,vi11,vi12);   [RRRiiii   iiiiR] 
        vR0.drawLine@this(vi9,vi12,vi11,vi12);   [RRRiiii   iiiiR] 
        vR0.setColor@this(vR6);   [RRRiiii   RR...] 
        return;   
  +END:   #1
 }
// Register: rd 20/20 wr 10 swaps 0 any 8 found 0 draw3DRect
 
 method fill3DRect(IIIIZ)V {
  +START:   #1
        vR0.fillRect@this(vi1,vi2,(vi3-1),(vi4-1));   [  ii iiiiR] 
        vR0.draw3DRect@this(vi1,vi2,(vi3-1),(vi4-1),vi5);   [  iiii iiiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 4 swaps 2 any 0 found 0 fill3DRect
 
 method drawRoundRect(IIIIZ)V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 drawRoundRect
 
 method drawChars([CIIII)V {
  +START:   #1
        b1 = new java/lang/String(vR1,vi2,vi3);    [ ?R  i][ ?R . iiiRR]
        vR0.drawString@this(b1,vi4,vi5);   [ ?R . iiRR.] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 0 found 0 drawChars
 
 method drawChars([BIIII)V {
  +START:   #1
        b1 = new java/lang/String(vR1,vi2,vi3);    [ ?R  i][ ?R . iiiRR]
        vR0.drawString@this(b1,vi4,vi5);   [ ?R . iiRR.] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 0 found 0 drawChars
 
 method drawBytes([BIIII)V {
  +START:   #1
        vR6 = new java/lang/String(vR1,vi2,vi3);    [ R  i][ R . iiiRR]
        vR0.drawString@this(vR6,vi4,vi5);   [R R . iiRR.] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 2 swaps 0 any 0 found 0 drawBytes
 
 method finalize()V {
  +START:   #1
        vR0.dispose@this();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 finalize
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return vR0.toString@special();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toString
 
 method getClipBounds(Ljava/awt/Rectangle;)Ljava/awt/Rectangle; {
  +START:   #1
        vR2 = vR0.getClipBounds@this();    [   R] 
        if vR1!=null goto B11;   
  +B9:   #1
        return vR2;   
  +B11:   #1
        vR1.x = vR2.x;   
        vR1.y = vR2.y;   
        vR1.width = vR2.width;   
        vR1.height = vR2.height;   
        return vR1;   
  +END:   #1
 }
// Register: rd 12/12 wr 1 swaps 0 any 1 found 0 getClipBounds
}
