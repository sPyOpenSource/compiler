class java/awt/EventDispatchThread {
 
 method <init>(Ljava/awt/EventQueue;)V {
  +START:   #1
        vR0.<init>@special();   [ ?Ri  R] 
        b1 = new java/lang/StringBuilder();    [ ?Ri  i][ ?Ri  iR]
        b1 = b1.append@extra("AWT-EventQueue-");    [ ?Ri i RR] 
        b2 = dispatchThreadNum;    
        dispatchThreadNum = (b2+1);   
        vR0.setName@this(b1.append@extra(b2).toString@extra());   [ ?Ri ii RR] 
        vR0.queue = vR1;   
        vR0.start@this();   [ ?Ri ii R.] 
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 7 swaps 2 any 0 found 0 <init>
 
 method run()V {
  +START:   #4
        vR1 = vR0.queue.getNextEvent();    [   R] 
        vR0.queue.dispatchEvent(vR1);   [R   RR] 
  +B16:   #1
        goto +START;   [R   ..]
  +H19<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        out.println("Exception during event dispatch:");   [R  i. RR] 
        out.println(vR1);   [R  i. RR] 
        goto +START;   [R  i. ..]
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 16 handler 19 type 50
 }
// Register: rd 2/2 wr 5 swaps 1 any 0 found 0 run
 
 method <clinit>()V {
  +START:   #1
        dispatchThreadNum = 1;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 <clinit>
}
