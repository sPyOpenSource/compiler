class test/portal/scale/Acceptor {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method init(Ljx/zero/Naming;[Ljava/lang/String;)V {
  +START:   #1
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream((jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0")));    [ RRR  i][ RRR .i. iRR]
        b1.<init>@special(b2);   [ RRR .i. RR.] 
        out = b0;   
        main@special(vR1);   [ RRR .i. R..]
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 6 swaps 1 any 1 found 1 init
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        vR1 = getInitialNaming@special();    
        N_DOMAINS = parseInt@special(vR0[0]);   
        vR2 = "Servlet";    
        vR3 = "test_portal.jll";    
        vR4 = "test/portal/scale/ServletDomain";    
        vR5 = 0;    
        vi6 = 80000;    
        vi7 = 30000;    
        vR8 = new java/lang/String()[0];    
        vR9 = (jx/zero/DomainManager)(vR1.lookup("DomainManager"));    
        vR10 = (jx/zero/MemoryManager)(vR1.lookup("MemoryManager"));    
        vi11 = 0;    
  +B70:   #1
        if vi11>=100 goto B86;   
  +B77:   #1
        yield@special();   [RRRRRiiRRRi RRR .... ..]
        vi11++;   
        goto +B70;   [RRRRRiiRRRi RRR .... ..]
  +B86:   #1
        vi11 = vR10.getTotalFreeMemory();    [RRRRRiiRRRi RRR .... R.] 
        vR12 = new jx/zero/Domain()[N_DOMAINS];    
        vR13 = new test/portal/scale/MyNaming(vR1);    [ RRR .... i.][ RRR .... iRR]
        vi14 = 0;    
        vR15 = (jx/zero/Clock)(vR1.lookup("Clock"));    
        vi16 = vR15.getTimeInMillis();    [RRRRRiiRRRiRRiR RRR i... R..] 
  +B138:   #2
        if vi14>=N_DOMAINS goto B256;   
  +B146:   #1
        if verbose==0 goto B188;   
  +B152:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR .... i..][ RRR .... iR.]
        b0.println(b1.append@extra(vi14).append@extra(" ").append@extra(vR10.getTotalFreeMemory()).toString@extra());   [RRRRRiiRRRiRRiRi RRR iii.. RR..] 
  +B188:   #1
        vR17 = new test/portal/scale/MyConnection();    [ RRR ..... i...][ RRR ..... iR..]
        b0 = new jx/zero/Portal()[1];    
        b0[0] = vR17;   
        vR18 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR ..... i...][ RRR ..... iR..]
        vR12[vi14] = createDomain@special(b2.append@extra(vR2).append@extra(vi14).toString@extra(),vR3,vR4,vR5,vi6,vi7,vR8,vR13,vR18);   
        vi14++;   
        goto +B138;   [RRRRRiiRRRiRRiRiRR RRR R.... .........]
  +B256:   #2
        goto +B287;   [RRRRRiiRRRiRRiRiRR RRR ..... .........]
  +H259<caught exception>:   #1 reference
        vR17 = <caught exception>;    
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR ..... i........][ RRR ..... iR.......]
        b0.println(b1.append@extra("Domains created: ").append@extra(vi14).toString@extra());   [RRRRRiiRRRiRRiRiRRi RRR ii... RR.......] 
  +B287:   #1
        vi17 = 0;    
  +B290:   #1
        if vi17>=vi14 goto B322;   
  +B297:   #1
        if vR12[vi17].isTerminated()!=0 goto B316;   
  +B310:   #1
        yield@special();   [RRRRRiiRRRiRRiRiiR RRR ..... .........]
        goto +B297;   [RRRRRiiRRRiRRiRiiR RRR ..... .........]
  +B316:   #1
        vi17++;   
        goto +B290;   [RRRRRiiRRRiRRiRiiR RRR ..... .........]
  +B322:   #1
        vi17 = vR15.getTimeInMillis();    [RRRRRiiRRRiRRiRiiR RRR ..... R........] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR ..... i........][ RRR ..... iR.......]
        b0.println(b1.append@extra("Time to create ").append@extra(vi14).append@extra(" domains (millisec): ").append@extra((vi17-vi16)).toString@extra());   [RRRRRiiRRRiRRiRiiR RRR iiii... RR.......] 
        vR18 = vR9.getCurrentDomain();    [RRRRRiiRRRiRRiRiiR RRR iiii... R........] 
        vR9.gc(vR18);   [RRRRRiiRRRiRRiRiiR RRR iiii... RR.......] 
        vi19 = vR10.getTotalFreeMemory();    [RRRRRiiRRRiRRiRiiR RRR iiii... R........] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR iiii... i........][ RRR iiii... iR.......]
        b0.println(b1.append@extra("end ").append@extra(vi19).toString@extra());   [RRRRRiiRRRiRRiRiiRi RRR iiiiii. RR.......] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR iiiiii. i........][ RRR iiiiii. iR.......]
        b0.println(b1.append@extra("diff: ").append@extra((vi11-vi19)).toString@extra());   [RRRRRiiRRRiRRiRiiRi RRR iiiiiiiii. RR.......] 
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
138 - 256 handler 259 type 130
 }
// Register: rd 47/47 wr 76 swaps 17 any 8 found 1 main
 
 method <clinit>()V {
  +START:   #1
        verbose = 0;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 <clinit>
}
