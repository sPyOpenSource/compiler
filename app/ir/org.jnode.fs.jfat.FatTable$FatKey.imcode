class org/jnode/fs/jfat/FatTable$FatKey {
 
 method <init>(Lorg/jnode/fs/jfat/FatTable;Ljava/lang/String;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.key = vR2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method getKey()Ljava/lang/String; {
  +START:   #1
        return vR0.key;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getKey
 
 method hashCode()I {
  +START:   #1
        return toIgnoreCase@special(vR0.key).hashCode@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 2 swaps 0 any 0 found 0 hashCode
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if (vR1 instanceof org/jnode/fs/jfat/FatTable$FatKey)==0 goto B24;   
  +B7:   #1
        vR2 = (org/jnode/fs/jfat/FatTable$FatKey)(vR1);    
        return compareIgnoreCase@special(vR0.key,vR2.getKey@special());   
  +B24:   #1
        if (vR1 instanceof java/lang/String)==0 goto B45;   
  +B31:   #1
        vR2 = (java/lang/String)(vR1);    
        return compareIgnoreCase@special(vR0.key,vR2);   
  +B45:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 10/10 wr 6 swaps 0 any 2 found 2 equals
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return vR0.key;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toString
 
 method <init>(Lorg/jnode/fs/jfat/FatTable;Ljava/lang/String;Lorg/jnode/fs/jfat/FatTable$1;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR2);   [   RRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
}
