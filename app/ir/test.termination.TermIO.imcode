class test/termination/TermIO {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        naming = getInitialNaming@special();   
        memMgr = (jx/zero/MemoryManager)(naming.lookup("MemoryManager"));   
        dm = (jx/zero/DomainManager)(naming.lookup("DomainManager"));   
        vi1 = memMgr.getTotalFreeMemory();    [ RRR?R ii. R.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR?R ii. i.][ RRR?R ii. iR]
        b0.println(b1.append@extra("Free memory before domain started: ").append@extra(vi1).toString@extra());   [i RRR?R iiii. RR.] 
        out.println("Starting test domain ...
");   [i RRR?R iiiii. RR.] 
        b0 = "BIO";    
        b1 = "test_fs.jll";    
        b2 = "test/fs/BioRAMDomain";    
        b4 = new java/lang/String()[1];    
        b4[0] = "BIOFS";   
        vR2 = createDomain@special(b0,b1,b2,2097152,b4);    [i RRR?R iiiii. RiRRR]
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR?R iiiii. i....][ RRR?R iiiii. iR...]
        b0.println(b1.append@extra("Free memory when domain running: ").append@extra(memMgr.getTotalFreeMemory()).toString@extra());   [iR RRR?R iiiiiiii. RR...] 
        vi3 = 0;    
  +B135:   #1
        if vi3>=1000 goto B151;   
  +B142:   #1
        yield@special();   [iRi RRR?R ......... .....]
        vi3++;   
        goto +B135;   [iRi RRR?R ......... .....]
  +B151:   #1
        dm.terminate(vR2);   [iRi RRR?R ......... RR...] 
  +B160:   #1
        if vR2.isTerminated()!=0 goto B175;   
  +B169:   #1
        yield@special();   [iRi RRR?R ......... .....]
        goto +B160;   [iRi RRR?R ......... .....]
  +B175:   #1
        vi3 = memMgr.getTotalFreeMemory();    [iRi RRR?R ......... R....] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR?R ......... i....][ RRR?R ......... iR...]
        b0.println(b1.append@extra("Free memory when domain terminated: ").append@extra(vi3).toString@extra());   [iRi RRR?R ii....... RR...] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR?R ii....... i....][ RRR?R ii....... iR...]
        b0.println(b1.append@extra("    Difference: ").append@extra((vi1-vi3)).toString@extra());   [iRi RRR?R iiiii.... RR...] 
        return;   
  +END:   #1
 }
// Register: rd 23/23 wr 50 swaps 13 any 2 found 0 main
}
