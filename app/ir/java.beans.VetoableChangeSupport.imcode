class java/beans/VetoableChangeSupport {
 
 method writeObject(Ljava/io/ObjectOutputStream;)V {
  +START:   #1
        b0 = vR0;    
        if vR0.propertyListeners.isEmpty()==0 goto B15;   
  +B11b0:   #1 reference
        b1 = 0;    
        goto +B19b0b1;   [ RR  .]
  +B15b0:   #1 reference
        b1 = vR0.propertyListeners;    
  +B19b0b1:   #1 reference reference
        b0.children = b1;   
        vR1.defaultWriteObject();   [ RR  R] 
        vR2 = vR0.listeners.elements@extra();    [ RR  R] 
  +B34:   #1
        if vR2.hasMoreElements()==0 goto B68;   
  +B43:   #1
        vR3 = (java/beans/VetoableChangeListener)(vR2.nextElement());    
        if (vR3 instanceof java/io/Serializable)==0 goto B65;   
  +B60:   #1
        vR1.writeObject@extra(vR3);   [RR RR . RR] 
  +B65:   #1
        goto +B34;   [RR RR . ..]
  +B68:   #1
        vR1.writeObject@extra(0);   [RR RR . RR] 
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 6 swaps 0 any 1 found 0 writeObject
 
 method readObject(Ljava/io/ObjectInputStream;)V {
  +START:   #1
        vR1.defaultReadObject();   [ RR  R] 
        b0 = vR0;    
        if vR0.children!=null goto B22;   
  +B12b0:   #1 reference
        b1 = new java/util/Hashtable();    [ RR  i][ RR  iR]
        goto +B26b0b1;   [ RR  ..]
  +B22b0:   #1 reference
        b1 = vR0.children;    
  +B26b0b1:   #1 reference reference
        b0.propertyListeners = b1;   
  +B29:   #1
        b0 = (java/beans/VetoableChangeListener)(vR1.readObject());    
        vR2 = b0;    
        if b0==null goto B49;   
  +B41:   #1
        vR0.addVetoableChangeListener@this(vR2);   [R RR . RR] 
        goto +B29;   [R RR . ..]
  +B49:   #1
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 6 swaps 0 any 3 found 0 readObject
 
 method <init>(Ljava/lang/Object;)V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        b1 = new java/util/Hashtable();    [ ?R  i][ ?R  iR]
        vR0.propertyListeners = b1;   
        b1 = new java/util/Vector();    [ ?R  i.][ ?R  iR]
        vR0.listeners = b1;   
        vR0.vetoableChangeSupportSerializedDataVersion = 2;   
        vR0.source = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 2 swaps 0 any 0 found 0 <init>
 
 method addVetoableChangeListener(Ljava/beans/VetoableChangeListener;)V {
  +START:   #1
        vR0.listeners.addElement@extra(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 addVetoableChangeListener
 
 method addVetoableChangeListener(Ljava/lang/String;Ljava/beans/VetoableChangeListener;)V {
  +START:   #1
        b0 = vR0.propertyListeners;    
        vR3 = b0;    
        b0.enter();   
        vR4 = (java/util/Vector)(vR0.propertyListeners.get(vR1));    
  +B20:   #1
        vR4.addElement@extra(vR2);   [RR R . RR] 
  +B26:   #1
        goto +B57;   [RR R . ..]
  +H29<caught exception>:   #1 reference
        vR5 = <caught exception>;    
        vR4 = new java/util/Vector();    [ R . i.][ R . iR]
        vR4.addElement@extra(vR2);   [RRRR R . RR] 
        vR0.propertyListeners.put(vR1,vR4);   [RRRR R . RRR] 
  +B57:   #1
        vR3.leave();   
        goto +B69;   forward return[RR R . ...]
  +H62<caught exception>:   #2 reference
        vR6 = <caught exception>;    
        vR3.leave();   
  -B66:   #1
        throw vR6;   
  +B69:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
20 - 26 handler 29 type 83
7 - 59 handler 62 type 0
62 - 66 handler 62 type 0
 }
// Register: rd 8/8 wr 7 swaps 0 any 1 found 0 addVetoableChangeListener
 
 method removeVetoableChangeListener(Ljava/beans/VetoableChangeListener;)V {
  +START:   #1
        vR0.listeners.removeElement@extra(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 removeVetoableChangeListener
 
 method removeVetoableChangeListener(Ljava/lang/String;Ljava/beans/VetoableChangeListener;)V {
  +START:   #1
        b0 = vR0.propertyListeners;    
        vR3 = b0;    
        b0.enter();   
        vR4 = (java/util/Vector)(vR0.propertyListeners.get(vR1));    
  +B20:   #1
        vR4.removeElement@extra(vR2);   [RR R . RR] 
        if vR4.size@extra()!=0 goto B44;   
  +B35:   #1
        vR0.propertyListeners.remove(vR1);   [RR R . RR] 
  +B44:   #2
        goto +B49;   [RR R . ..]
  +H47<caught exception>:   #1 reference
        vR5 = <caught exception>;    
  +B49:   #1
        vR3.leave();   
        goto +B61;   forward return[RR R . ..]
  +H54<caught exception>:   #2 reference
        vR6 = <caught exception>;    
        vR3.leave();   
  -B58:   #1
        throw vR6;   
  +B61:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
20 - 44 handler 47 type 83
7 - 51 handler 54 type 0
54 - 58 handler 54 type 0
 }
// Register: rd 8/8 wr 6 swaps 0 any 1 found 0 removeVetoableChangeListener
 
 method fireVetoableChange(Ljava/beans/PropertyChangeEvent;)V {
  +START:   #1
        vi2 = 0;    
  +B2:   #2
        if vi2>=vR0.listeners.size@extra() goto B36;   
  +B13:   #1
        (java/beans/VetoableChangeListener)(vR0.listeners.elementAt(vi2)).vetoableChange(vR1);   [i R . RR.] 
        vi2++;   
        goto +B2;   [i R . ...]
  +B36:   #2
        goto +B106;   [i R . ...]
  +H39<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        vR4 = new java/beans/PropertyChangeEvent(vR1.getSource(),vR1.getPropertyName(),vR1.getNewValue(),vR1.getOldValue());    [ R . i..][ R . iRRRRR]
        vi5 = 0;    
  +B68:   #1
        if vi5>=vi2 goto B104;   
  +B74:   #1
        (java/beans/VetoableChangeListener)(vR0.listeners.elementAt(vi5)).vetoableChange(vR4);   [iRRiR R . RR....] 
  +B93:   #1
        goto +B98;   [iRRiR R . ......]
  +H96<caught exception>:   #1 reference
        vR6 = <caught exception>;    
  +B98:   #1
        vi5++;   
        goto +B68;   [iR?iR R . ......]
  -B104:   #1
        throw vR3;   
  +B106:   #1
        vR3 = (java/util/Vector)(vR0.propertyListeners.get(vR1.getPropertyName()));    
        if vR3==null goto B267;   
  +B125:   #1
        vi2 = 0;    
  +B127:   #1
        if vi2>=vR3.size@extra() goto B155;   
  +B135:   #1
        (java/beans/VetoableChangeListener)(vR3.elementAt(vi2)).vetoableChange(vR1);   [iR R .. RR....] 
        vi2++;   
        goto +B127;   [iR R .. ......]
  +B155:   #2
        goto +B267;   forward return[iR R .. ......]
  +H158<caught exception>:   #1 reference
        vR4 = <caught exception>;    
        vR5 = new java/beans/PropertyChangeEvent(vR1.getSource(),vR1.getPropertyName(),vR1.getNewValue(),vR1.getOldValue());    [ R .. i.....][ R .. iRRRRR]
        vi6 = 0;    
  +B188:   #1
        if vi6>=vR0.listeners.size@extra() goto B228;   
  +B200:   #1
        (java/beans/VetoableChangeListener)(vR0.listeners.elementAt(vi2)).vetoableChange(vR1);   [iRRRi R .. RR....] 
  +B217:   #1
        goto +B222;   [iRRRi R .. ......]
  +H220<caught exception>:   #1 reference
        vR7 = <caught exception>;    
  +B222:   #1
        vi6++;   
        goto +B188;   [iRRRi R .. ......]
  +B228:   #1
        vi6 = 0;    
  +B231:   #1
        if vi6>=vi2 goto B264;   
  +B237:   #1
        (java/beans/VetoableChangeListener)(vR3.elementAt(vi6)).vetoableChange(vR5);   [iRRRi R .. RR....] 
  +B253:   #1
        goto +B258;   [iRRRi R .. ......]
  +H256<caught exception>:   #1 reference
        vR7 = <caught exception>;    
  +B258:   #1
        vi6++;   
        goto +B231;   [iRRRi R .. ......]
  -B264:   #1
        throw vR4;   
  +B267:   #2
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
2 - 36 handler 39 type 108
74 - 93 handler 96 type 108
125 - 155 handler 158 type 108
200 - 217 handler 220 type 108
237 - 253 handler 256 type 108
 }
// Register: rd 44/44 wr 32 swaps 1 any 11 found 3 fireVetoableChange
 
 method fireVetoableChange(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V {
  +START:   #1
        b1 = new java/beans/PropertyChangeEvent(vR0.source,vR1,vR2,vR3);    [ ?R  i][ ?R . iRRRRR]
        vR0.fireVetoableChange@this(b1);   [ ?R . RR....] 
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 0 found 0 fireVetoableChange
 
 method fireVetoableChange(Ljava/lang/String;ZZ)V {
  +START:   #1
        b1 = new java/beans/PropertyChangeEvent;    
        b2 = b1;    
        b3 = vR0.source;    
        b5 = new java/lang/Boolean(vi2);    [ ?RRR?RR  i][ ?RRR?RR . iiR]
        b6 = new java/lang/Boolean(vi3);    [ ?RRR?RR . i..][ ?RRR?RR . iiR]
        b2.<init>@special(b3,vR1,b5,b6);   [ ?RRR?RR . RRRRR] 
        vR0.fireVetoableChange@this(b1);   [ ?RRR?RR . RR...] 
        return;   
  +END:   #1
 }
// Register: rd 12/12 wr 7 swaps 0 any 1 found 0 fireVetoableChange
 
 method fireVetoableChange(Ljava/lang/String;II)V {
  +START:   #1
        b1 = new java/beans/PropertyChangeEvent;    
        b2 = b1;    
        b3 = vR0.source;    
        b5 = new java/lang/Integer(vi2);    [ ?RRR?RR  i][ ?RRR?RR . iiR]
        b6 = new java/lang/Integer(vi3);    [ ?RRR?RR . i..][ ?RRR?RR . iiR]
        b2.<init>@special(b3,vR1,b5,b6);   [ ?RRR?RR . RRRRR] 
        vR0.fireVetoableChange@this(b1);   [ ?RRR?RR . RR...] 
        return;   
  +END:   #1
 }
// Register: rd 12/12 wr 7 swaps 0 any 1 found 0 fireVetoableChange
 
 method hasListeners(Ljava/lang/String;)Z {
  +START:   #1
        if vR0.listeners.size@extra()> 0 goto B21;   
  +B10:   #1
        if vR0.propertyListeners.get(vR1)==null goto B25;   
  +B21:   #1
        b0 = 1;    
        goto +B26b0;   forward return[ i  ..]
  +B25:   #1
        b0 = 0;    
  +B26b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 hasListeners
}
