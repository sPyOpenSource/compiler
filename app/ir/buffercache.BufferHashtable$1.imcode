class buffercache/BufferHashtable$1 {
 
 method <init>(Lbuffercache/BufferHashtable;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.offset = vR0.init@this();   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method init()I {
  +START:   #1
        vR0.offset = 0;   
  +B5:   #1
        vR0.offset = (vR0.offset+1);   
        if vR0.offset>=vR0.this$0.hashTable.length goto B45;   
  +B30:   #1
        if vR0.this$0.hashTable[vR0.offset]==null goto B5;   
  +B45:   #1
        if vR0.offset>=vR0.this$0.hashTable.length goto B76;   
  +B60:   #1
        vR0.recent = vR0.this$0.hashTable[vR0.offset];   
  +B76:   #1
        return vR0.offset;   
  +END:   #1
 }
// Register: rd 13/13 wr 0 swaps 0 any 0 found 0 init
 
 method advance()V {
  +START:   #1
        if vR0.recent.hashtable_nextInChain==null goto B21;   
  +B10:   #1
        vR0.recent = vR0.recent.hashtable_nextInChain;   
  +B21:   #2
        vR0.offset = (vR0.offset+1);   
        if vR0.offset>=vR0.this$0.hashTable.length goto B61;   
  +B46:   #1
        if vR0.this$0.hashTable[vR0.offset]==null goto B21;   
  +B61:   #1
        if vR0.offset>=vR0.this$0.hashTable.length goto B95;   
  +B76:   #1
        vR0.recent = vR0.this$0.hashTable[vR0.offset];   
        goto +B100;   forward return[   ]
  +B95:   #1
        vR0.recent = 0;   
  +B100:   #1
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 0 swaps 0 any 0 found 0 advance
 
 method hasNext()Z {
  +START:   #1
        if vR0.recent==null goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  ]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 hasNext
 
 method next()Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.recent;    
        vR0.advance@this();   [R   R] 
        return vR1;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 next
}
