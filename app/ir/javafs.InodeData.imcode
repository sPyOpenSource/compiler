class javafs/InodeData {
 
 method <init>(Ljx/fs/buffercache/BufferHead;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.init@this(vR1,vi2);   [   iRR] 
        vR0.length = 128;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method i_mode()S {
  +START:   #1
        return vR0.readShort@this(0);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_mode
 
 method i_mode(S)V {
  +START:   #1
        vR0.writeShort@this(0,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_mode
 
 method i_uid()S {
  +START:   #1
        return vR0.readShort@this(2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_uid
 
 method i_uid(S)V {
  +START:   #1
        vR0.writeShort@this(2,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_uid
 
 method i_size()I {
  +START:   #1
        return vR0.readInt@this(4);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_size
 
 method i_size(I)V {
  +START:   #1
        vR0.writeInt@this(4,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_size
 
 method i_atime()I {
  +START:   #1
        return vR0.readTime@this(8);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_atime
 
 method i_atime(I)V {
  +START:   #1
        vR0.memory.setLittleEndian32((vR0.offset+8),vi1);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 i_atime
 
 method i_ctime()I {
  +START:   #1
        return vR0.readTime@this(12);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_ctime
 
 method i_ctime(I)V {
  +START:   #1
        vR0.writeTime@this(12,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_ctime
 
 method i_mtime()I {
  +START:   #1
        return vR0.readTime@this(16);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_mtime
 
 method i_mtime(I)V {
  +START:   #1
        vR0.writeTime@this(16,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_mtime
 
 method i_dtime()I {
  +START:   #1
        return vR0.readTime@this(20);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_dtime
 
 method i_dtime(I)V {
  +START:   #1
        vR0.writeTime@this(20,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_dtime
 
 method i_gid()S {
  +START:   #1
        return vR0.readShort@this(24);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_gid
 
 method i_gid(S)V {
  +START:   #1
        vR0.writeShort@this(24,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_gid
 
 method i_links_count()S {
  +START:   #1
        return vR0.readShort@this(26);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_links_count
 
 method i_links_count(S)V {
  +START:   #1
        vR0.writeShort@this(26,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_links_count
 
 method i_blocks()I {
  +START:   #1
        return vR0.readInt@this(28);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_blocks
 
 method i_blocks(I)V {
  +START:   #1
        vR0.writeInt@this(28,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_blocks
 
 method i_flags()I {
  +START:   #1
        return vR0.readInt@this(32);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_flags
 
 method i_flags(I)V {
  +START:   #1
        vR0.writeInt@this(32,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_flags
 
 method i_block(I)I {
  +START:   #1
        if vi1< 0 goto B21;   
  +B4:   #1
        if vi1>=15 goto B21;   
  +B10:   #1
        return vR0.readInt@this(((vi1*4)+40));   
  -B21:   #2
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 1 any 2 found 0 i_block
 
 method i_block(II)V {
  +START:   #1
        if vi1< 0 goto B24;   
  +B4:   #1
        if vi1>=15 goto B24;   
  +B10:   #1
        vR0.writeInt@this(((vi1*4)+40),vi2);   [ R i iiR] 
        goto +B32;   forward return[ R i ...]
  -B24:   #2
        throw new java/lang/Error();   
  +B32:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 1 any 2 found 0 i_block
 
 method i_symlink(I)Ljava/lang/String; {
  +START:   #1
        return vR0.readString@this(40,vi1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_symlink
 
 method i_symlink(Ljava/lang/String;)V {
  +START:   #1
        vR0.writeString@this(40,vR1,vR1.length@extra());   [  i iRiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 i_symlink
 
 method i_version()I {
  +START:   #1
        return vR0.readInt@this(100);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_version
 
 method i_version(I)V {
  +START:   #1
        vR0.writeInt@this(100,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_version
 
 method i_file_acl()I {
  +START:   #1
        return vR0.readInt@this(104);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_file_acl
 
 method i_file_acl(I)V {
  +START:   #1
        vR0.writeInt@this(104,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_file_acl
 
 method i_dir_acl()I {
  +START:   #1
        return vR0.readInt@this(108);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_dir_acl
 
 method i_dir_acl(I)V {
  +START:   #1
        vR0.writeInt@this(108,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_dir_acl
 
 method i_faddr()I {
  +START:   #1
        return vR0.readInt@this(112);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_faddr
 
 method i_faddr(I)V {
  +START:   #1
        vR0.writeInt@this(112,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 i_faddr
 
 method l_i_frag()B {
  +START:   #1
        return vR0.readByte@this(116);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 l_i_frag
 
 method l_i_frag(B)V {
  +START:   #1
        vR0.writeByte@this(116,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 l_i_frag
 
 method l_i_fsize()B {
  +START:   #1
        return vR0.readByte@this(117);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 l_i_fsize
 
 method l_i_fsize(B)V {
  +START:   #1
        vR0.writeByte@this(117,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 l_i_fsize
}
