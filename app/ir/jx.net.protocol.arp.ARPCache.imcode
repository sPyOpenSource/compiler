class jx/net/protocol/arp/ARPCache {
 
 method <init>(Ljx/net/protocol/arp/ARP;Ljx/timer/TimerManager;)V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        b1 = new byte[4];    
        b1[0] = -1;   
        b1[1] = -1;   
        b1[2] = -1;   
        b1[3] = -1;   
        vR0.broadcastIP = b1;   
        b1 = new byte[6];    
        b1[0] = -1;   
        b1[1] = -1;   
        b1[2] = -1;   
        b1[3] = -1;   
        b1[4] = -1;   
        b1[5] = -1;   
        vR0.broadcastETH = b1;   
        vR0.LOOKUPTIME = 10000;   
        vR0.timerManager = vR2;   
        b1 = new java/util/Vector();    [ ?R  i.][ ?R  iR]
        vR0.ethers = b1;   
        b1 = new java/util/Vector();    [ ?R  i.][ ?R  iR]
        vR0.ips = b1;   
        vR0.arp = vR1;   
        vR0.init@special();   [ ?R  R.] 
        return;   
  +END:   #1
 }
// Register: rd 25/25 wr 4 swaps 0 any 0 found 0 <init>
 
 method add([B[B)V {
  +START:   #1
        if vR0.ethers.contains@extra(vR1)!=0 goto B38;   
  +B11:   #1
        if vR0.ips.contains@extra(vR2)!=0 goto B38;   
  +B22:   #1
        vR0.ethers.addElement@extra(vR1);   [   RR] 
        vR0.ips.addElement@extra(vR2);   [   RR] 
  +B38:   #2
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 add
 
 method clearAll()V {
  +START:   #1
        vR0.ethers.removeAllElements@extra();   [   R] 
        vR0.ips.removeAllElements@extra();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 clearAll
 
 method lookup(Ljx/net/IPAddress;)[B {
  +START:   #1
        return vR0.lookup@this(vR1.getBytes());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 lookup
 
 method lookup([B)[B {
  +START:   #1
        b0 = vR0.scan@special(vR1);    [ R  RR] 
        vR2 = b0;    
        if b0==null goto B12;   
  +B10:   #1
        return vR2;   
  +B12:   #1
        vR0.arp.sendQuery(vR1);   [R R  RR] 
        vi3 = vR0.timerManager.getCurrentTime();    [R R  R.] 
        vi4 = (vi3+(10000000/vR0.timerManager.getTimeBaseInMicros()));    
  +B46:   #1
        if vR0.timerManager.getCurrentTime()>=vi4 goto B78;   
  +B60:   #1
        vR2 = vR0.scan@special(vR1);    [Rii R  RR] 
        if vR2==null goto B72;   
  +B70:   #1
        return vR2;   
  +B72:   #1
        yield@special();   [Rii R  ..]
        goto +B46;   [Rii R  ..]
  -B78:   #1
        throw new jx/net/UnknownAddressException();   
  +END:   #1
 }
// Register: rd 14/14 wr 5 swaps 0 any 4 found 1 lookup
 
 method scan([B)[B {
  +START:   #1
        vi2 = 0;    
  +B2:   #1
        if vi2>=vR0.ips.size@extra() goto B50;   
  +B13:   #1
        if vR0.equalIP@special(([B)(vR0.ips.elementAt(vi2)),vR1)==0 goto B44;   
  +B32:   #1
        return ([B)(vR0.ethers.elementAt(vi2));   
  +B44:   #1
        vi2++;   
        goto +B2;   [i  . ...]
  +B50:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 9/9 wr 5 swaps 1 any 2 found 1 scan
 
 method equalIP([B[B)Z {
  +START:   #1
        vi3 = 0;    
  +B2:   #1
        if vi3>=4 goto B24;   
  +B7:   #1
        if vR1[vi3]==vR2[vi3] goto B18;   
  +B16:   #1
        return 0;   
  +B18:   #1
        vi3++;   
        goto +B2;   [i   ]
  +B24:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 2 found 0 equalIP
 
 method init()V {
  +START:   #1
        vR0.add@this(vR0.broadcastETH,vR0.broadcastIP);   [ ?RR iR RRR] 
        b1 = new byte[6];    
        b1[0] = -108;   
        b1[1] = 83;   
        b1[2] = 48;   
        b1[3] = -57;   
        b1[4] = -8;   
        b1[5] = 3;   
        b2 = new byte[4];    
        b2[0] = -64;   
        b2[1] = -88;   
        b2[2] = 1;   
        b2[3] = 14;   
        vR0.add@this(b1,b2);   [ ?RR iR RRR] 
        b1 = new byte[6];    
        b1[0] = -108;   
        b1[1] = 83;   
        b1[2] = 48;   
        b1[3] = -57;   
        b1[4] = -8;   
        b1[5] = 3;   
        b2 = new byte[4];    
        b2[0] = -64;   
        b2[1] = -88;   
        b2[2] = 90;   
        b2[3] = -38;   
        vR0.add@this(b1,b2);   [ ?RR iR RRR] 
        return;   
  +END:   #1
 }
// Register: rd 29/29 wr 6 swaps 1 any 0 found 0 init
}
