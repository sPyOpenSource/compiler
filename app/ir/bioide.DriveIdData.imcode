class bioide/DriveIdData {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.b_data = memoryManager.alloc(512);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 <init>
 
 method config()S {
  +START:   #1
        return vR0.b_data.get16(0);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 config
 
 method cyls()S {
  +START:   #1
        return vR0.b_data.get16(1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 cyls
 
 method cyls(S)V {
  +START:   #1
        vR0.b_data.set16(1,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 cyls
 
 method heads()S {
  +START:   #1
        return vR0.b_data.get16(3);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 heads
 
 method sectors()S {
  +START:   #1
        return vR0.b_data.get16(6);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 sectors
 
 method model()Ljava/lang/String; {
  +START:   #1
        return readString@special(vR0.b_data,54,40);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 model
 
 method model(Ljava/lang/String;)V {
  +START:   #1
        writeString@special(vR0.b_data,54,vR1,40);   [  R iRiR]
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 model
 
 method capability()B {
  +START:   #1
        return vR0.b_data.get8(99);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 capability
 
 method field_valid()S {
  +START:   #1
        return vR0.b_data.get16(53);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 field_valid
 
 method cur_cyls()S {
  +START:   #1
        return vR0.b_data.get16(54);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 cur_cyls
 
 method cur_heads()S {
  +START:   #1
        return vR0.b_data.get16(55);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 cur_heads
 
 method cur_sectors()S {
  +START:   #1
        return vR0.b_data.get16(56);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 cur_sectors
 
 method lba_capacity()I {
  +START:   #1
        return vR0.b_data.get32(30);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lba_capacity
 
 method lba_capacity(I)V {
  +START:   #1
        vR0.b_data.set32(30,vi1);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lba_capacity
 
 method dma_mword()S {
  +START:   #1
        return vR0.b_data.get16(63);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 dma_mword
 
 method eide_pio_modes()S {
  +START:   #1
        return vR0.b_data.get16(64);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 eide_pio_modes
 
 method dma_ultra()S {
  +START:   #1
        return vR0.b_data.get16(86);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 dma_ultra
 
 method getData()Ljx/zero/Memory; {
  +START:   #1
        return vR0.b_data;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getData
}
