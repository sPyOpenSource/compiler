class bioide/Partitions {
 
 method <init>(Lbioide/IDEDeviceImpl;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.dev = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method getDevice(III)I {
  +START:   #1
        return (((vi1 & 1) | ((vi2 & 1) << 1)) | ((vi3 & 15) << 4));   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 getDevice
 
 method getController(I)I {
  +START:   #1
        return (vi1 & 1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getController
 
 method getUnit(I)I {
  +START:   #1
        return (vi1 & 2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getUnit
 
 method getPartition(I)I {
  +START:   #1
        return ((vi1 >> 4) & 15);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPartition
}
