class jx/net/IPDataImpl {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method Size()I {
  +START:   #1
        return vR0.size;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 Size
 
 method getOffset()I {
  +START:   #1
        return vR0.offset;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getOffset
 
 method getMemory()Ljx/zero/Memory; {
  +START:   #1
        return vR0.mem;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMemory
 
 method setMemory(Ljx/zero/Memory;)V {
  +START:   #1
        vR0.mem = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setMemory
 
 method getSourceAddress()Ljx/net/IPAddress; {
  +START:   #1
        return vR0.sourceAddress;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getSourceAddress
 
 method setOffset(I)V {
  +START:   #1
        vR0.offset = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setOffset
 
 method getDestinationAddress()Ljx/net/IPAddress; {
  +START:   #1
        return vR0.destinationAddress;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDestinationAddress
 
 method setSourceAddress(Ljx/net/IPAddress;)V {
  +START:   #1
        vR0.sourceAddress = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setSourceAddress
 
 method setDestinationAddress(Ljx/net/IPAddress;)V {
  +START:   #1
        vR0.destinationAddress = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setDestinationAddress
 
 method setSize(I)V {
  +START:   #1
        vR0.size = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setSize
}
