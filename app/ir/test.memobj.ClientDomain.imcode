class test/memobj/ClientDomain {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method gcMem(Ltest/memobj/MemServer;)V {
  +START:   #1
        vi2 = 0;    
  +B2:   #1
        if vi2>=10 goto B21;   
  +B8:   #1
        vR1 = vR0.getMemory();    [?i   R] 
        vi2++;   
        goto +B2;   [Ri   .]
  +B21:   #1
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 3 swaps 0 any 2 found 0 gcMem
 
 method init(Ljx/zero/Naming;[Ljava/lang/String;)V {
  +START:   #1
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream((jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0")));    [ RRR  i][ RRR .i. iRR]
        b1.<init>@special(b2);   [ RRR .i. RR.] 
        out = b0;   
        vR2 = (jx/zero/DomainManager)(vR0.lookup("DomainManager"));    
        vR3 = (test/memobj/MemServer)(waitUntilPortalAvailable@special(vR0,"MemServer"));    
        m = vR3.getMemory();   
  +B59:   #1
        gcMem@special(vR3);   [RR RRR .... R..]
        vR2.gc(vR2.getCurrentDomain());   [RR RRR i... RR.] 
        vR3.gc();   [RR RRR i... R..] 
        goto +B59;   [RR RRR i... ...]
  +END:   #1
 }
// Register: rd 16/16 wr 14 swaps 3 any 1 found 1 init
}
