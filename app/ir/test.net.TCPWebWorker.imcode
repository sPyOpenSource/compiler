class test/net/TCPWebWorker {
 
 method init(Ljx/zero/Naming;[Ljava/lang/String;[Ljava/lang/Object;)V {
  +START:   #1
        b0 = new jx/zero/debug/DebugPrintStream;    
        b1 = b0;    
        b2 = new jx/zero/debug/DebugOutputStream((jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0")));    [ RRR  i][ RRR .i. iRR]
        b1.<init>@special(b2);   [ RRR .i. RR.] 
        out = b0;   
        vR3 = (java/net/Socket)(vR2[0]);    
        processRequest@special(vR3,(jx/fs/FS)(vR2[1]));   [R RRR Ri. RR.]
        vR4 = (jx/zero/DomainManager)(vR0.lookup("DomainManager"));    
        vR4.terminateCaller();   [RR RRR Rii. R..] 
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 13 swaps 2 any 1 found 1 init
 
 method processRequest(Ljava/net/Socket;Ljx/fs/FS;)V {
  +START:   #1
        b0 = new test/net/TCPWebWorker(vR0,vR1);    [ R  i][ R . iRRR]
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 processRequest
 
 method <init>(Ljava/net/Socket;Ljx/fs/FS;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        vR0.method = 0;   
        vR0.contentsLength = -1;   
        vR0.fs = vR2;   
        vR0.memoryManager = (jx/zero/MemoryManager)(getInitialNaming@special().lookup("MemoryManager"));   
        vR0.buffer1 = vR0.memoryManager.alloc(4096);   
        vR0.buffer2 = vR0.memoryManager.alloc(4096);   
        vR3 = vR1.getOutputStream();    [ RR i. R.] 
        vR4 = new java/io/DataInputStream(vR1.getInputStream());    [ RR i. i.][ RR i. iRR]
        vR5 = vR0.parse@this(vR4);    [RR RR i. RR.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR i. i..][ RR i. iR.]
        b0.println(b1.append@extra("HTTPServer: GET file ").append@extra(vR5).toString@extra());   [RRR RR iii. RR.] 
        vR6 = vR5;    
        vi7 = -1;    
        lswitch (vR6.hashCode@extra()) { 
           -1195900252:B168
           -1039014607:B184
           760363746:B200
           ::B213
        };   
  +B168:   #1
        if vR6.equals@extra("stream.exe")==0 goto B213;   
  +B178:   #1
        vi7 = 0;    
        goto +B213;   [RRRRiRi RR .... ...]
  +B184:   #1
        if vR6.equals@extra("dummy.html")==0 goto B213;   
  +B194:   #1
        vi7 = 1;    
        goto +B213;   [RRRRiRi RR .... ...]
  +B200:   #1
        if vR6.equals@extra("mini.html")==0 goto B213;   
  +B210:   #1
        vi7 = 2;    
  +B213:   #6
        tswitch (vi7) B240 B287 B318 : B345;   
  +B240:   #1
        vR8 = new byte[1024];    
        vR3.write(constructHeader@special(vR5,1048576).getBytes@extra());   [RRRRiR RR i... RR.] 
        vi9 = 0;    
  +B264:   #1
        if vi9>=1024 goto B284;   
  +B272:   #1
        vR3.write(vR8);   [RRRRiRi RR .... RR.] 
        vi9++;   
        goto +B264;   [RRRRiRi RR .... ...]
  +B284:   #1
        goto +B403;   [RRRRiRi RR .... ...]
  +B287:   #1
        vR8 = new byte[1024];    
        vR3.write(constructHeader@special(vR5,1024).getBytes@extra());   [RRRRiRi RR i... RR.] 
        vR3.write(vR8);   [RRRRiRi RR i... RR.] 
        goto +B403;   [RRRRiRi RR i... ...]
  +B318:   #1
        vR8 = new byte[1];    
        vR3.write(constructHeader@special(vR5,1).getBytes@extra());   [RRRRiRi RR i... RR.] 
        vR3.write(vR8);   [RRRRiRi RR i... RR.] 
        goto +B403;   [RRRRiRi RR i... ...]
  +B345:   #1
        b1 = new java/lang/StringBuilder();    [ RR .... i..][ RR .... iR.]
        vR8 = vR0.readFile@this(b1.append@extra("/").append@extra(vR5).toString@extra());    [RRRRi RR ii.. RR.] 
        vR3.write(constructHeader@special(vR5,vR8.length).getBytes@extra());   [RRRRiR RR iiii RR.] 
        vR3.write(vR8);   [RRRRiR RR iiii RR.] 
        out.println("HTTPServer: reply sent.");   [RRRRiR RR iiiii. RR.] 
        goto +B403;   [RRRRiR RR iiiii. ...]
  +B403:   #4
        vR3.flush();   [RRRRiR RR ...... R..] 
        vR1.close();   [RRRRiR RR ...... R..] 
        return;   
  +END:   #1
 }
// Register: rd 38/38 wr 40 swaps 13 any 4 found 0 <init>
 
 method readFile(Ljava/lang/String;)[B {
  +START:   #2
        vR2 = vR0.fs.lookup(vR1);    [ RR  RR] 
        vi3 = vR2.getLength();    [R RR  R.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i.][ RR  iR]
        b0.println(b1.append@extra("l: ").append@extra(vi3).toString@extra());   [Ri RR ii. RR.] 
        vR2.read(vR0.buffer1,0,vi3);   [Ri RR iii iiRR] 
        vR2.read(vR0.buffer2,1,vi3);   [Ri RR iiii iiRR] 
        vR4 = new byte[vi3];    
        vR0.buffer1.copyToByteArray(vR4,0,0,4096);   [RiR RR iiii iiiRR] 
        vR0.buffer2.copyToByteArray(vR4,4096,0,(vi3-4096));   [RiR RR iiiii iiiRR] 
        vi5 = 0;    
  +B113:   #1
        if vi5>=vi3 goto B137;   
  +B119:   #1
        out.print((char)vR4[vi5]);   [RiRi RR i.... bR...] 
        vi5++;   
        goto +B113;   [RiRi RR i.... .....]
  +B137:   #1
        b0 = vR4;    
  +B139b0:   #1 reference
        return b0;   
  +H140<caught exception>:   #1 reference
        vR2 = <caught exception>;    
        out.println(vR2.getMessage());   [RiRi RR i.... RR...] 
        return constructErrorHeader@special().getBytes@extra();   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 139 handler 140 type 194
 }
// Register: rd 20/20 wr 21 swaps 7 any 3 found 0 readFile
 
 method parse(Ljava/io/DataInputStream;)Ljava/lang/String; {
  +START:   #1
        vR2 = 0;    
  +B2:   #3
        b0 = vR1.readLine@extra();    [R RR  R] 
        vR3 = b0;    
        if b0.equals@extra("")!=0 goto B304;   
  +B16:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR . i.][ RR . iR]
        b0.println(b1.append@extra("REQ: ").append@extra(vR3).toString@extra());   [RR RR ii. RR.] 
        vR4 = new java/util/StringTokenizer(vR3," ");    [ RR ii. i..][ RR ii. iRRR]
        if vR4.hasMoreTokens()!=0 goto B64;   
  +B61:   #1
        goto +B2;   [RRR RR ... ....]
  +B64:   #1
        vR5 = vR4.nextToken();    [RRR RR ... R...] 
        vR6 = vR5;    
        vi7 = -1;    
        lswitch (vR6.hashCode@extra()) { 
           -1753454432:B148
           70454:B116
           2461856:B132
           ::B161
        };   
  +B116:   #1
        if vR6.equals@extra("GET")==0 goto B161;   
  +B126:   #1
        vi7 = 0;    
        goto +B161;   [RRRRRi RR ... ....]
  +B132:   #1
        if vR6.equals@extra("POST")==0 goto B161;   
  +B142:   #1
        vi7 = 1;    
        goto +B161;   [RRRRRi RR ... ....]
  +B148:   #1
        if vR6.equals@extra("Content-length:")==0 goto B161;   
  +B158:   #1
        vi7 = 2;    
  +B161:   #6
        tswitch (vi7) B188 B241 B286 : B301;   
  +B188:   #1
        vR0.method = 1;   
        vR2 = vR4.nextToken();    [RRRRRi RR ... R...] 
        if vR2.endsWith@extra("/")==0 goto B232;   
  +B208:   #1
        b0 = new java/lang/StringBuilder();    [ RR ... i...][ RR ... iR..]
        vR2 = b0.append@extra(vR2).append@extra(getProperty_DefaultFile@special()).toString@extra();    [RRRRRi RR .i. R...] [RRRRRi RR Ri. RR..] [RRRRRi RR RiR RRR.] 
        goto +B301;   [RRRRRi RR .i. ....]
  +B232:   #1
        vR2 = vR2.substring@extra(1);    [RRRRRi RR ... iR..] 
        goto +B301;   [RRRRRi RR ... ....]
  +B241:   #1
        vR0.method = 2;   
        vR2 = vR4.nextToken();    [RRRRRi RR ... R...] 
        vR2 = vR2.substring@extra(1);    [RRRRRi RR ... iR..] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ... i...][ RR ... iR..]
        b0.println(b1.append@extra("FILENAME: ").append@extra(vR2).toString@extra());   [RRRRRi RR ii. RR..] 
        goto +B301;   [RRRRRi RR ii. ....]
  +B286:   #1
        vR0.contentsLength = parseInt@special(vR4.nextToken());   
        goto +B301;   [RRRRRi RR R.. ....]
  +B301:   #5
        goto +B2;   [RRRRRi RR ... ....]
  +B304:   #2
        goto +B314;   forward return[RRRRRi RR ... ....]
  +H307<caught exception>:   #1 reference
        vR4 = <caught exception>;    
        vR4.printStackTrace();   [RRRRRi RR ... R...] 
  +B314:   #1
        return vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
2 - 304 handler 307 type 248
2 - 304 handler 307 type 250
 }
// Register: rd 29/29 wr 36 swaps 10 any 3 found 0 parse
 
 method constructHeader(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("HTTP/1.0 200 OK
Content-Length: ").append@extra(vi2).append@extra("
Content-Type: ").append@extra(vR1).append@extra("

").toString@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 9 swaps 3 any 0 found 0 constructHeader
 
 method constructHeader(Ljava/lang/String;I)Ljava/lang/String; {
  +START:   #1
        vR2 = vR0.substring@extra((vR0.lastIndexOf@extra(".")+1),vR0.length@extra());    [  iii iiR] 
        vR2 = getProperty_MimeTypes@special(vR2);    [R  iii R..]
        return constructHeader@special(vR0,vR2,vi1);   
  +END:   #1
 }
// Register: rd 4/4 wr 6 swaps 2 any 0 found 0 constructHeader
 
 method constructErrorHeader()Ljava/lang/String; {
  +START:   #1
        return "HTTP/1.0 404 File not found
Allow: GET
MIME-Version: 1.0
Server : JX HTTP Server


 <H1>404 File not Found</H1>
";   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 constructErrorHeader
 
 method getProperty_DefaultFile()Ljava/lang/String; {
  +START:   #1
        return "index.html";   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getProperty_DefaultFile
 
 method getProperty_MimeTypes(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        if vR0.equals@extra("html")==0 goto B14;   
  +B10:   #1
        return "text/html";   
  +B14:   #1
        if vR0.equals@extra("htm")==0 goto B28;   
  +B24:   #1
        return "text/html";   
  +B28:   #1
        return vR0;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 2 any 0 found 0 getProperty_MimeTypes
}
