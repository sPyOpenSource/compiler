class java/util/AbstractSequentialList {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method add(ILjava/lang/Object;)V {
  +START:   #1
        vR3 = vR0.listIterator@this(vi1);    [   iR] 
        vR3.add(vR2);   [R   RR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 add
 
 method addAll(ILjava/util/Collection;)Z {
  +START:   #1
        vi3 = 0;    
        vi4 = 0;    
        vR5 = vR0.listIterator@this(vi1);    [ii i  iR] 
        if vi4<=0 goto B21;   
  +B17:   #1
        b0 = 1;    
        goto +B22b0;   forward return[iiR i  ..]
  +B21:   #1
        b0 = 0;    
  +B22b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 4 swaps 0 any 1 found 0 addAll
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return vR0.listIterator@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 iterator
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        vR3 = vR0.listIterator@this(vi1);    [ RRR  iR] 
        if vi1< 0 goto B18;   
  +B10:   #1
        if vi1<=vR0.size@this() goto B57;   
  -B18:   #1
        b0 = new java/lang/IndexOutOfBoundsException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i.][ RRR  iR]
        b1.<init>@special(b2.append@extra("Index: ").append@extra(vi1).append@extra(", Size:").append@extra(vR0.size@this()).toString@extra());   [R RRR iiii... RR...] 
        throw b0;   
  +B57:   #1
        vR4 = vR3.next();    [R RRR ....... R....] 
        vR3.set(vR2);   [RR RRR ....... RR...] 
        return vR4;   
  +END:   #1
 }
// Register: rd 13/13 wr 13 swaps 4 any 3 found 1 set
}
