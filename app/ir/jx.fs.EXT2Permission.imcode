class jx/fs/EXT2Permission {
 
 method <init>(III)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.setMode@this(vi1,vi2,vi3);   [   iiiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.setMode@this(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method addPermission(II)V {
  +START:   #1
        vR0.mode = (vR0.mode | ((vi2 & 7) << (vi1 & 7)));   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 addPermission
 
 method delPermission(II)V {
  -START:   #1
        throw new java/lang/Error("not impl.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 delPermission
 
 method getPermission(I)I {
  +START:   #1
        return ((vR0.mode >> vi1) & 7);   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 getPermission
 
 method setMode(III)V {
  +START:   #1
        vR0.mode = (((vi3 & 7) | ((vi2 & 7) << 3)) | ((vi1 & 7) << 6));   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 setMode
 
 method setMode(I)V {
  +START:   #1
        vR0.mode = (vi1 & 511);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setMode
 
 method getMode()I {
  +START:   #1
        return vR0.mode;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMode
}
