class jx/net/protocol/udp/UDPFormat {
 
 method <init>(Ljx/zero/Memory;)V {
  +START:   #1
        vR0.<init>@special(vR1,34);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljx/zero/Memory;I)V {
  +START:   #1
        vR0.<init>@special(vR1,vi2);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method insertSourcePort(I)V {
  +START:   #1
        vR0.writeShort@this(0,(short)vi1);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 insertSourcePort
 
 method insertDestPort(I)V {
  +START:   #1
        vR0.writeShort@this(2,(short)vi1);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 insertDestPort
 
 method insertLength(I)V {
  +START:   #1
        vR0.writeShort@this(4,(short)vi1);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 insertLength
 
 method insertChecksum(I)V {
  +START:   #1
        vR0.writeShort@this(6,(short)vi1);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 insertChecksum
 
 method getSourcePort()I {
  +START:   #1
        return vR0.readUnsignedShort@this(0);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getSourcePort
 
 method getDestPort()I {
  +START:   #1
        return vR0.readUnsignedShort@this(2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDestPort
 
 method getLength()I {
  +START:   #1
        return vR0.readUnsignedShort@this(4);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getLength
 
 method getChecksum()I {
  +START:   #1
        return vR0.readUnsignedShort@this(6);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getChecksum
 
 method length()I {
  +START:   #1
        return 8;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 length
 
 method requiresSpace()I {
  +START:   #1
        return 8;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 requiresSpace
 
 method dump()V {
  +START:   #1
        out.println("UDP-Packet:");   [ RR i. RR] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR i. i.][ RR i. iR]
        b0.println(b1.append@extra("   SourcePort: ").append@extra(vR0.getSourcePort@this()).toString@extra());   [ RR iiii. RR.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR iiii. i..][ RR iiii. iR.]
        b0.println(b1.append@extra("   DestPort: ").append@extra(vR0.getDestPort@this()).toString@extra());   [ RR iiiiiii. RR.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiii. i..][ RR iiiiiii. iR.]
        b0.println(b1.append@extra("   Length: ").append@extra(vR0.getLength@this()).toString@extra());   [ RR iiiiiiiiii. RR.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR iiiiiiiiii. i..][ RR iiiiiiiiii. iR.]
        b0.println(b1.append@extra("   Checksum:").append@extra(vR0.getChecksum@this()).toString@extra());   [ RR iiiiiiiiiiiii. RR.] 
        out.println("   First 16 bytes of data:");   [ RR iiiiiiiiiiiiii. RR.] 
        xdump@special(vR0.buf,(vR0.offset+requiresSpace@special()),16);   [ RR iiiiiiiiiiiiiiiR iiR]
        return;   
  +END:   #1
 }
// Register: rd 16/16 wr 36 swaps 14 any 0 found 0 dump
}
