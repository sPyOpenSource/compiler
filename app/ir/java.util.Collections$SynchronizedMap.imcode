class java/util/Collections$SynchronizedMap {
 
 method <init>(Ljava/util/Map;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.m = (java/util/Map)(requireNonNull@special(vR1));   
        vR0.mutex = vR0;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 1 <init>
 
 method <init>(Ljava/util/Map;Ljava/lang/Object;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.m = vR1;   
        vR0.mutex = vR2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method size()I {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        b0 = vR0.m.size();    [R i  R] 
        vR1.leave();   
        return b0;   
  +H19<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B22:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 19 type 0
19 - 22 handler 19 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 size
 
 method isEmpty()Z {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        b0 = vR0.m.isEmpty();    [R b  R] 
        vR1.leave();   
        return b0;   
  +H19<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B22:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 19 type 0
19 - 22 handler 19 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 isEmpty
 
 method containsKey(Ljava/lang/Object;)Z {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.m.containsKey(vR1);    [R b  RR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 containsKey
 
 method containsValue(Ljava/lang/Object;)Z {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.m.containsValue(vR1);    [R b  RR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 containsValue
 
 method get(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.m.get(vR1);    [R R  RR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 get
 
 method put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        b0 = vR0.mutex;    
        vR3 = b0;    
        b0.enter();   
        b0 = vR0.m.put(vR1,vR2);    [R R  RRR] 
        vR3.leave();   
        return b0;   
  +H21<caught exception>:   #2 reference
        vR4 = <caught exception>;    
        vR3.leave();   
  -B25:   #1
        throw vR4;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 20 handler 21 type 0
21 - 25 handler 21 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 put
 
 method remove(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.m.remove(vR1);    [R R  RR] 
        vR2.leave();   
        return b0;   
  +H20<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B23:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 20 type 0
20 - 23 handler 20 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 remove
 
 method putAll(Ljava/util/Map;)V {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        vR0.m.putAll(vR1);   [R R  RR] 
        vR2.leave();   
        goto +B27;   forward return[R R  ..]
  +H22<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B25:   #1
        throw vR3;   
  +B27:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 19 handler 22 type 0
22 - 25 handler 22 type 0
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 0 putAll
 
 method clear()V {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        vR0.m.clear();   [R R  R] 
        vR1.leave();   
        goto +B26;   forward return[R R  .]
  +H21<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B24:   #1
        throw vR2;   
  +B26:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 21 type 0
21 - 24 handler 21 type 0
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 0 clear
 
 method keySet()Ljava/util/Set; {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        if vR0.keySet!=null goto B38;   
  +B14:   #1
        b1 = new java/util/Collections$SynchronizedSet(vR0.m.keySet(),vR0.mutex);    [ RR  i][ RR . iRRR]
        vR0.keySet = b1;   
  +B38:   #1
        b0 = vR0.keySet;    
        vR1.leave();   
        return b0;   
  +H45<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B48:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 44 handler 45 type 0
45 - 48 handler 45 type 0
 }
// Register: rd 11/11 wr 6 swaps 0 any 1 found 0 keySet
 
 method entrySet()Ljava/util/Set; {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        if vR0.entrySet!=null goto B38;   
  +B14:   #1
        b1 = new java/util/Collections$SynchronizedSet(vR0.m.entrySet(),vR0.mutex);    [ RR  i][ RR . iRRR]
        vR0.entrySet = b1;   
  +B38:   #1
        b0 = vR0.entrySet;    
        vR1.leave();   
        return b0;   
  +H45<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B48:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 44 handler 45 type 0
45 - 48 handler 45 type 0
 }
// Register: rd 11/11 wr 6 swaps 0 any 1 found 0 entrySet
 
 method values()Ljava/util/Collection; {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        if vR0.values!=null goto B38;   
  +B14:   #1
        b1 = new java/util/Collections$SynchronizedCollection(vR0.m.values(),vR0.mutex);    [ RR  i][ RR . iRRR]
        vR0.values = b1;   
  +B38:   #1
        b0 = vR0.values;    
        vR1.leave();   
        return b0;   
  +H45<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B48:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 44 handler 45 type 0
45 - 48 handler 45 type 0
 }
// Register: rd 11/11 wr 6 swaps 0 any 1 found 0 values
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0!=vR1 goto B7;   
  +B5:   #1
        return 1;   
  +B7:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        b0 = vR0.m.equals(vR1);    [R b  RR] 
        vR2.leave();   
        return b0;   
  +H27<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B30:   #1
        throw vR3;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
14 - 26 handler 27 type 0
27 - 30 handler 27 type 0
 }
// Register: rd 7/7 wr 4 swaps 0 any 2 found 0 equals
 
 method hashCode()I {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        b0 = vR0.m.hashCode();    [R i  R] 
        vR1.leave();   
        return b0;   
  +H19<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B22:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 18 handler 19 type 0
19 - 22 handler 19 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 hashCode
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = vR0.mutex;    
        vR1 = b0;    
        b0.enter();   
        b0 = vR0.m.toString();    [R R  R] 
        vR1.leave();   
        return b0;   
  +H17<caught exception>:   #2 reference
        vR2 = <caught exception>;    
        vR1.leave();   
  -B20:   #1
        throw vR2;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 16 handler 17 type 0
17 - 20 handler 17 type 0
 }
// Register: rd 5/5 wr 4 swaps 0 any 1 found 0 toString
 
 method writeObject(Ljava/io/ObjectOutputStream;)V {
  +START:   #1
        b0 = vR0.mutex;    
        vR2 = b0;    
        b0.enter();   
        vR1.defaultWriteObject();   [R R  R] 
        vR2.leave();   
        goto +B21;   forward return[R R  .]
  +H16<caught exception>:   #2 reference
        vR3 = <caught exception>;    
        vR2.leave();   
  -B19:   #1
        throw vR3;   
  +B21:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
7 - 13 handler 16 type 0
16 - 19 handler 16 type 0
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 0 writeObject
}
