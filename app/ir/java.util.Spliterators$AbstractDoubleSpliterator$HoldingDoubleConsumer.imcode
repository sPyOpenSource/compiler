class java/util/Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method accept(D)V {
  +START:   #1
        vR0.value = vd1;   
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 accept
 
 method andThen(Ljava/util/function/DoubleConsumer;)Ljava/util/function/DoubleConsumer; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 andThen
}
