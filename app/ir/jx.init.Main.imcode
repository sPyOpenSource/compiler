class jx/init/Main {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method init(Ljx/zero/Naming;)V {
  +START:   #1
        vR1 = new jx/zero/debug/DebugOutputStream((jx/zero/debug/DebugChannel)(vR0.lookup("DebugChannel0")));    [ R  i][ R .i. iRR]
        b0 = new jx/zero/debug/DebugPrintStream(vR1);    [ R .i. i..][ R .i. iRR]
        out = b0;   
        out.println("Init running...");   [R R ii. RR.] 
        b0 = new java/lang/String()[1];    
        b0[0] = "boot.rc";   
        main@special(b0);   [R R ii. R..]
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 9 swaps 2 any 0 found 1 init
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        vR1 = getInitialNaming@special();    
        initNaming = vR1;   
        vR2 = vR0[0];    
        vR3 = (jx/zero/BootFS)(vR1.lookup("BootFS"));    
        if vR3!=null goto B55;   
  +B28:   #1
        out.println("****************************");   [RRR RRR i. RR] 
        out.println("*  NO BootFS portal found. *");   [RRR RRR ii. RR] 
        out.println("****************************");   [RRR RRR iii. RR] 
        goto +B502;   [RRR RRR iii. ..]
  +B55:   #1
        vR4 = vR3.getFile(vR2);    [RRR RRR .... RR] 
        if vR4!=null goto B96;   
  -B69:   #1
        b0 = new java/lang/Error;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR .... i.][ RRR .... iR]
        b1.<init>@special(b2.append@extra("no startup script ").append@extra(vR2).toString@extra());   [RRRR RRR ii.. RR.] 
        throw b0;   
  +B96:   #1
        vR5 = new jx/bootrc/BootRC2(vR4);    [ RRR .... i..][ RRR .... iRR]
        installGlobal@special(vR5.getGlobalSpec());   [RRRRR RRR R... R..]
  +B115:   #1
        b0 = vR5.nextDomainSpec();    [RRRRR RRR .... R..] 
        vR6 = b0;    
        if b0==null goto B502;   
  +B126:   #1
        vi7 = 0;    
        vR8 = vR6.getString("Name");    [RRRRRRi RRR i... RR.] 
        vi9 = vR6.getInt("CodeSize");    [RRRRRRiR RRR ii.. RR.] 
  +B147:   #1
        vR6.getString("SchedulerClass");   [RRRRRRiRi RRR i... RR.] 
  +B155:   #1
        goto +B160;   [RRRRRRiRi RRR .... ...]
  +H158<caught exception>:   #1 reference
        vR10 = <caught exception>;    
  +B160:   #2
        vR10 = vR6.getString("GarbageCollector");    [RRRRRRiRi RRR i... RR.] 
        vR11 = vR10;    
        vi12 = -1;    
        lswitch (vR11.hashCode@extra()) { 
           -1388777169:B256
           -857971233:B240
           757417932:B272
           953530445:B224
           ::B285
        };   
  +B224:   #1
        if vR11.equals@extra("copying")==0 goto B285;   
  +B234:   #1
        vi12 = 0;    
        goto +B285;   [RRRRRRiRiiRiRiRRR RRR .... ...]
  +B240:   #1
        if vR11.equals@extra("compacting")==0 goto B285;   
  +B250:   #1
        vi12 = 1;    
        goto +B285;   [RRRRRRiRiiRiRiRRR RRR .... ...]
  +B256:   #1
        if vR11.equals@extra("bitmap")==0 goto B285;   
  +B266:   #1
        vi12 = 2;    
        goto +B285;   [RRRRRRiRiiRiRiRRR RRR .... ...]
  +B272:   #1
        if vR11.equals@extra("chunked")==0 goto B285;   
  +B282:   #1
        vi12 = 3;    
  +B285:   #8
        tswitch (vi12) B316 B322 B328 B334 : B340;   
  +B316:   #1
        vi7 = 0;    
        goto +B350;   [RRRRRRiRiRRi RRR .... ...]
  +B322:   #1
        vi7 = 1;    
        goto +B350;   [RRRRRRiRiiiiRiRRR RRR .... ...]
  +B328:   #1
        vi7 = 2;    
        goto +B350;   [RRRRRRiRiiiiRiRRR RRR .... ...]
  +B334:   #1
        vi7 = 3;    
        goto +B350;   [RRRRRRiRiiiiRiRRR RRR .... ...]
  -B340:   #1
        throw new java/lang/Error("unknown GC implementation");   
  +B350:   #5
        goto +B355;   [RRRRRRiRiRRi RRR .... ...]
  +H353<caught exception>:   #1 reference
        vR10 = <caught exception>;    
  +B355:   #1
        vi10 = 0;    
        vi11 = 0;    
        vi12 = 0;    
        vR13 = 0;    
        vi14 = -1;    
        tswitch (vi7) B404 B404 B404 B416 : B474;   
  +B404:   #3
        vi10 = vR6.getInt("HeapSize");    [RRRRRRiRiiiiRi RRR i... RR.] 
        goto +B484;   [RRRRRRiRiiiiRi RRR i... ...]
  +B416:   #1
        vi10 = vR6.getInt("GCHeapInitial");    [RRRRRRiRiiiiRiRRR RRR i... RR.] 
        vi11 = vR6.getInt("GCHeapChunk");    [RRRRRRiRiiiiRiRRR RRR ii.. RR.] 
        vi12 = vR6.getInt("GCStartGC");    [RRRRRRiRiiiiRiRRR RRR iii. RR.] 
  +B443:   #1
        vR13 = vR6.getString("GCAccountTo");    [RRRRRRiRiiiiRiRRR RRR i... RR.] 
  +B452:   #1
        goto +B457;   [RRRRRRiRiiiiRiRRR RRR .... ...]
  +H455<caught exception>:   #1 reference
        vR15 = <caught exception>;    
  +B457:   #2
        vi14 = vR6.getInt("GCLimit");    [RRRRRRiRiiiiRiRRR RRR i... RR.] 
  +B466:   #1
        goto +B484;   [RRRRRRiRiiiiRiRRR RRR .... ...]
  +H469<caught exception>:   #1 reference
        vR15 = <caught exception>;    
        goto +B484;   [RRRRRRiRiiRiRiRRR RRR .... ...]
  -B474:   #1
        throw new java/lang/Error("unknown GC implementation");   
  +B484:   #3
        vR15 = vR6.getComponents();    [RRRRRRiRiiiiRi RRR .... R..] 
        vR16 = "init2.jll";    
        vR17 = "jx/init/MultiComponentStart";    
        goto +B115;   [RRRRRRiRiiiiRiRRR RRR .... ...]
  +B502:   #2
        out.println("Init finished.");   [RRR RRR i... RR.] 
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
147 - 155 handler 158 type 121
160 - 350 handler 353 type 121
443 - 452 handler 455 type 121
457 - 466 handler 469 type 121
 }
// Register: rd 39/39 wr 66 swaps 21 any 8 found 1 main
 
 method installGlobal(Ljx/bootrc/GlobalSpec;)V {
  +START:   #1
        if vR0!=null goto B29;   
  +B4:   #1
        out.println("!!ATTENTION!!                                      !!ATTENTION!!");   [ RRR i. RR] 
        out.println("!!ATTENTION!!  No [Global] section found           !!ATTENTION!!");   [ RRR ii. RR] 
        out.println("!!ATTENTION!!                                      !!ATTENTION!!");   [ RRR iii. RR] 
        return;   
  +B29:   #2
        vR1 = getInitialNaming@special();    
        vR2 = vR0.getString@this("SecurityManagerLib");    [R RRR i... RR] 
        vR3 = vR0.getString@this("SecurityManagerClass");    [RR RRR ii.. RR] 
        vR4 = (jx/zero/CPUManager)(vR1.lookup("CPUManager"));    
        vR5 = (jx/zero/ComponentManager)(vR1.lookup("ComponentManager"));    
        vi6 = vR5.load(vR2);    [RRRRR RRR iiii. RR] 
        vR4.executeClassConstructors(vi6);   [RRRRRi RRR iiii. iR] 
        vR7 = vR4.getClass(vR3);    [RRRRRi RRR iiii. RR] 
        if vR7!=null goto B139;   
  -B107:   #1
        b0 = new java/lang/Error;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR ..... i.][ RRR ..... iR]
        b1.<init>@special(b2.append@extra("SecurityManager class ").append@extra(vR3).append@extra(" not found.").toString@extra());   [RRRRRiR RRR iii.. RR..] 
        throw b0;   
  +B139:   #1
        vR7.newInstance();   [RRRRRiR RRR ..... R...] 
  +B147:   #1
        goto +B175;   [RRRRRiR RRR ..... ....]
  +H150<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        out.println("!!ATTENTION!!                                      !!ATTENTION!!");   [RRRRRiR RRR i.... RR..] 
        out.println("!!ATTENTION!!  No Security Manager is used         !!ATTENTION!!");   [RRRRRiR RRR ii... RR..] 
        out.println("!!ATTENTION!!                                      !!ATTENTION!!");   [RRRRRiR RRR iii.. RR..] 
  +B175:   #2
        vR1 = vR0.getString@this("InstallNaming");    [RRRRRiR RRR i.... RR..] 
        b0 = new jx/InitialNaming(initNaming);    [ RRR i.... i...][ RRR i.... iRR.]
  +B193:   #1
        goto +B221;   forward return[RRRRRiR RRR ..... ....]
  +H196<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        out.println("!!ATTENTION!!                                      !!ATTENTION!!");   [RRRRRiR RRR i.... RR..] 
        out.println("!!ATTENTION!!  DomainZero's naming service is used !!ATTENTION!!");   [RRRRRiR RRR ii... RR..] 
        out.println("!!ATTENTION!!                                      !!ATTENTION!!");   [RRRRRiR RRR iii.. RR..] 
  +B221:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
29 - 147 handler 150 type 121
175 - 193 handler 196 type 121
 }
// Register: rd 18/18 wr 46 swaps 17 any 3 found 0 installGlobal
}
