class jx/vis/MemoryUsageDiagram {
 
 method usage()V {
  +START:   #1
        out.println("<eventin> <mifout> <eventnames...>");   [  i. RR] 
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 2 swaps 1 any 0 found 0 usage
 
 method main([Ljava/lang/String;)V {
  +START:   #1
        b0 = new jx/vis/MemoryUsageDiagram(vR0);    [ R  i][ R . iRR]
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 main
 
 method <init>([Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        if vR1.length!=0 goto B13;   
  +B9:   #1
        usage@special();   [ RR  .]
        return;   
  +B13:   #1
        vR2 = new java/io/FileInputStream(vR1[0]);    [ RR  i][ RR . iRR]
        vR3 = new java/io/FileOutputStream(vR1[1]);    [ RR . i..][ RR . iRR]
        vi4 = 0;    
        vR5 = new jx/vis/Events(vR2,vi4);    [ RR . i..][ RR . iiRR]
        vR6 = vR5.all;    
        vR7 = new int[(vR1.length-2)];    
        vi8 = 0;    
        vi9 = 0;    
  +B71:   #1
        if vi9>=vR5.types.length goto B135;   
  +B82:   #1
        vi10 = 2;    
  +B85:   #1
        if vi10>=vR1.length goto B129;   
  +B92:   #1
        if vR5.types[vi9].name.equals@extra(vR1[vi10])==0 goto B123;   
  +B113:   #1
        b1 = vi8;    
        vi8++;   
        vR7[b1] = vi9;   
  +B123:   #1
        vi10++;   
        goto +B85;   [RRiRRRiii Ri . ....]
  +B129:   #1
        vi9++;   
        goto +B71;   [RRiRRRiii Ri . ....]
  +B135:   #1
        if vi8==vR7.length goto B152;   
  +B143:   #1
        out.println("wrong event names");   [RRiRRRiii Ri i. RR..] 
        return;   
  +B152:   #1
        vi9 = 0;    
        vl10 = 0;    
        vi12 = 0;    
  +B161:   #1
        if vi12>=vR5.nevents goto B265;   
  +B171:   #1
        vl10 = (vl10+vR6[vi12].timestamp);    
        if vi9!=0 goto B259;   
  +B189:   #1
        vi13 = 0;    
  +B192:   #1
        if vi13>=vR7.length goto B259;   
  +B200:   #1
        if vR6[vi12].number!=vR7[vi13] goto B253;   
  +B216:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR .. i...][ RR .. iR..]
        b0.println(b1.append@extra(vl10).append@extra("  ").append@extra(vR6[vi12].info1).toString@extra());   [RRiRRRiil?ii RR iii.. RR...] 
  +B253:   #1
        vi13++;   
        goto +B192;   [RRiRRRiil?ii RR ..... .....]
  +B259:   #2
        vi12++;   
        goto +B161;   [RRiRRRiil?ii RR ..... .....]
  +B265:   #1
        vR12 = new jx/vis/mif/MIFVisualizer(vR3);    [ RR ..... i....][ RR ..... iRR..]
        vR12.init();   [RRiRRRiil?Ri RR ..... R....] 
        vi13 = 150;    
        vi14 = 800;    
        vi15 = 10;    
        vi16 = 500;    
        vR12.drawLine(vi13,vi15,vi13,vi16);   [RRiRRRiil?Riiii RR ..... iiiiR] 
        vR12.drawLine(vi13,vi16,vi14,vi16);   [RRiRRRiil?Riiii RR ..... iiiiR] 
        vR12.finish();   [RRiRRRiil?Riiii RR ..... R....] 
        return;   
  +END:   #1
 }
// Register: rd 49/49 wr 33 swaps 5 any 13 found 0 <init>
}
