class java/security/KeyFactory {
 
 method <init>(Ljava/security/KeyFactorySpi;Ljava/security/Provider;Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.keyFacSpi = vR1;   
        vR0.provider = vR2;   
        vR0.algorithm = vR3;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method getInstance(Ljava/lang/String;)Ljava/security/KeyFactory; {
  +START:   #1
        vR1 = getProviders@special();    [ RR  ]
        vi2 = 0;    
  +B6:   #1
        if vi2>=vR1.length goto B57;   
  +B12:   #1
        b0 = vR1[vi2];    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        vR3 = b0.getProperty(b1.append@extra("KeyFactory.").append@extra(vR0).toString@extra());    [Ri RR ii. RR.] 
        if vR3==null goto B51;   
  +B42:   #1
        return getInstance@special(vR3,vR0,vR1[vi2]);   
  +B51:   #1
        vi2++;   
        goto +B6;   [RiR RR ... ...]
  -B57:   #1
        throw new java/security/NoSuchAlgorithmException(vR0);   
  +END:   #1
 }
// Register: rd 12/12 wr 12 swaps 2 any 3 found 0 getInstance
 
 method getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyFactory; {
  +START:   #1
        vR2 = getProvider@special(vR1);    [ RR  R]
        if vR2!=null goto B17;   
  -B9:   #1
        throw new java/security/NoSuchProviderException();   
  +B17:   #1
        b1 = new java/lang/StringBuilder();    [ RR  i.][ RR  iR]
        return getInstance@special(vR2.getProperty(b1.append@extra("KeyFactory.").append@extra(vR0).toString@extra()),vR0,vR2);   
  +END:   #1
 }
// Register: rd 3/3 wr 7 swaps 2 any 1 found 0 getInstance
 
 method getInstance(Ljava/lang/String;Ljava/lang/String;Ljava/security/Provider;)Ljava/security/KeyFactory; {
  +START:   #4
        b0 = new java/security/KeyFactory((java/security/KeyFactorySpi)(forName@special(vR0).newInstance@extra()),vR2,vR1);    [ R  i][ R .. iRRRR]
  +B19b0:   #3 reference
        return b0;   
  -H20<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        throw new java/security/NoSuchAlgorithmException("Class not found");   
  -H31<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        throw new java/security/NoSuchAlgorithmException("Class instantiation failed");   
  -H42<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        throw new java/security/NoSuchAlgorithmException("Illegal Access");   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 19 handler 20 type 23
0 - 19 handler 31 type 25
0 - 19 handler 42 type 27
 }
// Register: rd 8/8 wr 10 swaps 0 any 0 found 0 getInstance
 
 method getProvider()Ljava/security/Provider; {
  +START:   #1
        return vR0.provider;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getProvider
 
 method getAlgorithm()Ljava/lang/String; {
  +START:   #1
        return vR0.algorithm;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getAlgorithm
 
 method generatePublic(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey; {
  +START:   #1
        return vR0.keyFacSpi.engineGeneratePublic(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 generatePublic
 
 method generatePrivate(Ljava/security/spec/KeySpec;)Ljava/security/PrivateKey; {
  +START:   #1
        return vR0.keyFacSpi.engineGeneratePrivate(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 generatePrivate
 
 method getKeySpec(Ljava/security/Key;Ljava/lang/Class;)Ljava/security/spec/KeySpec; {
  +START:   #1
        return vR0.keyFacSpi.engineGetKeySpec(vR1,vR2);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getKeySpec
 
 method translateKey(Ljava/security/Key;)Ljava/security/Key; {
  +START:   #1
        return vR0.keyFacSpi.engineTranslateKey(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 translateKey
}
