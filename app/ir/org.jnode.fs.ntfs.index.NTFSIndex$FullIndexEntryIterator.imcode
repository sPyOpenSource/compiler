class org/jnode/fs/ntfs/index/NTFSIndex$FullIndexEntryIterator {
 
 method <init>(Lorg/jnode/fs/ntfs/index/NTFSIndex;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.subNodeEntries = 0;   
        vR0.currentIterator = vR1.getIndexRootAttribute@extra().iterator@extra();   
        vR0.readNextEntry@special();   [  . R] 
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 1 swaps 0 any 0 found 0 <init>
 
 method hasNext()Z {
  +START:   #1
        if vR0.nextEntry==null goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  ]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 hasNext
 
 method next()Lorg/jnode/fs/ntfs/index/IndexEntry; {
  +START:   #1
        vR1 = vR0.nextEntry;    
        if vR1!=null goto B17;   
  -B9:   #1
        throw new java/util/NoSuchElementException();   
  +B17:   #1
        vR0.readNextEntry@special();   [R R  R.] 
        return vR1;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 next
 
 method remove()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 remove
 
 method readNextEntry()V {
  +START:   #2
        if vR0.currentIterator.hasNext()==0 goto B63;   
  +B12:   #1
        vR0.nextEntry = (org/jnode/fs/ntfs/index/IndexEntry)(vR0.currentIterator.next());   
        if vR0.nextEntry.hasSubNodes@extra()==0 goto B52;   
  +B38:   #1
        vR0.subNodeEntries.add(vR0.nextEntry);   [ R i RR] 
  +B52:   #1
        if vR0.nextEntry.isLastIndexEntryInSubnode@extra()!=0 goto B63;   
  +B62:   #1
        return;   
  +B63:   #2
        vR0.nextEntry = 0;   
        if vR0.subNodeEntries.isEmpty()==0 goto B81;   
  +B80:   #1
        return;   
  +B81:   #1
        vR1 = (org/jnode/fs/ntfs/index/IndexEntry)(vR0.subNodeEntries.poll());    
        vR2 = vR0.this$0.getIndexRootAttribute@extra().getRoot@extra();    [R R . R.] [R R R R.] 
  +B105:   #1
        vR3 = vR0.this$0.getIndexAllocationAttribute@extra().getIndexBlock@extra(vR2,vR1.getSubnodeVCN@extra());    [RR R . ??RR] [RR R R ??RR] 
  +B121:   #1
        goto +B138;   [RRR R . ....]
  -H124<caught exception>:   #1 reference
        vR4 = <caught exception>;    
        throw new java/lang/RuntimeException("Cannot read next index block",vR4);   
  +B138:   #1
        vR0.currentIterator = vR3.iterator@extra();   
        goto +START;   [RRR R . ....]
  +END:   #1
EXCEPTIONHANDLER-TABLE:
105 - 121 handler 124 type 94
 }
// Register: rd 18/18 wr 10 swaps 1 any 0 found 0 readNextEntry
 
 method next()Ljava/lang/Object; {
  +START:   #1
        return vR0.next@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 next
}
