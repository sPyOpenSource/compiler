class jx/timerpc/SleepManagerImpl {
 
 method <init>([Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.clock = (jx/zero/Clock)(getInitialNaming@special().lookup("Clock"));   
        vR0.cpuManager = (jx/zero/CPUManager)(getInitialNaming@special().lookup("CPUManager"));   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 6 swaps 2 any 0 found 0 <init>
 
 method mdelay(I)V {
  +START:   #1
        vi2 = (vR0.clock.getTimeInMillis()+vi1);    
  +B12:   #1
        if vi2<=vR0.clock.getTimeInMillis() goto B28;   
  +B25:   #1
        goto +B12;   [i   .]
  +B28:   #1
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 1 found 1 mdelay
 
 method udelay(I)V {
  +START:   #1
        vi2 = 0;    
  +B2:   #1
        if vi2>=vi1 goto B28;   
  +B7:   #1
        vi3 = 0;    
  +B9:   #1
        if vi3>=150 goto B22;   
  +B16:   #1
        vi3++;   
        goto +B9;   [ii   ]
  +B22:   #1
        vi2++;   
        goto +B2;   [ii   ]
  +B28:   #1
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 4 found 0 udelay
 
 method sleep(II)V {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 sleep
}
