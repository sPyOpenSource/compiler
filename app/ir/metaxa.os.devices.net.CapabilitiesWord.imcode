class metaxa/os/devices/net/CapabilitiesWord {
 
 method <init>(ZZZZZZZZZZZZZZ)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.set_SupportsPlugNPlay@this(vi1);   [   iR] 
        vR0.set_SupportsFullDuplex@this(vi2);   [   iR] 
        vR0.set_SupportsLargePackets@this(vi3);   [   iR] 
        vR0.set_SupportsSlaveDMA@this(vi4);   [   iR] 
        vR0.set_SupportsSecondDMA@this(vi5);   [   iR] 
        vR0.set_SupportsFullBusMaster@this(vi6);   [   iR] 
        vR0.set_SupportsFragBusMaster@this(vi7);   [   iR] 
        vR0.set_SupportsCRCPassThrough@this(vi8);   [   iR] 
        vR0.set_SupportsTxDone@this(vi9);   [   iR] 
        vR0.set_SupportsNoTxLength@this(vi10);   [   iR] 
        vR0.set_SupportsRxRepeat@this(vi11);   [   iR] 
        vR0.set_SupportsSnooping@this(vi12);   [   iR] 
        vR0.set_Supports100Mbps@this(vi13);   [   iR] 
        vR0.set_SupportsPowerManagement@this(vi14);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 0 swaps 0 any 0 found 0 <init>
 
 method set_SupportsPlugNPlay(Z)V {
  +START:   #1
        vR0.SupportsPlugNPlay = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsPlugNPlay
 
 method set_SupportsFullDuplex(Z)V {
  +START:   #1
        vR0.SupportsFullDuplex = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsFullDuplex
 
 method set_SupportsLargePackets(Z)V {
  +START:   #1
        vR0.SupportsLargePackets = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsLargePackets
 
 method set_SupportsSlaveDMA(Z)V {
  +START:   #1
        vR0.SupportsSlaveDMA = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsSlaveDMA
 
 method set_SupportsSecondDMA(Z)V {
  +START:   #1
        vR0.SupportsSecondDMA = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsSecondDMA
 
 method set_SupportsFullBusMaster(Z)V {
  +START:   #1
        vR0.SupportsFullBusMaster = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsFullBusMaster
 
 method set_SupportsFragBusMaster(Z)V {
  +START:   #1
        vR0.SupportsFragBusMaster = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsFragBusMaster
 
 method set_SupportsCRCPassThrough(Z)V {
  +START:   #1
        vR0.SupportsCRCPassThrough = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsCRCPassThrough
 
 method set_SupportsTxDone(Z)V {
  +START:   #1
        vR0.SupportsTxDone = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsTxDone
 
 method set_SupportsNoTxLength(Z)V {
  +START:   #1
        vR0.SupportsNoTxLength = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsNoTxLength
 
 method set_SupportsRxRepeat(Z)V {
  +START:   #1
        vR0.SupportsRxRepeat = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsRxRepeat
 
 method set_SupportsSnooping(Z)V {
  +START:   #1
        vR0.SupportsSnooping = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsSnooping
 
 method set_Supports100Mbps(Z)V {
  +START:   #1
        vR0.Supports100Mbps = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_Supports100Mbps
 
 method set_SupportsPowerManagement(Z)V {
  +START:   #1
        vR0.SupportsPowerManagement = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SupportsPowerManagement
 
 method get_SupportsPlugNPlay()Z {
  +START:   #1
        return vR0.SupportsPlugNPlay;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsPlugNPlay
 
 method get_SupportsFullDuplex()Z {
  +START:   #1
        return vR0.SupportsFullDuplex;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsFullDuplex
 
 method get_SupportsLargePackets()Z {
  +START:   #1
        return vR0.SupportsLargePackets;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsLargePackets
 
 method get_SupportsSlaveDMA()Z {
  +START:   #1
        return vR0.SupportsSlaveDMA;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsSlaveDMA
 
 method get_SupportsSecondDMA()Z {
  +START:   #1
        return vR0.SupportsSecondDMA;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsSecondDMA
 
 method get_SupportsFullBusMaster()Z {
  +START:   #1
        return vR0.SupportsFullBusMaster;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsFullBusMaster
 
 method get_SupportsFragBusMaster()Z {
  +START:   #1
        return vR0.SupportsFragBusMaster;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsFragBusMaster
 
 method get_SupportsCRCPassThrough()Z {
  +START:   #1
        return vR0.SupportsCRCPassThrough;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsCRCPassThrough
 
 method get_SupportsTxDone()Z {
  +START:   #1
        return vR0.SupportsTxDone;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsTxDone
 
 method get_SupportsNoTxLength()Z {
  +START:   #1
        return vR0.SupportsNoTxLength;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsNoTxLength
 
 method get_SupportsRxRepeat()Z {
  +START:   #1
        return vR0.SupportsRxRepeat;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsRxRepeat
 
 method get_SupportsSnnoping()Z {
  +START:   #1
        return vR0.SupportsSnooping;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsSnnoping
 
 method get_Supports100Mbps()Z {
  +START:   #1
        return vR0.Supports100Mbps;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_Supports100Mbps
 
 method get_SupportsPowerManagement()Z {
  +START:   #1
        return vR0.SupportsPowerManagement;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SupportsPowerManagement
}
