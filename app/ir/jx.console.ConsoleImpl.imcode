class jx/console/ConsoleImpl {
 
 method <init>(Ljx/zero/Naming;Ljx/devices/Screen;Ljx/devices/Keyboard;)V {
  +START:   #1
        vR0.<init>@special();   [ ?RRR  R] 
        vR0.cons = new jx/console/VirtualConsoleImpl()[10];   
        vR4 = (jx/zero/debug/DebugChannel)(vR1.lookup("DebugChannel0"));    
        b1 = new jx/zero/debug/DebugPrintStream;    
        b2 = b1;    
        b3 = new jx/zero/debug/DebugOutputStream(vR4);    [ ?RRR i. i.][ ?RRR i. iRR]
        b2.<init>@special(b3);   [R ?RRR i. RR.] 
        vR0.out = b1;   
        vR0.memMgr = (jx/zero/MemoryManager)(vR1.lookup("MemoryManager"));   
        vR0.screen = vR2;   
        vR0.keyboard = vR3;   
        vR2.clear();   [R ?RRR ii. R..] 
        vR0.current = vR0.createVirtualConsole@this();   
        b1 = new jx/shell/Shell(vR0.current.getOutputStream(),vR0.current.getInputStream());    [ ?RRR ii. i..][ ?RRR ii. iRRR]
        vR0.shell = b1;   
        vR0.current.activate();   [R ?RRR ii. R...] 
  +B123:   #1
        vR0.shell.mainloop();   [R ?RRR ... R...] 
  +B130:   #1
        goto +B135;   forward return[R ?RRR ... ....]
  +H133<caught exception>:   #1 reference
        vR5 = <caught exception>;    
  +B135:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
123 - 130 handler 133 type 93
 }
// Register: rd 28/28 wr 12 swaps 2 any 1 found 0 <init>
 
 method init(Ljx/zero/Naming;)V {
  +START:   #1
        vR1 = new jx/screen/ScreenImpl(vR0);    [ R  i][ R . iRR]
        b0 = new jx/console/ConsoleImpl(vR0,vR1,0);    [ R . i..][ R . iRRRR]
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 init
 
 method createVirtualConsole()Ljx/console/VirtualConsole; {
  +START:   #1
        vR1 = new jx/console/VirtualConsoleImpl(vR0.memMgr,vR0,vR0.screen,vR0.keyboard);    [ R  i][ R . iRRRRR]
        return vR1;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 0 found 0 createVirtualConsole
 
 method switchTo(Ljx/console/VirtualConsole;)V {
  +START:   #1
        if vR0.current==null goto B16;   
  +B7:   #1
        vR0.current.deactivate();   [   R] 
  +B16:   #1
        vR0.current = vR1;   
        vR0.current.activate();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 switchTo
 
 method moveCursorTo(II)V {
  +START:   #1
        vR0.screen.moveCursorTo(vi1,vi2);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 moveCursorTo
}
