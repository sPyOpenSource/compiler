class java/awt/color/ColorSpace {
 
 method <init>(II)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.type = vi1;   
        vR0.numcomponents = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method getInstance(I)Ljava/awt/color/ColorSpace; {
  +START:   #1
        if vi0<1000 goto B57;   
  +B7:   #1
        if vi0>=1005 goto B57;   
  +B14:   #1
        vi1 = (vi0-1000);    
        if INSTANCES[vi1]!=null goto B51;   
  +B28:   #1
        vR2 = new java/awt/color/ICC_Profile((long)vi0);    [ R?R  i][ R?R .. ilR]
        b0 = INSTANCES;    
        b2 = new java/awt/color/ICC_ColorSpace(vR2);    [ R?R .. i..][ R?R .. iRR]
        b0[vi1] = b2;   
  +B51:   #1
        return INSTANCES[vi1];   
  -B57:   #2
        throw new java/lang/IllegalArgumentException("unknown/unsupported colorspace");   
  +END:   #1
 }
// Register: rd 12/12 wr 8 swaps 0 any 4 found 0 getInstance
 
 method isCS_sRGB()Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 isCS_sRGB
 
 method getType()I {
  +START:   #1
        return vR0.type;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getType
 
 method getNumComponents()I {
  +START:   #1
        return vR0.numcomponents;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getNumComponents
 
 method getName(I)Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("type ").append@extra(vR0.type).toString@extra();   
  +END:   #1
 }
// Register: rd 2/2 wr 5 swaps 2 any 0 found 0 getName
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("[type=").append@extra(vR0.type).append@extra("]").toString@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 10 swaps 4 any 0 found 0 toString
 
 method <clinit>()V {
  +START:   #1
        INSTANCES = new java/awt/color/ColorSpace()[5];   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 <clinit>
}
