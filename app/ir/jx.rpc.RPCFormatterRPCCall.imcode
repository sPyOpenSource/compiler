class jx/rpc/RPCFormatterRPCCall {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method write(Ljx/rpc/RPCBuffer;Ljx/rpc/RPCCall;)V {
  +START:   #1
        writeInt@special(vR0,vR1.version);   [  i iR]
        writeInt@special(vR0,vR1.prog);   [  ii iR]
        writeInt@special(vR0,vR1.progVersion);   [  iii iR]
        writeInt@special(vR0,vR1.proc);   [  iiii iR]
        write@special(vR0,vR1.a);   [  iiiiR RR]
        write@special(vR0,vR1.c);   [  iiiiRR RR]
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 6 swaps 0 any 0 found 0 write
 
 method read(Ljx/rpc/RPCBuffer;)Ljx/rpc/RPCCall; {
  +START:   #1
        vR1 = new jx/rpc/RPCCall();    [ R  i][ R  iR]
        if vR0.buf.size()>18 goto B33;   
  +B22:   #1
        xdump1@special(vR0.buf,0,128);   [R R R iiR]
  +B33:   #1
        vR1.version = readInt@special(vR0);   
        vR1.prog = readInt@special(vR0);   
        vR1.progVersion = readInt@special(vR0);   
        vR1.proc = readInt@special(vR0);   
        vR1.a = read@special(vR0);   
        vR1.c = read@special(vR0);   
        return vR1;   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 0 any 0 found 0 read
 
 method length(Ljx/rpc/RPCCall;)I {
  +START:   #1
        vi1 = 0;    
        vi1 = (vi1+lengthInt@special(vR0.version));    
        vi1 = (vi1+lengthInt@special(vR0.prog));    
        vi1 = (vi1+lengthInt@special(vR0.progVersion));    
        vi1 = (vi1+lengthInt@special(vR0.proc));    
        vi1 = (vi1+length@special(vR0.a));    
        vi1 = (vi1+length@special(vR0.c));    
        return vi1;   
  +END:   #1
 }
// Register: rd 19/19 wr 13 swaps 0 any 6 found 6 length
}
