class java/lang/Float {
 
 method <init>(F)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.value = vl1;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(D)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.value = (float)vd1;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method byteValue()B {
  +START:   #1
        return (byte)(int)vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 byteValue
 
 method shortValue()S {
  +START:   #1
        return (short)(int)vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 shortValue
 
 method intValue()I {
  +START:   #1
        return (int)vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 intValue
 
 method longValue()J {
  +START:   #1
        return (long)vR0.value;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 longValue
 
 method floatValue()F {
  +START:   #1
        return vR0.value;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 floatValue
 
 method doubleValue()D {
  +START:   #1
        return (double)vR0.value;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 doubleValue
 
 method valueOf(Ljava/lang/String;)Ljava/lang/Float; {
  -START:   #1
        throw new java/lang/Error("NOT IMPLEMENTED");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 valueOf
 
 method floatToIntBits(F)I {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 floatToIntBits
 
 method intBitsToFloat(I)F {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 intBitsToFloat
 
 method parseFloat(Ljava/lang/String;)F {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 parseFloat
 
 method compare(FF)I {
  -START:   #1
        throw new java/lang/Error();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 compare
}
