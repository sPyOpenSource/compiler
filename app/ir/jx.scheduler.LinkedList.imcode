class jx/scheduler/LinkedList {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.cpuManager = (jx/zero/CPUManager)(getInitialNaming@special().lookup("CPUManager"));   
        vR0.first = 0;   
        vR0.last = 0;   
        vR0.enumerator = 0;   
        vR0.anzElements = 0;   
        vR0.debug = 0;   
        vR0.ContainerPool = 0;   
        vR0.ContainerPoolSize = 0;   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 3 swaps 1 any 0 found 0 <init>
 
 method size()I {
  +START:   #1
        return vR0.anzElements;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method add(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1!=null goto B6;   
  +B4:   #1
        return 0;   
  +B6:   #1
        vR2 = vR0.first;    
  +B11:   #1
        if vR2==null goto B61;   
  +B15:   #1
        if vR2.content!=vR1 goto B53;   
  +B23:   #1
        out.print("LinkedList.add: Object
   ");   [R ?RR i. RR] 
        vR0.cpuManager.dump("",vR1);   [R ?RR ii RRR] 
        out.println(" already in list.");   [R ?RR iii. RR.] 
        return 0;   
  +B53:   #1
        vR2 = vR2.next;    
        goto +B11;   [R ?RR .... ...]
  +B61:   #1
        if vR0.last!=null goto B85;   
  +B68:   #1
        b2 = vR0.getNewContainer@special(vR1);    [R ?RR .... RR.] 
        b1 = b2;    
        vR0.first = b2;   
        vR0.last = b1;   
        goto +B108;   [R ?RR .... ...]
  +B85:   #1
        vR0.last.next = vR0.getNewContainer@special(vR1);   
        vR0.last = vR0.last.next;   
  +B108:   #1
        vR0.anzElements = (vR0.anzElements+1);   
        return 1;   
  +END:   #1
 }
// Register: rd 20/20 wr 9 swaps 3 any 3 found 0 add
 
 method remove(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0.first!=null goto B24;   
  +B7:   #1
        if vR0.debug==0 goto B22;   
  +B14:   #1
        out.println("remove: queue is empty.");   [  i. RR] 
  +B22:   #1
        return 0;   
  +B24:   #1
        if vR0.first!=vR1 goto B39;   
  +B32:   #1
        vR0.removeFirst@this();   [  .. R.] 
        return 1;   
  +B39:   #1
        vR2 = vR0.first;    
        vR3 = vR0.first.next;    
  +B52:   #1
        if vR3==null goto B112;   
  +B56:   #1
        if vR3.content!=vR1 goto B102;   
  +B64:   #1
        vR2.next = vR3.next;   
        if vR3!=vR0.last goto B85;   
  +B80:   #1
        vR0.last = vR2;   
  +B85:   #1
        vR0.releaseContainer@special(vR3);   [RR  .. RR] 
        vR0.anzElements = (vR0.anzElements-1);   
        return 1;   
  +B102:   #1
        vR2 = vR3;    
        vR3 = vR3.next;    
        goto +B52;   [RR  .. ..]
  +B112:   #1
        if vR0.debug==0 goto B147;   
  +B119:   #1
        out.println("LinkedList.remove: Object
   ");   [RR  i. RR] 
        vR0.cpuManager.dump("",vR1);   [RR  ii RRR] 
        out.println("    not in list.");   [RR  iii. RR.] 
  +B147:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 23/23 wr 11 swaps 4 any 3 found 0 remove
 
 method removeFirst()Ljava/lang/Object; {
  +START:   #1
        if vR0.first!=null goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        vR1 = vR0.first;    
        vR0.first = vR0.first.next;   
        if vR0.first!=null goto B37;   
  +B32:   #1
        vR0.last = 0;   
  +B37:   #1
        vR2 = vR1.content;    
        vR0.releaseContainer@special(vR1);   [RR   RR] 
        vR0.anzElements = (vR0.anzElements-1);   
        return vR2;   
  +END:   #1
 }
// Register: rd 11/11 wr 2 swaps 0 any 0 found 0 removeFirst
 
 method isEmpty()Z {
  +START:   #1
        if vR0.size@this()!=0 goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  .]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isEmpty
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        if vR0.indexOf@this(vR1)==-1 goto B13;   
  +B9:   #1
        b0 = 1;    
        goto +B14b0;   forward return[ i  ..]
  +B13:   #1
        b0 = 0;    
  +B14b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 contains
 
 method indexOf(Ljava/lang/Object;)I {
  +START:   #1
        vi2 = 0;    
        vR3 = vR0.first;    
  +B7:   #1
        if vR3==null goto B32;   
  +B11:   #1
        if vR3.content!=vR1 goto B21;   
  +B19:   #1
        return vi2;   
  +B21:   #1
        vi2++;   
        vR3 = vR3.next;    
        goto +B7;   [iR   ]
  +B32:   #1
        return -1;   
  +END:   #1
 }
// Register: rd 7/7 wr 4 swaps 0 any 2 found 0 indexOf
 
 method get(I)Ljava/lang/Object; {
  +START:   #1
        vi2 = 0;    
        vR3 = vR0.first;    
  +B7:   #1
        if vR3==null goto B32;   
  +B11:   #1
        b0 = vi2;    
        vi2++;   
        if b0!=vi1 goto B24;   
  +B19:   #1
        return vR3.content;   
  +B24:   #1
        vR3 = vR3.next;    
        goto +B7;   [iR i  ]
  +B32:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 8/8 wr 5 swaps 0 any 4 found 0 get
 
 method remove(I)Ljava/lang/Object; {
  +START:   #1
        vR2 = vR0.get@this(vi1);    [   iR] 
        vR0.remove@this(vR2);   [R   RR] 
        return vR2;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 remove
 
 method dump()V {
  +START:   #1
        if vR0.getFirst@this()!=null goto B18;   
  +B7:   #1
        out.println("       none");   [ RR i. RR] 
        goto +B83;   forward return[ RR i. ..]
  +B18:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR .. i.][ RR .. iR]
        b0.println(b1.append@extra("       ").append@extra(vR0.size@this()).append@extra(" elements").toString@extra());   [ RR ii.ii. RR..] 
        vR1 = vR0.first;    
  +B56:   #1
        if vR1==null goto B83;   
  +B60:   #1
        vR0.cpuManager.dump("       ",vR1.content);   [R RR iR.... RRR.] 
        vR1 = vR1.next;    
        goto +B56;   [R RR iR.... ....]
  +B83:   #2
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 15 swaps 6 any 1 found 0 dump
 
 method getFirst()Ljava/lang/Object; {
  +START:   #1
        vR0.enumerator = vR0.first;   
        if vR0.enumerator!=null goto B17;   
  +B15:   #1
        return 0;   
  +B17:   #1
        return vR0.enumerator.content;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 getFirst
 
 method getNext()Ljava/lang/Object; {
  +START:   #1
        if vR0.enumerator==null goto B18;   
  +B7:   #1
        vR0.enumerator = vR0.enumerator.next;   
  +B18:   #1
        if vR0.enumerator!=null goto B27;   
  +B25:   #1
        return 0;   
  +B27:   #1
        return vR0.enumerator.content;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 getNext
 
 method getNewContainer(Ljava/lang/Object;)Ljx/scheduler/LinkedList$ObjectContainer; {
  +START:   #1
        vR2 = vR0.ContainerPool;    
        if vR2!=null goto B64;   
  +B9:   #1
        vR0.ContainerPoolSize = (vR0.ContainerPoolSize+1);   
        if vR0.debug==0 goto B54;   
  +B26:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("LinkedList.getNewContainer: ContainerPool empty, new size: ").append@extra(vR0.ContainerPoolSize).toString@extra());   [R RR iii. RR.] 
  +B54:   #1
        return new jx/scheduler/LinkedList$ObjectContainer(vR0,vR1);   
  +B64:   #1
        vR0.ContainerPool = vR0.ContainerPool.next;   
        vR2.content = vR1;   
        vR2.next = 0;   
        return vR2;   
  +END:   #1
 }
// Register: rd 17/17 wr 9 swaps 3 any 1 found 0 getNewContainer
 
 method releaseContainer(Ljx/scheduler/LinkedList$ObjectContainer;)V {
  +START:   #1
        vR1.next = vR0.ContainerPool;   
        vR0.ContainerPool = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 releaseContainer
}
