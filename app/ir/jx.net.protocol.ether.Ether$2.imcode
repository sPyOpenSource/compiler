class jx/net/protocol/ether/Ether$2 {
 
 method <init>(Ljx/net/protocol/ether/Ether;[BI)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.val$dest = vR2;   
        vR0.val$id = vi3;   
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method processMemory(Ljx/zero/Memory;)Ljx/zero/Memory; {
  +START:   #1
        vR2 = vR1;    
        vR3 = new jx/net/protocol/ether/EtherFormat(vR2);    [ R  i][ R . iRR]
        vR3.insertDestAddress(vR0.val$dest);   [RR R i RR.] 
        vR3.insertSourceAddress(access$000@special(vR0.this$0));   [RR R iRi RR.] 
        vR3.insertType(vR0.val$id);   [RR R iRii iR.] 
        vR4 = access$100@special(vR0.this$0).transmit(vR2);    [RR R iRii.R RR.] [RR R iRiiRR RR.]
        return vR4;   
  +END:   #1
 }
// Register: rd 11/11 wr 10 swaps 3 any 1 found 0 processMemory
 
 method requiresSpace()I {
  +START:   #1
        return requiresSpace@special();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 requiresSpace
 
 method getMTU()I {
  +START:   #1
        return 1000;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getMTU
}
