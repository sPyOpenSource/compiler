class java/util/AbstractList {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method sort(Ljava/util/Comparator;)V {
  +START:   #1
        vR2 = vR0.toArray@this();    [   R] 
        sort@special(vR2,vR1);   [R   RR]
        vR3 = vR0.listIterator@this();    [R   R.] 
        vR4 = vR2;    
        vi5 = vR4.length;    
        vi6 = 0;    
  +B26:   #1
        if vi6>=vi5 goto B61;   
  +B33:   #1
        vR7 = vR4[vi6];    
        vR3.next();   [RRRiiR   R.] 
        vR3.set(vR7);   [RRRiiR   RR] 
        vi6++;   
        goto +B26;   [RRRiiR   ..]
  +B61:   #1
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 7 swaps 0 any 3 found 0 sort
 
 method ensureCapacity(I)V {
  +START:   #1
        if vi1>vR0.elementData.length goto B10;   
  +B9:   #1
        return;   
  +B10:   #1
        vR2 = 0;    
  +B12:   #1
        if vR0.capacityIncrement<=0 goto B32;   
  +B19:   #1
        b0 = (vR0.elementData.length+vR0.capacityIncrement);    
        goto +B39b0;   [R i  ]
  +B32:   #1
        b0 = (vR0.elementData.length*2);    
  +B39b0:   #1 int
        vi3 = b0;    
        if vi3>=vi1 goto B47;   
  +B45:   #1
        vi3 = vi1;    
  +B47:   #1
        vR2 = new java/lang/Object()[vi3];    
  +B52:   #1
        goto +B61;   forward return[Ri i  ..]
  +H55<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        vR2 = new java/lang/Object()[vi1];    
  +B61:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
12 - 52 handler 55 type 10
 }
// Register: rd 12/12 wr 8 swaps 0 any 4 found 0 ensureCapacity
 
 method add(Ljava/lang/Object;)Z {
  +START:   #1
        vR0.ensureCapacity@this((vR0.elementCount+1));   [  i iR] 
        vR0.elementData[vR0.elementCount] = vR1;   
        vR0.elementCount = (vR0.elementCount+1);   
        return 1;   
  +END:   #1
 }
// Register: rd 7/7 wr 1 swaps 1 any 1 found 0 add
 
 method add(ILjava/lang/Object;)V {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 add
 
 method iterator()Ljava/util/Iterator; {
  -START:   #1
        throw new java/lang/Error("ITERATOR");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 iterator
 
 method remove(I)Ljava/lang/Object; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 remove
 
 method size()I {
  +START:   #1
        return vR0.elementCount;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method listIterator()Ljava/util/ListIterator; {
  +START:   #1
        return vR0.listIterator@this(0);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 listIterator
 
 method listIterator(I)Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/Error("Object method not implemented");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method indexOf(Ljava/lang/Object;)I {
  +START:   #1
        vR2 = vR0.listIterator@this();    [   R] 
        if vR1!=null goto B34;   
  +B9:   #1
        if vR2.hasNext()==0 goto B63;   
  +B18:   #1
        if vR2.next()!=null goto B9;   
  +B27:   #1
        return vR2.previousIndex();   
  +B34:   #2
        if vR2.hasNext()==0 goto B63;   
  +B43:   #1
        if vR1.equals(vR2.next())==0 goto B34;   
  +B56:   #1
        return vR2.previousIndex();   
  +B63:   #2
        return -1;   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 1 any 1 found 0 indexOf
 
 method lastIndexOf(Ljava/lang/Object;)I {
  +START:   #1
        vR2 = vR0.listIterator@this(vR0.size@this());    [  i iR] 
        if vR1!=null goto B38;   
  +B13:   #1
        if vR2.hasPrevious()==0 goto B67;   
  +B22:   #1
        if vR2.previous()!=null goto B13;   
  +B31:   #1
        return vR2.nextIndex();   
  +B38:   #2
        if vR2.hasPrevious()==0 goto B67;   
  +B47:   #1
        if vR1.equals(vR2.previous())==0 goto B38;   
  +B60:   #1
        return vR2.nextIndex();   
  +B67:   #2
        return -1;   
  +END:   #1
 }
// Register: rd 10/10 wr 3 swaps 2 any 1 found 0 lastIndexOf
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 set
 
 method subList(II)Ljava/util/List; {
  -START:   #1
        throw new java/lang/Error("Object method not implemented");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 subList
}
