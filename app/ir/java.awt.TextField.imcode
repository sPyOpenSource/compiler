class java/awt/TextField {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special("",1);   [  i iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>(Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR1.length@extra());   [  i iRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>(I)V {
  +START:   #1
        vR0.<init>@special("",vi1);   [  i iRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>(Ljava/lang/String;I)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        vR0.columns = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method getColumns()I {
  +START:   #1
        return vR0.columns;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getColumns
 
 method setColumns(I)V {
  +START:   #1
        if vi1>=0 goto B31;   
  -B4:   #1
        b0 = new java/lang/IllegalArgumentException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra("Value is less than zero: ").append@extra(vi1).toString@extra());   [ RRR ii. RR.] 
        throw b0;   
  +B31:   #1
        vR0.columns = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 7 swaps 2 any 2 found 0 setColumns
 
 method getEchoChar()C {
  +START:   #1
        return vR0.echoChar;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getEchoChar
 
 method setEchoChar(C)V {
  +START:   #1
        vR0.echoChar = vi1;   
        vR2 = 0;    
        if vR2==null goto B18;   
  +B11:   #1
        vR2.setEchoChar(vi1);   [R   iR] 
  +B18:   #1
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 setEchoChar
 
 method setEchoCharacter(C)V {
  +START:   #1
        vR0.setEchoChar@this(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 setEchoCharacter
 
 method echoCharIsSet()Z {
  +START:   #1
        if vR0.echoChar!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 echoCharIsSet
 
 method getMinimumSize()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getMinimumSize@this(vR0.getColumns@this());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 getMinimumSize
 
 method getMinimumSize(I)Ljava/awt/Dimension; {
  +START:   #1
        vR2 = 0;    
        if vR2!=null goto B8;   
  +B6:   #1
        return 0;   
  +B8:   #1
        return vR2.getMinimumSize(vi1);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 1 found 0 getMinimumSize
 
 method minimumSize()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getMinimumSize@this(vR0.getColumns@this());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 minimumSize
 
 method minimumSize(I)Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getMinimumSize@this(vi1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 minimumSize
 
 method getPreferredSize()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getPreferredSize@this(vR0.getColumns@this());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 getPreferredSize
 
 method getPreferredSize(I)Ljava/awt/Dimension; {
  +START:   #1
        vR2 = 0;    
        if vR2!=null goto B8;   
  +B6:   #1
        return 0;   
  +B8:   #1
        return vR2.getPreferredSize(vi1);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 1 found 0 getPreferredSize
 
 method preferredSize()Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getPreferredSize@this(vR0.getColumns@this());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 preferredSize
 
 method preferredSize(I)Ljava/awt/Dimension; {
  +START:   #1
        return vR0.getPreferredSize@this(vi1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 preferredSize
 
 method addNotify()V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 addNotify
 
 method addActionListener(Ljava/awt/event/ActionListener;)V {
  +START:   #1
        vR0.action_listeners = add@special(vR0.action_listeners,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 addActionListener
 
 method removeActionListener(Ljava/awt/event/ActionListener;)V {
  +START:   #1
        vR0.action_listeners = remove@special(vR0.action_listeners,vR1);   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 removeActionListener
 
 method processEvent(Ljava/awt/AWTEvent;)V {
  +START:   #1
        if (vR1 instanceof java/awt/event/ActionEvent)==0 goto B18;   
  +B7:   #1
        vR0.processActionEvent@this((java/awt/event/ActionEvent)(vR1));   [   RR] 
        goto +B23;   forward return[   ..]
  +B18:   #1
        vR0.processEvent@special(vR1);   [   RR] 
  +B23:   #1
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 1 processEvent
 
 method dispatchEventImpl(Ljava/awt/AWTEvent;)V {
  +START:   #1
        vR0.dispatchEventImpl@special(vR1);   [   RR] 
        if vR1.id>1001 goto B50;   
  +B15:   #1
        if vR1.id<1001 goto B50;   
  +B25:   #1
        if vR0.action_listeners!=null goto B45;   
  +B32:   #1
        if compare((vR0.eventMask & 128),0)==0 goto B50;   
  +B45:   #1
        vR0.processEvent@this(vR1);   [   RR] 
  +B50:   #3
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 dispatchEventImpl
 
 method processActionEvent(Ljava/awt/event/ActionEvent;)V {
  +START:   #1
        if vR0.action_listeners==null goto B17;   
  +B7:   #1
        vR0.action_listeners.actionPerformed(vR1);   [   RR] 
  +B17:   #1
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 processActionEvent
 
 method paramString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("(columns=").append@extra(vR0.getColumns@this()).append@extra(",echoChar=").append@extra(vR0.getEchoChar@this()).toString@extra();   
  +END:   #1
 }
// Register: rd 4/4 wr 12 swaps 5 any 0 found 0 paramString
}
