class java/awt/FontMetrics {
 
 method <init>(Ljava/awt/Font;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.font = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
 
 method getFont()Ljava/awt/Font; {
  +START:   #1
        return vR0.font;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getFont
 
 method getLeading()I {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getLeading
 
 method getAscent()I {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getAscent
 
 method getDescent()I {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDescent
 
 method getHeight()I {
  +START:   #1
        return ((vR0.getAscent@this()+vR0.getDescent@this())+vR0.getLeading@this());   
  +END:   #1
 }
// Register: rd 5/5 wr 2 swaps 0 any 0 found 0 getHeight
 
 method getMaxAscent()I {
  +START:   #1
        return vR0.getAscent@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMaxAscent
 
 method getMaxDescent()I {
  +START:   #1
        return vR0.getDescent@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMaxDescent
 
 method getMaxDecent()I {
  +START:   #1
        return vR0.getMaxDescent@this();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMaxDecent
 
 method getMaxAdvance()I {
  +START:   #1
        return -1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getMaxAdvance
 
 method charWidth(I)I {
  +START:   #1
        return vR0.charWidth@this((char)vi1);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 charWidth
 
 method charWidth(C)I {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 charWidth
 
 method stringWidth(Ljava/lang/String;)I {
  +START:   #1
        vR2 = new char[vR1.length@extra()];    
        vR1.getChars@extra(0,vR1.length@extra(),vR2,0);   [R  i iRiiR] 
        return vR0.charsWidth@this(vR2,0,vR2.length);   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 2 any 0 found 0 stringWidth
 
 method charsWidth([CII)I {
  +START:   #1
        vi4 = 0;    
        vi5 = vi2;    
  +B6:   #1
        if vi5>=vi3 goto B28;   
  +B12:   #1
        vi4 = vR0.charWidth@this(vR1[vi5]);    [ii  i cR] 
        vi5++;   
        goto +B6;   [ii  i ..]
  +B28:   #1
        return vi4;   
  +END:   #1
 }
// Register: rd 8/8 wr 5 swaps 1 any 3 found 0 charsWidth
 
 method bytesWidth([BII)I {
  +START:   #1
        vi4 = 0;    
        vi5 = vi2;    
  +B6:   #1
        if vi5>=vi3 goto B29;   
  +B12:   #1
        vi4 = vR0.charWidth@this((char)vR1[vi5]);    [ii  i bR] 
        vi5++;   
        goto +B6;   [ii  i ..]
  +B29:   #1
        return vi4;   
  +END:   #1
 }
// Register: rd 8/8 wr 5 swaps 1 any 3 found 0 bytesWidth
 
 method getWidths()[I {
  +START:   #1
        return new int[256];   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getWidths
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this()).append@extra("[font=").append@extra(vR0.font).append@extra(",ascent=").append@extra(vR0.getAscent@this()).append@extra(",descent=").append@extra(vR0.getDescent@this()).append@extra(",height=").append@extra(vR0.getHeight@this()).append@extra("]").toString@extra();   
  +END:   #1
 }
// Register: rd 6/6 wr 21 swaps 10 any 0 found 0 toString
}
