class bioide/IDEDeviceImpl {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ RRR  R] 
        vR0.inited = 0;   
        vR0.drives = new bioide/Drive()[2];   
        if vR0.inited==0 goto B25;   
  +B24:   #1
        return;   
  +B25:   #1
        vR0.inited = 1;   
        init@special();   [ RRR  ..]
        b1 = new bioide/MyTimer();    [ RRR  i.][ RRR  iR]
        vR0.myTimer = b1;   
        b1 = new bioide/PCIBus();    [ RRR  i.][ RRR  iR]
        vR0.pcibus = b1;   
        vR0.controllers = new bioide/Controller()[2];   
        vi1 = 0;    
  +B65:   #1
        if vi1>=2 goto B91;   
  +B70:   #1
        b0 = vR0.controllers;    
        b2 = new bioide/Controller(vR0,vi1);    [ RRR  i.][ RRR . iiRR]
        b0[vi1] = b2;   
        vi1++;   
        goto +B65;   [i RRR . ....]
  +B91:   #1
        ultraDmaSupported = 0;   
        vR0.probeCmosForDrives@special();   [i RRR . R...] 
        vi1 = 0;    
  +B101:   #1
        if vi1>=2 goto B244;   
  +B106:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR . i...][ RRR . iR..]
        b0.println(b1.append@extra("Try controller ").append@extra(vi1).toString@extra());   [i RRR ii. RR..] 
        if vR0.controllers[vi1].identify()!=0 goto B146;   
  +B143:   #1
        goto +B238;   [i RRR ... ....]
  +B146:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR ... i...][ RRR ... iR..]
        b0.println(b1.append@extra("Check controller ").append@extra(vi1).toString@extra());   [i RRR ii. RR..] 
        if vR0.controllers[vi1].isPresent()==0 goto B238;   
  +B183:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RRR ... i...][ RRR ... iR..]
        b0.println(b1.append@extra("Setup controller ").append@extra(vi1).toString@extra());   [i RRR ii. RR..] 
        vR0.controllers[vi1].setup();   [i RRR ii. R...] 
        arraycopy@special(vR0.controllers[vi1].drives,0,vR0.drives,(vi1*1),1);   [i RRR iiRRi iiRiR]
  +B238:   #2
        vi1++;   
        goto +B101;   [i RRR ..... .....]
  +B244:   #1
        out.println("IDEDeviceImpl done");   [i RRR i.... RR...] 
        return;   
  +END:   #1
 }
// Register: rd 39/39 wr 33 swaps 7 any 5 found 0 <init>
 
 method getDrives()[Lbioide/Drive; {
  +START:   #1
        return vR0.drives;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDrives
 
 method probeCmosForDrives()V {
  +START:   #1
        vR2 = new bioide/CmosData();    [ R  i][ R  iR]
        ports.outb(112,18);   [?R R . iiR] 
        vi1 = ports.inb(113);    [?R R . iR.] 
        vi3 = 0;    
  +B33:   #1
        if vi3>=1 goto B77;   
  +B38:   #1
        vR4 = vR0.controllers[0].drives[vi3];    
        if (vi1 & (240 >> (vi3*4)))<=0 goto B71;   
  +B63:   #1
        if vR4.present!=0 goto B71;   
  +B71:   #2
        vi3++;   
        goto +B33;   [iRiR R . ...]
  +B77:   #1
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 7 swaps 0 any 3 found 0 probeCmosForDrives
 
 method probeForTriton(III)Z {
  +START:   #1
        vi4 = 1;    
        vi9 = ((vi2 << 16) | vi1);    
        vi10 = 0;    
  +B14:   #1
        if vi10>=vi4 goto B281;   
  +B21:   #1
        vi11 = 0;    
  +B24:   #1
        if vi11>=32 goto B275;   
  +B31:   #1
        vi5 = vR0.pcibus.readConfig(vi10,vi11,0,0);    [i????iii RR  iiiiR] 
        if vi5==-1 goto B269;   
  +B52:   #1
        if vi5!=0 goto B60;   
  +B57:   #1
        goto +B269;   [ii???iii RR  .....]
  +B60:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i....][ RR  iR...]
        b0.println(b1.append@extra("PCI: found device at bus=").append@extra(vi10).append@extra(", device=").append@extra(vi11).toString@extra());   [ii???iii RR iii... RR...] 
        vi7 = vR0.pcibus.readConfig(vi10,vi11,0,3);    [ii???iii RR iii... iiiiR] 
        vi7 = (vi7 >> 16);    
        if (vi7 & 128)<=0 goto B134;   
  +B127:   #1
        vi6 = 8;    
        goto +B137;   [iiii?iii RR ...... .....]
  +B134:   #1
        vi6 = 1;    
  +B137:   #1
        vi12 = 0;    
  +B140:   #1
        if vi12>=vi6 goto B269;   
  +B147:   #1
        vi5 = vR0.pcibus.readConfig(vi10,vi11,vi12,2);    [iiii?iiii RR ...... iiiiR] 
        if (vi5 >> 16)!=1540 goto B177;   
  +B174:   #1
        vi4++;   
  +B177:   #1
        vi5 = vR0.pcibus.readConfig(vi10,vi11,vi12,0);    [iiii?iiii RR ...... iiiiR] 
        if vi5!=vi9 goto B263;   
  +B200:   #1
        if vR0.initTriton@special((byte)vi10,(byte)vi11,(byte)(vi12+vi3))!=-1 goto B227;   
  +B219:   #1
        out.println("PCI-BIOS-Zugriff fehlgeschlagen");   [iiii?iiii RR i..... RR...] 
  +B227:   #1
        vi8 = vR0.pcibus.readConfig(vR0.pci_bus,vR0.pci_device,vR0.pci_fn,18);    [iiii?iiii RR iii... iiiiR] 
        if (vi8 & 1)<=0 goto B261;   
  +B257:   #1
        ultraDmaSupported = 1;   
  +B261:   #1
        return 1;   
  +B263:   #1
        vi12++;   
        goto +B140;   [iiiiiiiii RR ...... .....]
  +B269:   #3
        vi11++;   
        goto +B24;   [ii???iii RR ...... .....]
  +B275:   #1
        vi10++;   
        goto +B14;   [iiiiiiiii RR ...... .....]
  +B281:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 35/35 wr 32 swaps 6 any 15 found 0 probeForTriton
 
 method initTriton(III)I {
  +START:   #1
        vi4 = 0;    
        vi8 = 0;    
        vR0.pci_bus = vi1;   
        vR0.pci_device = vi2;   
        vR0.pci_fn = vi3;   
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("ide: i82371 PIIX(3,4) (Triton) am PCI-Bus ").append@extra(vi1).append@extra(" (function ").append@extra(vi3).append@extra(")").toString@extra());   [i???i RR iiii.... RR....] 
        vi5 = vR0.pcibus.readConfig(vi1,vi2,vi3,1);    [i???i RR iiii.... iiiiR.] 
        vi5 = (vi5 & 65535);    
        if (vi5 & 1)!=0 goto B97;   
  +B87:   #1
        out.print("initTriton: Register sind nicht aktiv (BIOS), ");   [ii??i RR i....... RR....] 
        return -1;   
  +B97:   #1
        if (vi5 & 4)!=0 goto B115;   
  +B104:   #1
        out.println("initTriton: BM-DMA ist nicht aktiv (BIOS)");   [ii??i RR i....... RR....] 
        goto +B327;   [ii??i RR i....... ......]
  +B115:   #1
        vi10 = 0;    
  +B118:   #1
        if vi10>=2 goto B327;   
  +B124:   #1
        vi8 = vR0.pcibus.readConfig(vi1,vi2,vi3,8);    [iii?iii RR ........ iiiiR.] 
        vi8 = (vi8 & 65520);    
        if vi8==0 goto B156;   
  +B150:   #1
        vi4 = 1;    
        goto +B327;   [iii?iii RR ........ ......]
  +B156:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ........ i.....][ RR ........ iR....]
        b0.println(b1.append@extra("initTriton: BM-DMA Basisregister ist ungueltig (").append@extra(vi8).append@extra(", PnP BIOS Problem)").toString@extra());   [iii?iii RR iii..... RR....] 
        if ports.inb(59392)!=255 goto B327;   
  +B203:   #1
        if vi10!=1 goto B212;   
  +B209:   #1
        goto +B327;   [iii?iii RR ........ ......]
  +B212:   #1
        out.println("initTriton: setze BM-DMA Basisregister auf 59392");   [iii?iii RR i....... RR....] 
        sleepManager.mdelay(50);   [iii?iii RR i....... iR....] 
        vi7 = vR0.pcibus.readConfig(vi1,vi2,vi3,1);    [iii?iii RR i....... iiiiR.] 
        vi7 = ((vi7 & -65536) | (vi5 & -2));    
        vR0.pcibus.writeConfig(vi1,vi2,vi3,1,vi7);   [iiiiiii RR i....... iiiiiR] 
        vR0.pcibus.writeConfig(vi1,vi2,vi3,8,59393);   [iiiiiii RR i....... iiiiiR] 
        vi7 = vR0.pcibus.readConfig(vi1,vi2,vi3,1);    [iiiiiii RR i....... iiiiR.] 
        vi7 = ((vi7 & -65536) | (vi5 | 5));    
        vR0.pcibus.writeConfig(vi1,vi2,vi3,1,vi7);   [iiiiiii RR i....... iiiiiR] 
        vi10++;   
        goto +B118;   [iiiiiii RR i....... ......]
  +B327:   #5
        vi6 = vR0.pcibus.readConfig(vi1,vi2,vi3,16);    [ii??i RR ........ iiiiR.] 
        if (vi6 & -2147450880)!=0 goto B359;   
  +B349:   #1
        out.print("initTriton: beide Register sind inaktiv, ");   [iii?i RR i....... RR....] 
        return -1;   
  +B359:   #1
        vi9 = (vi6 & 65535);    
        if (vi9 & 32768)==0 goto B390;   
  +B374:   #1
        if vi4==0 goto B390;   
  +B379:   #1
        vR0.controllers[0].initTritonDma(vi8);   [iii?ii RR ........ iR....] 
  +B390:   #2
        vi9 = (vi6 >> 16);    
        if (vi9 & 32768)==0 goto B424;   
  +B405:   #1
        if vi4==0 goto B424;   
  +B410:   #1
        vR0.controllers[1].initTritonDma((vi8+8));   [iii?ii RR i....... iR....] 
  +B424:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 40/40 wr 45 swaps 12 any 17 found 0 initTriton
}
