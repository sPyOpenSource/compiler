class jx/net/protocol/ether/Ether$1EtherQueueConsumerThread {
 
 method <init>(Ljx/net/protocol/ether/Ether;Ljx/buffer/multithread/MultiThreadList;Ljx/buffer/multithread/MultiThreadList;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.val$filledBufs = vR2;   
        vR0.val$usableBufs = vR3;   
        vR0.<init>@special("Etherpacket-Queue");   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 1 swaps 1 any 0 found 0 <init>
 
 method run()V {
  +START:   #1
        vi1 = access$200@special(vR0.this$0).createNewEvent("EtherRcv");    [ RR i.R RR] [ RR iRR RR]
  +B15:   #1
        access$200@special(vR0.this$0).recordEvent(vi1);    
        vR2 = (jx/net/protocol/ether/Ether$PacketContainer)(vR0.val$filledBufs.undockFirstElement());    
        vR3 = vR2.getMem();    [iR RR ... R.] 
        if access$300@special(vR0.this$0)!=0 goto B145;   
  +B54:   #1
        vR4 = new jx/net/protocol/ether/EtherFormat(vR3);    [ RR ... i.][ RR ... iRR]
        out.println("Ether packet received.");   [iRRR RR i.. RR.] 
        vR4.dump();   [iRRR RR i.. R..] 
        vi5 = vR4.getType();    [iRRR RR i.. R..] 
        vR6 = new jx/zero/Memory()[3];    
        vR3.split3(requiresSpace@special(),(vR3.size()-requiresSpace@special()),vR6);   [iRRRiR RR iii RiiR] 
        vR7 = vR6[1];    
        vR3 = access$400@special(vR0.this$0).dispatch(vi5,vR7);    [iRRRiRR RR iii.R RiR.] [iRRRiRR RR iiiRR RiR.]
        vR2.setMem(vR3.revoke());   [iRRRiRR RR iiiiR RR..] 
        goto +B487;   [iRRRiRR RR iiiiR ....]
  +B145:   #1
        vR4 = new jx/net/protocol/ether/EtherFormat(vR3,vR2.getOffset());    [ RR ..... i...][ RR ..... iiRR]
        out.println("Ether packet received.");   [iRRRiRR RR i.... RR..] 
        vR4.dump();   [iRRRiRR RR i.... R...] 
        vi5 = vR4.getType();    [iRRRiRR RR i.... R...] 
        vR6 = new jx/net/EtherDataImpl();    [ RR i.... i...][ RR i.... iR..]
        vR6.setSrcAddress(vR4.getSourceAddress());   [iRRRiRR RR ii... RR..] 
        vR6.setDstAddress(vR4.getDestAddress());   [iRRRiRR RR iii.. RR..] 
        vR6.setMemory(vR3);   [iRRRiRR RR iii.. RR..] 
        vR6.setOffset((vR2.getOffset()+requiresSpace@special()));   [iRRRiRR RR iiii. iR..] 
        vR6.setSize((vR2.getSize()-requiresSpace@special()));   [iRRRiRR RR iiiii iR..] 
        lswitch (vi5) { 
           2048:B288
           2054:B335
           32821:B401
           ::B448
        };   
  +B288:   #1
        if access$500@special(vR0.this$0)!=null goto B309;   
  +B298:   #1
        out.println("NO IP consumer");   [iRRRiRR RR i.... RR..] 
        goto +B474;   [iRRRiRR RR i.... ....]
  +B309:   #1
        out.println("Ether: received IP packet");   [iRRRiRR RR i.... RR..] 
        vR3 = access$500@special(vR0.this$0).processEther(vR6);    [iRRRiRR RR i.R.. RR..] [iRRRiRR RR iRR.. RR..]
        goto +B474;   [iRRRiRR RR i.R.. ....]
  +B335:   #1
        if access$600@special(vR0.this$0)!=null goto B356;   
  +B345:   #1
        out.println("NO ARP consumer");   [iRRRiRR RR i.... RR..] 
        goto +B474;   [iRRRiRR RR i.... ....]
  +B356:   #1
        out.println("Ether: received ARP packet");   [iRRRiRR RR i.... RR..] 
        xdump@special(vR6.getMemory(),vR6.getOffset(),16);   [iRRRiRR RR iiR.. iiR.]
        vR3 = access$600@special(vR0.this$0).processEther(vR6);    [iRRRiRR RR iiR.R RR..] [iRRRiRR RR iiRRR RR..]
        goto +B474;   [iRRRiRR RR iiR.R ....]
  +B401:   #1
        if access$700@special(vR0.this$0)!=null goto B422;   
  +B411:   #1
        out.println("NO RARP consumer");   [iRRRiRR RR i.... RR..] 
        goto +B474;   [iRRRiRR RR i.... ....]
  +B422:   #1
        out.println("Ether: received RARP packet");   [iRRRiRR RR i.... RR..] 
        vR3 = access$700@special(vR0.this$0).processEther(vR6);    [iRRRiRR RR i.R.. RR..] [iRRRiRR RR iRR.. RR..]
        goto +B474;   [iRRRiRR RR i.R.. ....]
  +B448:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ..... i...][ RR ..... iR..]
        b0.println(b1.append@extra("Unknown packet. ID=").append@extra(vi5).toString@extra());   [iRRRiRR RR ii... RR..] 
  +B474:   #6
        vR2.setMem(vR3);   [iRRRiRR RR ..... RR..] 
        vR0.val$usableBufs.appendElement(vR2);   [iRRRiRR RR ..... RR..] 
  +B487:   #1
        goto +B15;   [iRRRiRR RR ..... ....]
  +END:   #1
 }
// Register: rd 47/47 wr 68 swaps 17 any 1 found 0 run
}
