class java/text/StringCharacterIterator {
 
 method <init>(Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special(vR1,0,vR1.length@extra(),0);   [  i iiiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>(Ljava/lang/String;I)V {
  +START:   #1
        vR0.<init>@special(vR1,0,vR1.length@extra(),vi2);   [  i iiiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>(Ljava/lang/String;III)V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        vi5 = vR1.length@extra();    [ R  R] 
        if vi5!=0 goto B38;   
  +B15:   #1
        if vi2!=0 goto B28;   
  +B19:   #1
        if vi3!=0 goto B28;   
  +B23:   #1
        if vi4==0 goto B101;   
  -B28:   #2
        throw new java/lang/IllegalArgumentException("Bad parameters");   
  +B38:   #1
        if vi2< 0 goto B48;   
  +B42:   #1
        if vi2<=vi5 goto B58;   
  -B48:   #1
        throw new java/lang/IllegalArgumentException("Bad begin position");   
  +B58:   #1
        if vi3<vi2 goto B69;   
  +B63:   #1
        if vi3<=vi5 goto B79;   
  -B69:   #1
        throw new java/lang/IllegalArgumentException("Bad end position");   
  +B79:   #1
        if vi4<vi2 goto B91;   
  +B85:   #1
        if vi4<=vi3 goto B101;   
  -B91:   #1
        throw new java/lang/IllegalArgumentException("Bad initial index position");   
  +B101:   #2
        vR0.text = vR1;   
        vR0.begin = vi2;   
        vR0.end = vi3;   
        vR0.index = vi4;   
        return;   
  +END:   #1
 }
// Register: rd 29/29 wr 5 swaps 0 any 10 found 0 <init>
 
 method <init>(Ljava/text/StringCharacterIterator;II)V {
  +START:   #1
        vR0.<init>@special(vR1.text,vi2,vi3,vi2);   [  i iiiRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 <init>
 
 method current()C {
  +START:   #1
        if vR0.getIndex@extra()!=vR0.getEndIndex@extra() goto B14;   
  +B11:   #1
        return 65535;   
  +B14:   #1
        return vR0.text.charAt@extra(vR0.getIndex@extra());   
  +END:   #1
 }
// Register: rd 5/5 wr 2 swaps 1 any 0 found 0 current
 
 method next()C {
  +START:   #1
        if vR0.getIndex@extra()!=vR0.getEndIndex@extra() goto B14;   
  +B11:   #1
        return 65535;   
  +B14:   #1
        vR0.index = (vR0.index+1);   
        return vR0.current@extra();   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 0 found 0 next
 
 method previous()C {
  +START:   #1
        if vR0.getIndex@extra()!=vR0.getBeginIndex@extra() goto B14;   
  +B11:   #1
        return 65535;   
  +B14:   #1
        vR0.index = (vR0.index-1);   
        return vR0.current@extra();   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 0 found 0 previous
 
 method first()C {
  +START:   #1
        vR0.index = vR0.getBeginIndex@extra();   
        return vR0.current@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 first
 
 method last()C {
  +START:   #1
        if vR0.getEndIndex@extra()!=vR0.getBeginIndex@extra() goto B14;   
  +B11:   #1
        return 65535;   
  +B14:   #1
        vR0.index = (vR0.getEndIndex@extra()-1);   
        return vR0.current@extra();   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 0 found 0 last
 
 method getIndex()I {
  +START:   #1
        return vR0.index;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getIndex
 
 method setIndex(I)C {
  +START:   #1
        if vi1<vR0.begin goto B16;   
  +B8:   #1
        if vi1<=vR0.end goto B26;   
  -B16:   #1
        throw new java/lang/IllegalArgumentException("Bad index specified");   
  +B26:   #1
        vR0.index = vi1;   
        return vR0.current@extra();   
  +END:   #1
 }
// Register: rd 8/8 wr 1 swaps 0 any 2 found 0 setIndex
 
 method getBeginIndex()I {
  +START:   #1
        return vR0.begin;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getBeginIndex
 
 method getEndIndex()I {
  +START:   #1
        return vR0.end;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getEndIndex
 
 method clone()Ljava/lang/Object; {
  +START:   #1
        return new java/text/StringCharacterIterator(vR0.text,vR0.begin,vR0.end,vR0.index);   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 0 found 0 clone
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1!=null goto B6;   
  +B4:   #1
        return 0;   
  +B6:   #1
        if (vR1 instanceof java/text/StringCharacterIterator)!=0 goto B15;   
  +B13:   #1
        return 0;   
  +B15:   #1
        vR2 = (java/text/StringCharacterIterator)(vR1);    
        if vR2.text.equals@extra(vR0.text)!=0 goto B36;   
  +B34:   #1
        return 0;   
  +B36:   #1
        if vR2.begin==vR0.begin goto B49;   
  +B47:   #1
        return 0;   
  +B49:   #1
        if vR2.end==vR0.end goto B62;   
  +B60:   #1
        return 0;   
  +B62:   #1
        if vR2.index==vR0.index goto B75;   
  +B73:   #1
        return 0;   
  +B75:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 12/12 wr 2 swaps 1 any 2 found 1 equals
 
 method setText(Ljava/lang/String;)V {
  +START:   #1
        vR0.text = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setText
}
