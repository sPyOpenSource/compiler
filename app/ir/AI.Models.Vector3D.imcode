class AI/Models/Vector3D {
 
 method <init>(Ljava/lang/Double;Ljava/lang/Double;Ljava/lang/Double;)V {
  +START:   #1
        vR0.<init>@special(vR1,vR2,vR3);   [   RRRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method getLength()D {
  +START:   #1
        if compare((java/lang/Double)(vR0.x).doubleValue@extra(),0)!=0 goto B45;   
  +B15:   #1
        if compare((java/lang/Double)(vR0.y).doubleValue@extra(),0)!=0 goto B45;   
  +B30:   #1
        if compare((java/lang/Double)(vR0.z).doubleValue@extra(),0)==0 goto B99;   
  +B45:   #2
        return sqrt@special(((pow@special((java/lang/Double)(vR0.x).doubleValue@extra(),jx.classfile.datatypes.BCDouble@f001896)+pow@special((java/lang/Double)(vR0.y).doubleValue@extra(),jx.classfile.datatypes.BCDouble@f001896))+pow@special((java/lang/Double)(vR0.z).doubleValue@extra(),jx.classfile.datatypes.BCDouble@f001896)));   
  +B99:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getLength
 
 method getUnitVector()LAI/Models/Vector3D; {
  +START:   #1
        vd1 = vR0.getLength@this();     
        return new AI/Models/Vector3D(valueOf@special(((java/lang/Double)(vR0.x).doubleValue@extra()/vd1)),valueOf@special(((java/lang/Double)(vR0.y).doubleValue@extra()/vd1)),valueOf@special(((java/lang/Double)(vR0.z).doubleValue@extra()/vd1)));   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getUnitVector
 
 method cross(LAI/Models/Vector3D;)LAI/Models/Vector3D; {
  +START:   #1
        return new AI/Models/Vector3D(valueOf@special((((java/lang/Double)(vR0.y).doubleValue@extra()*(java/lang/Double)(vR1.z).doubleValue@extra())-((java/lang/Double)(vR0.z).doubleValue@extra()*(java/lang/Double)(vR1.y).doubleValue@extra()))),valueOf@special((((java/lang/Double)(vR0.z).doubleValue@extra()*(java/lang/Double)(vR1.x).doubleValue@extra())-((java/lang/Double)(vR0.x).doubleValue@extra()*(java/lang/Double)(vR1.z).doubleValue@extra()))),valueOf@special((((java/lang/Double)(vR0.x).doubleValue@extra()*(java/lang/Double)(vR1.y).doubleValue@extra())-((java/lang/Double)(vR0.y).doubleValue@extra()*(java/lang/Double)(vR1.x).doubleValue@extra()))));   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 cross
 
 method Normalize()V {
  +START:   #1
        vd1 = vR0.getLength@this();     
        vR0.x = valueOf@special(((java/lang/Double)(vR0.x).doubleValue@extra()/vd1));   
        vR0.y = valueOf@special(((java/lang/Double)(vR0.y).doubleValue@extra()/vd1));   
        vR0.z = valueOf@special(((java/lang/Double)(vR0.z).doubleValue@extra()/vd1));   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 Normalize
 
 method Sub(LAI/Models/Vector3D;)V {
  +START:   #1
        vR0.x = valueOf@special(((java/lang/Double)(vR0.x).doubleValue@extra()-(java/lang/Double)(vR1.x).doubleValue@extra()));   
        vR0.y = valueOf@special(((java/lang/Double)(vR0.y).doubleValue@extra()-(java/lang/Double)(vR1.y).doubleValue@extra()));   
        vR0.z = valueOf@special(((java/lang/Double)(vR0.z).doubleValue@extra()-(java/lang/Double)(vR1.z).doubleValue@extra()));   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 Sub
 
 method Dot(LAI/Models/Vector3D;)D {
  +START:   #1
        return ((((java/lang/Double)(vR0.x).doubleValue@extra()*(java/lang/Double)(vR1.x).doubleValue@extra())+((java/lang/Double)(vR0.y).doubleValue@extra()*(java/lang/Double)(vR1.y).doubleValue@extra()))+((java/lang/Double)(vR0.z).doubleValue@extra()*(java/lang/Double)(vR1.z).doubleValue@extra()));   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 Dot
 
 method Display()Ljava/lang/String; {
  +START:   #1
        b0 = "%.2f,%.2f,%.2f";    
        b1 = new java/lang/Object()[3];    
        b1[0] = vR0.x;   
        b1[1] = vR0.y;   
        b1[2] = vR0.z;   
        return format@special(b0,b1);   
  +END:   #1
 }
// Register: rd 8/8 wr 2 swaps 0 any 0 found 0 Display
}
