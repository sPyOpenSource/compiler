class jx/net/format/Format {
 
 method <init>(Ljx/zero/Memory;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.init@this(vR1,vi2);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljx/zero/Memory;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.init@this(vR1,0);   [   iRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method init(Ljx/zero/Memory;I)V {
  +START:   #1
        vR0.buf = vR1;   
        vR0.offset = vi2;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 init
 
 method writeInt(II)V {
  +START:   #1
        vR0.buf.set8(((vR0.offset+vi1)+0),(byte)((vi2 >> 24) & 255));   [  ii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+1),(byte)((vi2 >> 16) & 255));   [  iiii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+2),(byte)((vi2 >> 8) & 255));   [  iiiiii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+3),(byte)(vi2 & 255));   [  iiiiiiii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 16/16 wr 8 swaps 4 any 0 found 0 writeInt
 
 method writeAddress(ILjx/net/IPAddress;)V {
  +START:   #1
        vi3 = vR2.getAddress();    [   R] 
        vR0.buf.set8(((vR0.offset+vi1)+3),(byte)((vi3 >> 24) & 255));   [i  ii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+2),(byte)((vi3 >> 16) & 255));   [i  iiii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+1),(byte)((vi3 >> 8) & 255));   [i  iiiiii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+0),(byte)(vi3 & 255));   [i  iiiiiiii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 17/17 wr 9 swaps 4 any 0 found 0 writeAddress
 
 method writeShort(IS)V {
  +START:   #1
        vR0.buf.set8(((vR0.offset+vi1)+0),(byte)((vi2 >> 8) & 255));   [  ii iiR] 
        vR0.buf.set8(((vR0.offset+vi1)+1),(byte)(vi2 & 255));   [  iiii iiR] 
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 4 swaps 2 any 0 found 0 writeShort
 
 method writeUShort(IS)V {
  +START:   #1
        vR0.writeShort@this(vi1,vi2);   [   iiR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 writeUShort
 
 method writeByte(IB)V {
  +START:   #1
        vR0.buf.set8((vR0.offset+vi1),vi2);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 1 any 0 found 0 writeByte
 
 method writeBytes(I[B)V {
  +START:   #1
        vi3 = 0;    
  +B2:   #1
        if vi3>=vR2.length goto B34;   
  +B8:   #1
        vR0.buf.set8(((vR0.offset+vi1)+vi3),vR2[vi3]);   [i  ib biR] 
        vi3++;   
        goto +B2;   [i  ib ...]
  +B34:   #1
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 4 swaps 1 any 2 found 0 writeBytes
 
 method writeString(ILjava/lang/String;)V {
  +START:   #1
        vR3 = vR2.getBytes@extra();    [   R] 
        vR0.writeByteArray@this(vi1,vR3);   [R   RiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 writeString
 
 method writeIntArray(I[I)V {
  +START:   #1
        vR0.writeInt@this(vi1,vR2.length);   [  i iiR] 
        vi3 = 0;    
  +B9:   #1
        if vi3>=vR2.length goto B35;   
  +B15:   #1
        vR0.writeInt@this(((vi1+4)+(vi3*4)),vR2[vi3]);   [i  ii iiR] 
        vi3++;   
        goto +B9;   [i  ii ...]
  +B35:   #1
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 5 swaps 2 any 2 found 0 writeIntArray
 
 method writeByteArray(I[B)V {
  +START:   #1
        vR0.writeInt@this(vi1,vR2.length);   [  i iiR] 
        vi3 = 0;    
  +B9:   #1
        if vi3>=vR2.length goto B33;   
  +B15:   #1
        vR0.writeByte@this(((vi1+4)+vi3),vR2[vi3]);   [i  ib biR] 
        vi3++;   
        goto +B9;   [i  ib ...]
  +B33:   #1
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 5 swaps 2 any 2 found 0 writeByteArray
 
 method readByte(I)B {
  +START:   #1
        return vR0.buf.get8((vR0.offset+vi1));   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 1 any 0 found 0 readByte
 
 method readUnsignedByte(I)I {
  +START:   #1
        vi2 = vR0.buf.get8((vR0.offset+vi1));    [  i iR] 
        return (vi2 & 255);   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 1 any 0 found 0 readUnsignedByte
 
 method readBytes(I[B)V {
  +START:   #1
        vi3 = 0;    
  +B2:   #1
        if vi3>=vR2.length goto B34;   
  +B8:   #1
        vR2[vi3] = vR0.buf.get8(((vR0.offset+vi1)+vi3));   
        vi3++;   
        goto +B2;   [i  i ..]
  +B34:   #1
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 3 swaps 1 any 2 found 0 readBytes
 
 method readShort(I)S {
  +START:   #1
        vi2 = (vR0.buf.get8(((vR0.offset+vi1)+1)) & 255);    
        vi2 = (vi2 | (vR0.buf.get8((vR0.offset+vi1)) << 8));    
        return (short)vi2;   
  +END:   #1
 }
// Register: rd 9/9 wr 4 swaps 2 any 1 found 1 readShort
 
 method readUnsignedShort(I)I {
  +START:   #1
        vi2 = (vR0.buf.get8(((vR0.offset+vi1)+1)) & 255);    
        vi2 = (vi2 | ((vR0.buf.get8((vR0.offset+vi1)) & 255) << 8));    
        return vi2;   
  +END:   #1
 }
// Register: rd 9/9 wr 4 swaps 2 any 1 found 1 readUnsignedShort
 
 method readByte(Ljx/zero/Memory;I)B {
  +START:   #1
        return vR0.get8(vi1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 readByte
 
 method readShort(Ljx/zero/Memory;I)I {
  +START:   #1
        vi2 = (readByte@special(vR0,(vi1+1)) & 255);    
        vi2 = (vi2+((readByte@special(vR0,vi1) << 8) & 65280));    
        return vi2;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 1 readShort
 
 method readInt(I)I {
  +START:   #1
        vi2 = (vR0.readByte@this((vi1+3)) & 255);    
        vi2 = (vi2 | ((vR0.readByte@this((vi1+2)) << 8) & 65280));    
        vi2 = (vi2 | ((vR0.readByte@this((vi1+1)) << 16) & 16711680));    
        vi2 = (vi2 | ((vR0.readByte@this(vi1) << 24) & -16777216));    
        return vi2;   
  +END:   #1
 }
// Register: rd 14/14 wr 7 swaps 3 any 3 found 3 readInt
 
 method readAddress(I)Ljx/net/IPAddress; {
  +START:   #1
        vi2 = (vR0.buf.get8(((vR0.offset+vi1)+0)) & 255);    
        vi2 = (vi2 | ((vR0.buf.get8(((vR0.offset+vi1)+1)) << 8) & 65280));    
        vi2 = (vi2 | ((vR0.buf.get8(((vR0.offset+vi1)+2)) << 16) & 16711680));    
        vi2 = (vi2 | ((vR0.buf.get8(((vR0.offset+vi1)+3)) << 24) & -16777216));    
        return new jx/net/IPAddress(vi2);   
  +END:   #1
 }
// Register: rd 20/20 wr 9 swaps 4 any 3 found 3 readAddress
 
 method getMemory()Ljx/zero/Memory; {
  +START:   #1
        return vR0.buf;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMemory
 
 method readInt(Ljx/zero/Memory;I)I {
  +START:   #1
        vi2 = (readByte@special(vR0,(vi1+3)) & 255);    
        vi2 = (vi2 | ((readByte@special(vR0,(vi1+2)) << 8) & 65280));    
        vi2 = (vi2 | ((readByte@special(vR0,(vi1+1)) << 16) & 16711680));    
        vi2 = (vi2 | ((readByte@special(vR0,vi1) << 24) & -16777216));    
        return vi2;   
  +END:   #1
 }
// Register: rd 10/10 wr 7 swaps 0 any 3 found 3 readInt
 
 method lengthByte(B)I {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 lengthByte
 
 method lengthShort(S)I {
  +START:   #1
        return 2;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 lengthShort
 
 method lengthInt(I)I {
  +START:   #1
        return 4;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 lengthInt
 
 method lengthIntArray([I)I {
  +START:   #1
        return ((vR0.length*4)+4);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lengthIntArray
 
 method lengthShortArray([S)I {
  +START:   #1
        return ((vR0.length*2)+4);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lengthShortArray
 
 method lengthByteArray([B)I {
  +START:   #1
        return (vR0.length+4);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lengthByteArray
 
 method lengthFixByteArray([BI)I {
  +START:   #1
        return vi1;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lengthFixByteArray
 
 method lengthString(Ljava/lang/String;)I {
  +START:   #1
        vi1 = 4;    
        vi2 = vR0.length@extra();    [i   R] 
        vi1 = (vi1+vi2);    
        if (vi2%4)==0 goto B25;   
  +B17:   #1
        vi1 = (vi1+(4-(vi2%4)));    
  +B25:   #1
        return vi1;   
  +END:   #1
 }
// Register: rd 8/8 wr 3 swaps 0 any 2 found 0 lengthString
 
 method <clinit>()V {
  +START:   #1
        debug = 0;   
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 <clinit>
}
