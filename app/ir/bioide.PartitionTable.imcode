class bioide/PartitionTable {
 
 method <init>(Lbioide/Drive;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.drive = vR1;   
        vR0.readPartitionTable@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 <init>
 
 method getPartitions()[Lbioide/PartitionEntry; {
  +START:   #1
        return vR0.partitions;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getPartitions
 
 method getPartitionSize(I)I {
  +START:   #1
        return vR0.partitions[vi1].size;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 getPartitionSize
 
 method readPartitionTable()V {
  +START:   #1
        out.println("READ PARTIONTABLE");   [ RR i. RR] 
        vR1 = new java/util/Vector();    [ RR i. i.][ RR i. iR]
        vi7 = 0;    
        vi8 = 0;    
        vR3 = new bioide/PartitionEntry(vR0.drive,0,vR0.drive.getCapacity(),0,-1);    [ RR i. i.][ RR i. iiiiiRR]
        vR1.addElement@extra(vR3);   [R?R???ii RR i. RR.....] 
        vR9 = memoryManager.allocAligned(1024,8);    [R?R???ii RR i. iiR....] 
        vR0.drive.readSectors(0,2,vR9,1);   [R?R???iiR RR i. iRiiR..] 
        vR2 = new bioide/MBRData(vR9);    [ RR i. i......][ RR i. iRR....]
        if vR2.magic()==43605 goto B155;   
  -B95:   #1
        out.println("readPartitionTable: Bootsector faulty");   [RRR???iiR RR i. RR.....] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR i. i......][ RR i. iR.....]
        b0.println(b1.append@extra("  magic: ").append@extra(vR2.magic()).append@extra(", expected: ").append@extra(-21931).toString@extra());   [RRR???iiR RR iii..ii. RR.....] 
        xdump@special(vR9);   [RRR???iiR RR iii..ii. R......]
        throw new java/lang/Error();   
  +B155:   #1
        if vR2.isGPT()==0 goto B312;   
  +B162:   #1
        vR0.drive.readSectors(2,2,vR9,1);   [RRR???iiR RR ........ iRiiR..] 
        vR10 = new bioide/PEs(vR9);    [ RR ........ i......][ RR ........ iRR....]
        vi11 = 0;    
  +B188:   #1
        if vi11>=4 goto B292;   
  +B194:   #1
        if vR10.getStart(vi11)==0 goto B286;   
  +B204:   #1
        if vR10.getEnd(vi11)==0 goto B286;   
  +B214:   #1
        vR3 = new bioide/PartitionEntry(vR0.drive,vR10.getStart(vi11),(vR10.getEnd(vi11)-vR10.getStart(vi11)),1,0);    [ RR ........ i......][ RR ........ iiiiiRR]
        vR1.addElement@extra(vR3);   [RRR???iiRRi RR ........ RR.....] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ........ i......][ RR ........ iR.....]
        b0.println(b1.append@extra("found partition: ").append@extra(vR10.getStart(vi11)).toString@extra());   [RRR???iiRRi RR iii..... RR.....] 
  +B286:   #2
        vi11++;   
        goto +B188;   [RRR???iiRRi RR ........ .......]
  +B292:   #1
        vR0.partitions = new bioide/PartitionEntry()[vR1.size@extra()];   
        vR1.copyInto(vR0.partitions);   [RRR???iiRRi RR i....... RR.....] 
        return;   
  +B312:   #1
        vi10 = 0;    
  +B315:   #1
        if vi10>=4 goto B439;   
  +B321:   #1
        vR11 = new bioide/PartitionData(vR9,((vi10*16)+446));    [ RR ........ i......][ RR ........ iiRR...]
        if isExtended@special(vR11.os_indicator())!=0 goto B433;   
  +B352:   #1
        if vR11.os_indicator()==0 goto B433;   
  +B360:   #1
        if vR11.length_in_sectors()==0 goto B433;   
  +B368:   #1
        vR3 = new bioide/PartitionEntry(vR0.drive,vR11.start_sector(),vR11.length_in_sectors(),1,vR11.os_indicator());    [ RR ........ i......][ RR ........ ibiiiRR]
        vR1.addElement@extra(vR3);   [RRR???iiRiR RR ........ RR.....] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ........ i......][ RR ........ iR.....]
        b0.println(b1.append@extra("found partition").append@extra(vR11.start_sector()).toString@extra());   [RRR???iiRiR RR iii..... RR.....] 
        vi7++;   
  +B433:   #3
        vi10++;   
        goto +B315;   [RRR???iiRiR RR ........ .......]
  +B439:   #1
        vi10 = 0;    
  +B442:   #1
        if vi10>=4 goto B915;   
  +B448:   #1
        vR11 = new bioide/PartitionData(vR9,((vi10*16)+446));    [ RR ........ i......][ RR ........ iiRR...]
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ........ i......][ RR ........ iR.....]
        b0.println(b1.append@extra("entry ").append@extra(vi10).append@extra(": os = ").append@extra(osName@special(vR11.os_indicator())).append@extra(", length = ").append@extra(vR11.length_in_sectors()).toString@extra());   [RRR???iiRiR RR iii..biii... RR.....] 
        if isExtended@special(vR11.os_indicator())==0 goto B909;   
  +B534:   #1
        if vR11.length_in_sectors()<=0 goto B909;   
  +B542:   #1
        vi4 = vR11.start_sector();    [RRR???iiRiR RR ............ R......] 
        vi5 = vR11.start_sector();    [RRRi??iiRiR RR ............ R......] 
        if vi5<=0 goto B615;   
  +B561:   #1
        vR3 = new bioide/PartitionEntry(vR0.drive,vi5,vR11.length_in_sectors(),0,vR11.os_indicator());    [ RR ............ i......][ RR ............ ibiiiRR]
        vR1.addElement@extra(vR3);   [RRRii?iiRiR RR ............ RR.....] 
        vi7++;   
        vi12 = vi7;    
  +B598:   #1
        if vi12>=4 goto B615;   
  +B604:   #1
        vR1.addElement@extra(0);   [RRRii?iiRiRi RR ............ RR.....] 
        vi12++;   
        goto +B598;   [RRRii?iiRiRi RR ............ .......]
  +B615:   #2
        out.println("extended partition found");   [RRRii?iiRiRi RR i........... RR.....] 
  +B623:   #1
        if vi5<=0 goto B909;   
  +B628:   #1
        if vi8>=5 goto B909;   
  +B634:   #1
        vi6 = vi5;    
        if vi5<vR0.drive.getCapacity() goto B653;   
  +B650:   #1
        goto +B909;   [RRRiiiiiRiRi RR ............ .......]
  +B653:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ............ i......][ RR ............ iR.....]
        b0.println(b1.append@extra("loading block ").append@extra(vi5).toString@extra());   [RRRiiiiiRiRi RR ii.......... RR.....] 
        vR0.drive.readSectors(vi5,1,vR9,1);   [RRRiiiiiRiRi RR ii.......... iRiiR..] 
        vR2 = new bioide/MBRData(vR9);    [ RR ii.......... i......][ RR ii.......... iRR....]
        if vR2.magic()==-21931 goto B715;   
  +B712:   #1
        goto +B909;   [RRRiiiiiRiRi RR ............ .......]
  +B715:   #1
        out.println("extended partition found");   [RRRiiiiiRiRi RR i........... RR.....] 
        vi12 = 0;    
  +B726:   #1
        if vi12>=2 goto B832;   
  +B732:   #1
        vR11 = new bioide/PartitionData(vR9,((vi12*16)+446));    [ RR ............ i......][ RR ............ iiRR...]
        if isExtended@special(vR11.os_indicator())!=0 goto B826;   
  +B763:   #1
        if vR11.os_indicator()==0 goto B826;   
  +B771:   #1
        if vR11.length_in_sectors()<=0 goto B826;   
  +B779:   #1
        vR3 = new bioide/PartitionEntry(vR0.drive,(vi5+vR11.start_sector()),vR11.length_in_sectors(),1,vR11.os_indicator());    [ RR ............ i......][ RR ............ ibiiiRR]
        vR1.addElement@extra(vR3);   [RRRiiiiiRiRi RR ............ RR.....] 
        out.println("found partition");   [RRRiiiiiRiRi RR i........... RR.....] 
        vi8++;   
  +B826:   #3
        vi12++;   
        goto +B726;   [RRRiiiiiRiRi RR ............ .......]
  +B832:   #1
        vi12 = 0;    
  +B835:   #1
        if vi12>=4 goto B899;   
  +B841:   #1
        vR11 = new bioide/PartitionData(vR9,((vi12*16)+446));    [ RR ............ i......][ RR ............ iiRR...]
        if isExtended@special(vR11.os_indicator())==0 goto B893;   
  +B872:   #1
        if vR11.length_in_sectors()<=0 goto B893;   
  +B880:   #1
        vi5 = (vi4+vR11.start_sector());    
        goto +B899;   [RRRiiiiiRiRi RR ............ .......]
  +B893:   #2
        vi12++;   
        goto +B835;   [RRRiiiiiRiRi RR ............ .......]
  +B899:   #2
        if vi5!=vi6 goto B623;   
  +B906:   #1
        goto +B909;   [RRRiiiiiRiRi RR ............ .......]
  +B909:   #7
        vi10++;   
        goto +B442;   [RRRiiiiiRiRi RR ............ .......]
  +B915:   #1
        vR0.partitions = new bioide/PartitionEntry()[vR1.size@extra()];   
        vR1.copyInto(vR0.partitions);   [RRRiiiiiRiRi RR i........... RR.....] 
        return;   
  +END:   #1
 }
// Register: rd 121/121 wr 110 swaps 25 any 23 found 3 readPartitionTable
 
 method dump()V {
  +START:   #1
        out.println("Partitiontable:");   [ RR i. RR] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR i. i.][ RR i. iR]
        b0.println(b1.append@extra(vR0.alignString@special("Number",11)).append@extra("   ").append@extra(vR0.alignString@special("Start",11)).append@extra("   ").append@extra(vR0.alignString@special("End",11)).append@extra("   ").append@extra(vR0.alignString@special("Size",11)).append@extra("   ").append@extra(vR0.alignString@special("OS",11)).toString@extra());   [ RR iiiiii..iii..iii..iii..i RR.........] 
        vi1 = 1;    
  +B101:   #1
        if vi1>=vR0.partitions.length goto B261;   
  +B110:   #1
        vR2 = vR0.partitions[vi1];    
        if vi1!=5 goto B130;   
  +B122:   #1
        out.print("< ");   [iR RR i....................... RR.........] 
  +B130:   #1
        if vR2==null goto B255;   
  +B134:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR ........................ i..........][ RR ........................ iR.........]
        b0.println(b1.append@extra(vR0.alignString@special(toString@special(vi1),11)).append@extra("   ").append@extra(vR0.alignString@special(toString@special(vR2.start),11)).append@extra("   ").append@extra(vR0.alignString@special(toString@special(((vR2.start+vR2.size)-1)),11)).append@extra("   ").append@extra(vR0.alignString@special(toString@special(vR2.size),11)).append@extra("   ").append@extra(vR0.alignString@special(osName@special((byte)vR2.os),11)).toString@extra());   [iR RR iiiii..iiii..iiii..iiii..ii RR.........] 
  +B255:   #1
        vi1++;   
        goto +B101;   [iR RR ........................... ...........]
  +B261:   #1
        if vR0.partitions.length<=4 goto B278;   
  +B270:   #1
        out.print(">");   [iR RR i.......................... RR.........] 
  +B278:   #1
        out.println("");   [iR RR i.......................... RR.........] 
        return;   
  +END:   #1
 }
// Register: rd 27/27 wr 66 swaps 34 any 4 found 0 dump
 
 method isExtended(B)Z {
  +START:   #1
        if vi0==5 goto B17;   
  +B5:   #1
        if vi0==-123 goto B17;   
  +B11:   #1
        if vi0!=15 goto B21;   
  +B17:   #2
        b0 = 1;    
        goto +B22b0;   forward return[ i  ]
  +B21:   #1
        b0 = 0;    
  +B22b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 3 found 0 isExtended
 
 method osName(B)Ljava/lang/String; {
  +START:   #1
        lswitch (vi0) { 
           -126:B80
           -125:B77
           -123:B74
           0:B68
           5:B71
           11:B86
           15:B83
           ::B89
        };   
  +B68:   #1
        return "unused";   
  +B71:   #1
        return "DOS extended";   
  +B74:   #1
        return "Linux extended";   
  +B77:   #1
        return "Linux";   
  +B80:   #1
        return "Linux Swap";   
  +B83:   #1
        return "Win95 extended";   
  +B86:   #1
        return "Win95 FAT32";   
  +B89:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("unknown (").append@extra(vi0).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 2/2 wr 6 swaps 2 any 1 found 0 osName
 
 method alignString(Ljava/lang/String;I)Ljava/lang/String; {
  +START:   #1
        vR3 = new java/lang/String();    [ R  i][ R  iR]
        vi4 = (vi2-vR1.length@extra());    
        vi5 = 0;    
  +B19:   #1
        if vi5>=vi4 goto B52;   
  +B26:   #1
        b0 = new java/lang/StringBuilder();    [ R  i.][ R  iR]
        vR3 = b0.append@extra(vR3).append@extra(" ").toString@extra();    [Rii R i.. R..] [Rii R iR. RR.] [Rii R iRR RRR] 
        vi5++;   
        goto +B19;   [Rii R i.. ...]
  +B52:   #1
        b0 = new java/lang/StringBuilder();    [ R ... i..][ R ... iR.]
        return b0.append@extra(vR3).append@extra(vR1).toString@extra();   
  +END:   #1
 }
// Register: rd 8/8 wr 12 swaps 1 any 3 found 1 alignString
}
