class java/util/Collections$EmptyMap {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method size()I {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 size
 
 method isEmpty()Z {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 isEmpty
 
 method containsKey(Ljava/lang/Object;)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 containsKey
 
 method containsValue(Ljava/lang/Object;)Z {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 containsValue
 
 method get(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 get
 
 method keySet()Ljava/util/Set; {
  +START:   #1
        return emptySet@special();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 keySet
 
 method values()Ljava/util/Collection; {
  +START:   #1
        return emptySet@special();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 values
 
 method entrySet()Ljava/util/Set; {
  +START:   #1
        return emptySet@special();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 entrySet
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if (vR1 instanceof java/util/Map)==0 goto B23;   
  +B7:   #1
        if (java/util/Map)(vR1).isEmpty()==0 goto B23;   
  +B19:   #1
        b0 = 1;    
        goto +B24b0;   forward return[ i  ..]
  +B23:   #2
        b0 = 0;    
  +B24b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 0 found 1 equals
 
 method hashCode()I {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 hashCode
 
 method getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        return vR2;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getOrDefault
 
 method forEach(Ljava/util/function/BiConsumer;)V {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 forEach
 
 method replaceAll(Ljava/util/function/BiFunction;)V {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 replaceAll
 
 method putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 putIfAbsent
 
 method remove(Ljava/lang/Object;Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 remove
 
 method replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 replace
 
 method replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 replace
 
 method computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 computeIfAbsent
 
 method computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 computeIfPresent
 
 method compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 compute
 
 method merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object; {
  -START:   #1
        throw new java/util/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 merge
 
 method readResolve()Ljava/lang/Object; {
  +START:   #1
        return EMPTY_MAP;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 readResolve
 
 method <init>(Ljava/util/Collections$1;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
}
