class java/lang/invoke/InfoFromMemberName {
 
 method <init>(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/invoke/MemberName;B)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.member = vR2;   
        vR0.referenceKind = vi3;   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 0 swaps 0 any 0 found 0 <init>
 
 method getDeclaringClass()Ljava/lang/Class; {
  +START:   #1
        return vR0.member.getDeclaringClass@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDeclaringClass
 
 method getName()Ljava/lang/String; {
  +START:   #1
        return vR0.member.getName@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getName
 
 method getMethodType()Ljava/lang/invoke/MethodType; {
  +START:   #1
        return vR0.member.getMethodOrFieldType@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMethodType
 
 method getModifiers()I {
  +START:   #1
        return vR0.member.getModifiers@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getModifiers
 
 method getReferenceKind()I {
  +START:   #1
        return vR0.referenceKind;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getReferenceKind
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return "";   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 toString
 
 method reflectAs(Ljava/lang/Class;Ljava/lang/invoke/MethodHandles$Lookup;)Ljava/lang/reflect/Member; {
  +START:   #1
        if vR0.member.isMethodHandleInvoke@extra()==0 goto B30;   
  +B10:   #1
        if vR0.member.isVarargs@extra()!=0 goto B30;   
  -B20:   #1
        throw new java/lang/IllegalArgumentException("cannot reflect signature polymorphic method");   
  -B30:   #2
        throw new java/lang/Error("NOT IMPLEMENTED");   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 reflectAs
 
 method reflectUnchecked()Ljava/lang/reflect/Member; {
  -START:   #1
        vi1 = (byte)vR0.getReferenceKind@extra();    
        vR2 = vR0.getDeclaringClass@extra();    [i R  R] 
        vi3 = isPublic@special(vR0.getModifiers@extra());    [iR R i i]
        throw new java/lang/Error("NOT IMPLEMENTED");   
  +END:   #1
 }
// Register: rd 4/4 wr 5 swaps 0 any 0 found 0 reflectUnchecked
 
 method convertToMemberName(BLjava/lang/reflect/Member;)Ljava/lang/invoke/MemberName; {
  +START:   #1
        if (vR1 instanceof java/lang/reflect/Method)==0 goto B32;   
  +B7:   #1
        if vi0!=7 goto B17;   
  +B13:   #1
        b0 = 1;    
        goto +B18b0;   [ i  ..]
  +B17:   #1
        b0 = 0;    
  +B18b0:   #1 int
        vi2 = b0;    
        return new java/lang/invoke/MemberName((java/lang/reflect/Method)(vR1),vi2);   
  +B32:   #1
        if (vR1 instanceof java/lang/reflect/Constructor)==0 goto B51;   
  +B39:   #1
        return new java/lang/invoke/MemberName((java/lang/reflect/Constructor)(vR1));   
  -B51:   #1
        throw new java/lang/InternalError(vR1.getClass().getName@extra());   
  +END:   #1
 }
// Register: rd 13/13 wr 6 swaps 0 any 2 found 2 convertToMemberName
}
