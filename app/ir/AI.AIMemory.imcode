class AI/AIMemory {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        vR0.length = 101;   
        b1 = new java/util/TreeMap();    [ RR  i][ RR  iR]
        vR0.tree = b1;   
  +B21:   #1
        main@special(new java/lang/String()[0]);   [ RR R R.]
        b0 = new java/lang/String()[2];    
        b0[0] = "BioRAM";   
        b0[1] = "FS";   
        main@special(b0);   [ RR R R.]
        vR1 = (jx/zero/MemoryManager)(lookup@special("MemoryManager"));    
        vR0.ports = (jx/zero/Ports)(lookup@special("Ports"));   
        vR0.buffer = vR1.alloc(512);   
  +B79:   #1
        goto +B83;   forward return[R RR .... ..]
  +H82<caught exception>:   #1 reference
        vR1 = <caught exception>;    
  +B83:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
21 - 79 handler 82 type 61
21 - 79 handler 82 type 63
 }
// Register: rd 12/12 wr 9 swaps 0 any 0 found 0 <init>
 
 method init(Ljx/devices/bio/BlockIO;Ljx/fs/buffer/BufferCache;Ljx/zero/Clock;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 init
 
 method name()Ljava/lang/String; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 name
 
 method getRootNode()Ljx/fs/Node; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getRootNode
 
 method init(Z)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 init
 
 method release()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 release
 
 method build(Ljava/lang/String;I)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 build
 
 method check()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 check
 
 method getNode(I)Ljx/fs/Node; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getNode
 
 method getDeviceID()I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getDeviceID
 
 method getHash(Ljava/lang/String;)I {
  +START:   #1
        vi2 = 0;    
        vi3 = 0;    
  +B4:   #1
        if vi3>=vR1.length@extra() goto B26;   
  +B12:   #1
        vi2 = (vi2+vR1.charAt@extra(vi3));    
        vi3++;   
        goto +B4;   [ii   ..]
  +B26:   #1
        return (((vi2*vR1.length@extra())%101)+100);   
  +END:   #1
 }
// Register: rd 11/11 wr 5 swaps 0 any 3 found 3 getHash
 
 method read(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        vR2 = vR0.tree;    
        vR3 = vR1.split@extra("/");    [R  i RR] 
        vi4 = vR3.length;    
        vi5 = 0;    
  +B19:   #1
        if vi5>=vi4 goto B48;   
  +B26:   #1
        vR6 = vR3[vi5];    
        vR2 = (java/util/TreeMap)(vR2.get(vR6));    
        vi5++;   
        goto +B19;   [RRiiR  . ..]
  +B48:   #1
        if vR2==null goto B122;   
  +B52:   #1
        vR3 = (jx/zero/MemoryManager)(lookup@special("MemoryManager"));    
        vR4 = vR3.alloc(512);    [RRiiR  R. iR] 
        vR0.drive.readSectors(vR0.getHash@this(vR1),1,vR4,1);   [RRRiR  Ri iRiiR] 
        vi5 = 0;    
  +B93:   #1
        if vi5>=512 goto B122;   
  +B101:   #1
        out.print(vR4.get8(vi5));   [RRRiR  i. bR...] 
        vi5++;   
        goto +B93;   [RRRiR  i. .....]
  +B122:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 18/18 wr 18 swaps 3 any 5 found 0 read
 
 method write(Ljava/lang/String;)V {
  +START:   #1
        vR2 = vR0.tree;    
        vR3 = vR1.split@extra("/");    [R R i RR] 
        vi4 = vR3.length;    
        vi5 = 0;    
  +B19:   #1
        if vi5>=vi4 goto B81;   
  +B26:   #1
        vR6 = vR3[vi5];    
        if vR2.containsKey(vR6)==0 goto B54;   
  +B41:   #1
        vR2 = (java/util/TreeMap)(vR2.get(vR6));    
        goto +B75;   [RRiiR R . ..]
  +B54:   #1
        vR7 = new java/util/TreeMap();    [ R . i.][ R . iR]
        vR2.put(vR6,vR7);   [RRiiRR R . RRR] 
        vR2 = vR7;    
  +B75:   #1
        vi5++;   
        goto +B19;   [RRiiR R . ...]
  +B81:   #1
        vR0.drive.writeSectors(vR0.getHash@this(vR1),1,vR0.buffer,1);   [RRiiRR R iR iRiiR] 
        return;   
  +END:   #1
 }
// Register: rd 16/16 wr 13 swaps 2 any 3 found 0 write
 
 method ImportBackup(Ljava/lang/String;)V {
  +START:   #1
        vR0.buffer.set8(0,60);   [   iiR] 
        vR0.write@this("ai.txt");   [  i RR.] 
        vR0.read@this("ai.txt");   [  ii RR.] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 2 any 0 found 0 ImportBackup
}
