class AI/AIMemory {
 
 method <init>(Ljx/zero/Naming;)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        b1 = new java/util/TreeMap();    [ RR  i][ RR  iR]
        vR0.root = b1;   
        vR0.length = 101;   
        b1 = new jx/InitialNaming(vR1);    [ RR  i.][ RR . iRR]
        vR0.naming = b1;   
  +B33:   #1
        b0 = new java/lang/String()[4];    
        b0[0] = "TimerManager";   
        b0[1] = "BioRAM";   
        b0[2] = "0";   
        b0[3] = "1";   
        main@special(b0);   [ RR . R..]
        b0 = new java/lang/String()[2];    
        b0[0] = "BioRAM";   
        b0[1] = "FS";   
        main@special(b0);   [ RR . R..]
        vR0.drive = (jx/devices/bio/BlockIO)(waitUntilPortalAvailable@special(vR1,"BioRAM"));   
        vR0.memoryManager = (jx/zero/MemoryManager)(vR1.lookup("MemoryManager"));   
        vR0.buffer = vR0.memoryManager.alloc(512);   
  +B121:   #1
        goto +B125;   forward return[ RR ... ...]
  +H124<caught exception>:   #1 reference
        vR2 = <caught exception>;    
  +B125:   #1
        return;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
33 - 121 handler 124 type 84
33 - 121 handler 124 type 86
 }
// Register: rd 23/23 wr 10 swaps 1 any 0 found 0 <init>
 
 method init(Ljx/devices/bio/BlockIO;Ljx/fs/buffer/BufferCache;Ljx/zero/Clock;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 init
 
 method name()Ljava/lang/String; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 name
 
 method getRootNode()Ljx/fs/Node; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getRootNode
 
 method init(Z)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 init
 
 method release()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 release
 
 method build(Ljava/lang/String;I)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 build
 
 method check()V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 check
 
 method getNode(I)Ljx/fs/Node; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getNode
 
 method getDeviceID()I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 getDeviceID
 
 method read(Ljava/lang/String;)Ljx/zero/Memory; {
  +START:   #1
        vR2 = vR0.root;    
        vR3 = vR1.split@extra("/");    [R  i RR] 
        vi4 = vR3.length;    
        vi5 = 0;    
  +B19:   #1
        if vi5>=vi4 goto B48;   
  +B26:   #1
        vR6 = vR3[vi5];    
        vR2 = (java/util/TreeMap)(vR2.get(vR6));    
        vi5++;   
        goto +B19;   [RRiiR  . ..]
  +B48:   #1
        if vR2==null goto B104;   
  +B52:   #1
        vR0.drive.readSectors(getHash@special(vR1,101),1,vR0.buffer,1);   [RRiiR  iR iRiiR] 
        vi3 = 0;    
  +B75:   #1
        if vi3>=512 goto B104;   
  +B82:   #1
        out.print(vR0.buffer.get8(vi3));   [RiiiR  i. bR...] 
        vi3++;   
        goto +B75;   [RiiiR  i. .....]
  +B104:   #2
        return vR0.buffer;   
  +END:   #1
 }
// Register: rd 17/17 wr 15 swaps 3 any 5 found 0 read
 
 method write(Ljava/lang/String;)V {
  +START:   #1
        vR2 = vR0.root;    
        vR3 = vR1.split@extra("/");    [R R i RR] 
        vi4 = vR3.length;    
        vi5 = 0;    
  +B19:   #1
        if vi5>=vi4 goto B81;   
  +B26:   #1
        vR6 = vR3[vi5];    
        if vR2.containsKey(vR6)==0 goto B54;   
  +B41:   #1
        vR2 = (java/util/TreeMap)(vR2.get(vR6));    
        goto +B75;   [RRiiR R . ..]
  +B54:   #1
        vR7 = new java/util/TreeMap();    [ R . i.][ R . iR]
        vR2.put(vR6,vR7);   [RRiiRR R . RRR] 
        vR2 = vR7;    
  +B75:   #1
        vi5++;   
        goto +B19;   [RRiiR R . ...]
  +B81:   #1
        vR0.drive.writeSectors(getHash@special(vR1,101),1,vR0.buffer,1);   [RRiiRR R iR iRiiR] 
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 13 swaps 2 any 3 found 0 write
 
 method ImportBackup(Ljava/lang/String;)V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 ImportBackup
 
 method getInitialNaming()Ljx/zero/Naming; {
  +START:   #1
        return vR0.naming;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getInitialNaming
}
