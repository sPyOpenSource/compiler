class jx/synch/nonblocking2/SPSCQueue {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        vR1 = new jx/synch/nonblocking2/SPSCQueue$Node(vR0);    [ R  i][ R . iRR]
        vR0.tail = vR1;   
        vR0.head = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 0 found 0 <init>
 
 method enqueue(Ljava/lang/Object;)V {
  +START:   #1
        vR2 = new jx/synch/nonblocking2/SPSCQueue$Node(vR0);    [ R  i][ R . iRR]
        vR2.value = vR1;   
        vR0.tail.next = vR2;   
        vR0.tail = vR2;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 2 swaps 0 any 0 found 0 enqueue
 
 method dequeue()Ljava/lang/Object; {
  +START:   #1
        vR2 = vR0.head;    
        if vR2!=vR0.tail goto B21;   
  -B13:   #1
        throw new jx/synch/nonblocking2/QueueEmptyException();   
  +B21:   #1
        vR1 = vR2.value;    
        vR0.head = vR2.next;   
        return vR1;   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 1 found 0 dequeue
}
