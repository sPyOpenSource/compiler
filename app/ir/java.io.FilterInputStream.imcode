class java/io/FilterInputStream {
 
 method available()I {
  +START:   #1
        return vR0.in.available();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 available
 
 method close()V {
  +START:   #1
        vR0.in.close();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 close
 
 method mark(I)V {
  +START:   #1
        vR0.in.mark(vi1);   [   iR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 mark
 
 method markSupported()Z {
  +START:   #1
        return vR0.in.markSupported();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 markSupported
 
 method read()I {
  +START:   #1
        return vR0.in.read();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 read
 
 method read([B)I {
  +START:   #1
        return vR0.read@this(vR1,0,vR1.length);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 read
 
 method read([BII)I {
  +START:   #1
        return vR0.in.read(vR1,vi2,vi3);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 read
 
 method reset()V {
  +START:   #1
        vR0.in.reset();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 reset
 
 method skip(J)J {
  +START:   #1
        return vR0.in.skip(vl1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 skip
 
 method <init>(Ljava/io/InputStream;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.in = vR1;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 0 swaps 0 any 0 found 0 <init>
}
