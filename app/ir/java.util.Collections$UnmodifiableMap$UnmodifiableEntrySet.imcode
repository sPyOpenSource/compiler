class java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet {
 
 method <init>(Ljava/util/Set;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method entryConsumer(Ljava/util/function/Consumer;)Ljava/util/function/Consumer; {
  +START:   #1
        b0 = vR0;    
        <operant>;   
        <operant>;   
        <operant>;   
        return 4;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 1 found 0 entryConsumer
 
 method forEach(Ljava/util/function/Consumer;)V {
  +START:   #1
        requireNonNull@special(vR1);   [   R]
        vR0.c.forEach(entryConsumer@special(vR1));   [  i RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 forEach
 
 method spliterator()Ljava/util/Spliterator; {
  +START:   #1
        return new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntrySetSpliterator(vR0.c.spliterator());   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 spliterator
 
 method stream()Ljava/util/stream/Stream; {
  +START:   #1
        return stream@special(vR0.spliterator@this(),0);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 stream
 
 method parallelStream()Ljava/util/stream/Stream; {
  +START:   #1
        return stream@special(vR0.spliterator@this(),1);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 parallelStream
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        return new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1(vR0);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 iterator
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.c.toArray();    [ ??R  R] 
        vi2 = 0;    
  +B12:   #1
        if vi2>=vR1.length goto B40;   
  +B18:   #1
        b2 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry((java/util/Map$Entry)(vR1[vi2]));    [ ??R  i][ ??R .. iRR]
        vR1[vi2] = b2;   
        vi2++;   
        goto +B12;   [Ri ??R .. ...]
  +B40:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 12/12 wr 6 swaps 0 any 3 found 0 toArray
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        if (vR1 instanceof java/util/Map$Entry)!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        b0 = vR0.c;    
        b1 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry((java/util/Map$Entry)(vR1));    [ RR  i.][ RR . iRR]
        return b0.contains(b1);   
  +END:   #1
 }
// Register: rd 7/7 wr 3 swaps 0 any 0 found 1 contains
 
 method containsAll(Ljava/util/Collection;)Z {
  +START:   #1
        vR2 = vR1.iterator();    [   R] 
  +B7:   #1
        if vR2.hasNext()==0 goto B36;   
  +B16:   #1
        vR3 = vR2.next();    [R   R] 
        if vR0.contains@this(vR3)!=0 goto B33;   
  +B31:   #1
        return 0;   
  +B33:   #1
        goto +B7;   [RR   ..]
  +B36:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 containsAll
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1!=vR0 goto B7;   
  +B5:   #1
        return 1;   
  +B7:   #1
        if (vR1 instanceof java/util/Set)!=0 goto B16;   
  +B14:   #1
        return 0;   
  +B16:   #1
        vR2 = (java/util/Set)(vR1);    
        if vR2.size()==vR0.c.size() goto B41;   
  +B39:   #1
        return 0;   
  +B41:   #1
        return vR0.containsAll@this(vR2);   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 0 any 2 found 1 equals
 
 method lambda$entryConsumer$0(Ljava/util/function/Consumer;Ljava/util/Map$Entry;)V {
  +START:   #1
        b1 = new java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry(vR1);    [ ?R  i][ ?R . iRR]
        vR0.accept(b1);   [ ?R . RR.] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 lambda$entryConsumer$0
}
