class jx/shell/Parser {
 
 method <init>(Ljava/lang/String;)V {
  +START:   #1
        vR0.<init>@special();   [ Rii  R] 
        vR0.argv = new java/lang/String()[10];   
        vR2 = vR1.trim@extra();    [ Rii  R.] 
        vi3 = vR2.indexOf@extra(" ",0);    [R Rii i iRR] 
        vR0.argc = 0;   
        if vi3!=-1 goto B42;   
  +B36:   #1
        vR0.kommando = vR2;   
        return;   
  +B42:   #1
        vR0.kommando = vR2.substring@extra(0,vi3);   
        vR2 = vR2.substring@extra(vi3).trim@extra();    [Ri Rii . R..] [Ri Rii R iR.] 
  +B61:   #1
        if vR2.length@extra()<=0 goto B144;   
  +B68:   #1
        if vR0.argc>=10 goto B144;   
  +B77:   #1
        vi3 = vR2.indexOf@extra(" ",0);    [Ri Rii i iRR] 
        if vi3!=-1 goto B110;   
  +B90:   #1
        b0 = vR0.argv;    
        b2 = vR0.argc;    
        b1 = b2;    
        vR0.argc = (b2+1);   
        b0[b1] = vR2;   
        goto +B144;   forward return[Ri Rii . ...]
  +B110:   #1
        b0 = vR0.argv;    
        b2 = vR0.argc;    
        b1 = b2;    
        vR0.argc = (b2+1);   
        b0[b1] = vR2.substring@extra(0,vi3);   
        vR2 = vR2.substring@extra(vi3).trim@extra();    [Ri Rii . R..] [Ri Rii R iR.] 
        goto +B61;   [Ri Rii . ...]
  +B144:   #3
        return;   
  +END:   #1
 }
// Register: rd 32/32 wr 15 swaps 2 any 5 found 0 <init>
 
 method isValid()Z {
  +START:   #1
        if vR0.kommando.length@extra()<=0 goto B14;   
  +B10:   #1
        b0 = 1;    
        goto +B15b0;   forward return[ i  .]
  +B14:   #1
        b0 = 0;    
  +B15b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isValid
 
 method getKommando()Ljava/lang/String; {
  +START:   #1
        return vR0.kommando;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getKommando
 
 method getArgumente()[Ljava/lang/String; {
  +START:   #1
        vR1 = new java/lang/String()[vR0.argc];    
        arraycopy@special(vR0.argv,0,vR1,0,vR0.argc);   [R  Ri iiRiR]
        return vR1;   
  +END:   #1
 }
// Register: rd 4/4 wr 3 swaps 0 any 0 found 0 getArgumente
}
