class java/net/URLConnection {
 
 method setContentHandlerFactory(Ljava/net/ContentHandlerFactory;)V {
  +START:   #1
        if factory==null goto B16;   
  -B6:   #1
        throw new java/lang/Error("The ContentHandlerFactory is already set");   
  +B16:   #1
        factory = vR0;   
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 1 setContentHandlerFactory
 
 method getDefaultAllowUserInteraction()Z {
  +START:   #1
        return def_allow_user_inter;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDefaultAllowUserInteraction
 
 method setDefaultAllowUserInteraction(Z)V {
  +START:   #1
        def_allow_user_inter = vi0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 1 setDefaultAllowUserInteraction
 
 method getDefaultRequestProperty(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        return (java/lang/String)(def_req_props.get(vR0.toLowerCase@extra()));   
  +END:   #1
 }
// Register: rd 2/2 wr 3 swaps 1 any 0 found 0 getDefaultRequestProperty
 
 method setDefaultRequestProperty(Ljava/lang/String;Ljava/lang/String;)V {
  +START:   #1
        def_req_props.put(vR0.toLowerCase@extra(),vR1);   [  i. RRR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 2 swaps 1 any 0 found 0 setDefaultRequestProperty
 
 method guessContentTypeFromName(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        return fileNameMap.getContentTypeFor(vR0.toLowerCase@extra());   
  +END:   #1
 }
// Register: rd 1/1 wr 2 swaps 1 any 0 found 0 guessContentTypeFromName
 
 method guessContentTypeFromStream(Ljava/io/InputStream;)Ljava/lang/String; {
  +START:   #1
        return "application/octet-stream";   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 guessContentTypeFromStream
 
 method getFileNameMap()Ljava/net/FileNameMap; {
  +START:   #1
        return fileNameMap;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getFileNameMap
 
 method setFileNameMap(Ljava/net/FileNameMap;)V {
  +START:   #1
        fileNameMap = vR0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 1 setFileNameMap
 
 method <init>(Ljava/net/URL;)V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        b1 = new java/util/Hashtable(10);    [ ?R  i][ ?R . iiR]
        vR0.req_props = b1;   
        vR0.url = vR1;   
        vR0.allowUserInteraction = def_allow_user_inter;   
        vR0.useCaches = def_use_caches;   
        vR2 = def_req_props.keys();    [ ?R . R..] 
  +B43:   #1
        if vR2.hasMoreElements()==0 goto B88;   
  +B52:   #1
        vR3 = (java/lang/String)(vR2.nextElement());    
        vR4 = (java/lang/String)(def_req_props.get(vR3));    
        vR0.req_props.put(vR3,vR4);   [RRR ?R . RRR] 
        goto +B43;   [RRR ?R . ...]
  +B88:   #1
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 9 swaps 0 any 0 found 0 <init>
 
 method getDefaultUseCaches()Z {
  +START:   #1
        return def_use_caches;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDefaultUseCaches
 
 method setDefaultUseCaches(Z)V {
  +START:   #1
        def_use_caches = vi0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 1 setDefaultUseCaches
 
 method getAllowUserInteraction()Z {
  +START:   #1
        return vR0.allowUserInteraction;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getAllowUserInteraction
 
 method setAllowUserInteraction(Z)V {
  +START:   #1
        vR0.allowUserInteraction = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setAllowUserInteraction
 
 method getDoInput()Z {
  +START:   #1
        return vR0.doInput;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDoInput
 
 method setDoInput(Z)V {
  +START:   #1
        vR0.doInput = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setDoInput
 
 method getDoOutput()Z {
  +START:   #1
        return vR0.doOutput;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDoOutput
 
 method setDoOutput(Z)V {
  +START:   #1
        vR0.doOutput = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setDoOutput
 
 method getUseCaches()Z {
  +START:   #1
        return vR0.useCaches;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getUseCaches
 
 method setUseCaches(Z)V {
  +START:   #1
        vR0.useCaches = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setUseCaches
 
 method getIfModifiedSince()J {
  +START:   #1
        return vR0.ifModifiedSince;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getIfModifiedSince
 
 method setIfModifiedSince(J)V {
  +START:   #1
        vR0.ifModifiedSince = vl1;   
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 setIfModifiedSince
 
 method getRequestProperty(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        return (java/lang/String)(vR0.req_props.get(vR1.toLowerCase@extra()));   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 1 any 0 found 0 getRequestProperty
 
 method setRequestProperty(Ljava/lang/String;Ljava/lang/String;)V {
  +START:   #1
        vR0.req_props.put(vR1.toLowerCase@extra(),vR2);   [  i RRR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 setRequestProperty
 
 method getURL()Ljava/net/URL; {
  +START:   #1
        return vR0.url;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getURL
 
 method getInputStream()Ljava/io/InputStream; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getInputStream
 
 method getOutputStream()Ljava/io/OutputStream; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getOutputStream
 
 method getContentEncoding()Ljava/lang/String; {
  +START:   #1
        return vR0.getHeaderField@this("content-encoding");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 getContentEncoding
 
 method getContentLength()I {
  +START:   #1
        return vR0.getHeaderFieldInt@this("content-length",-1);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 1 any 0 found 0 getContentLength
 
 method getContentType()Ljava/lang/String; {
  +START:   #1
        vR1 = vR0.getHeaderField@this("content-type");    [  i RR] 
        if vR1!=null goto B22;   
  +B11:   #1
        vR1 = guessContentTypeFromName@special(vR0.getURL@this().getFile@extra());    [R  R R.]
  +B22:   #1
        return vR1;   
  +END:   #1
 }
// Register: rd 4/4 wr 5 swaps 1 any 1 found 0 getContentType
 
 method getDate()J {
  +START:   #1
        return vR0.getHeaderFieldDate@this("date",0);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDate
 
 method getExpiration()J {
  +START:   #1
        return vR0.getHeaderFieldDate@this("expires",0);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getExpiration
 
 method getLastModified()J {
  +START:   #1
        return vR0.getHeaderFieldDate@this("last-modified",0);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getLastModified
 
 method getHeaderFieldKey(I)Ljava/lang/String; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getHeaderFieldKey
 
 method getHeaderField(I)Ljava/lang/String; {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getHeaderField
 
 method getHeaderField(Ljava/lang/String;)Ljava/lang/String; {
  +START:   #1
        vi2 = 0;    
  +B2:   #1
        vR3 = vR0.getHeaderFieldKey@this(vi2);    [i   iR] 
        if vR3!=null goto B14;   
  +B12:   #1
        return 0;   
  +B14:   #1
        if vR3.toLowerCase@extra().equals@extra(vR1.toLowerCase@extra())==0 goto B34;   
  +B28:   #1
        return vR0.getHeaderField@this(vi2);   
  +B34:   #1
        vi2++;   
        goto +B2;   [iR  .. ..]
  +END:   #1
 }
// Register: rd 6/6 wr 5 swaps 1 any 2 found 0 getHeaderField
 
 method getHeaderFieldDate(Ljava/lang/String;J)J {
  +START:   #1
        vR4 = vR0.getHeaderField@this(vR1);    [ R  RR] 
        if vR4!=null goto B14;   
  +B12:   #1
        return vl2;   
  +B14:   #1
        vR5 = new java/util/Date(vR4);    [ R  i.][ R . iRR]
        if vR5!=null goto B32;   
  +B30:   #1
        return vl2;   
  +B32:   #1
        return (vR5.getTime()/1000);   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 0 any 2 found 0 getHeaderFieldDate
 
 method getHeaderFieldInt(Ljava/lang/String;I)I {
  +START:   #1
        vR3 = vR0.getHeaderField@this(vR1);    [   RR] 
        if vR3!=null goto B12;   
  +B10:   #1
        return vi2;   
  +B12:   #1
        vi4 = vi2;    
  +B15:   #1
        vi4 = parseInt@special(vR3);    [Ri   R.]
  +B21:   #1
        goto +B28;   forward return[Ri   ..]
  +H24<caught exception>:   #1 reference
        vR5 = <caught exception>;    
        return vi2;   
  +B28:   #1
        return vi4;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
15 - 21 handler 24 type 159
 }
// Register: rd 6/6 wr 4 swaps 0 any 2 found 0 getHeaderFieldInt
 
 method getPermission()Ljava/security/Permission; {
  +START:   #1
        return new java/security/AllPermission();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getPermission
 
 method getContent()Ljava/lang/Object; {
  +START:   #1
        vR1 = vR0.getContentType@this();    [ R  R] 
        vR2 = 0;    
        if factory==null goto B23;   
  +B13:   #1
        vR2 = factory.createContentHandler(vR1);    [RR R . RR] 
  +B23:   #1
        if vR2==null goto B33;   
  +B27:   #1
        return vR2.getContent(vR0);   
  +B33:   #4
        b0 = new java/lang/StringBuilder();    [ R . i.][ R . iR]
        vR3 = forName@special(b0.append@extra("gnu.java.net.content.").append@extra(vR1.replace@extra(47,46)).toString@extra());    [RR R Rii. R..]
        vR4 = vR3.newInstance@extra();    [RRR R Rii. R..] 
        if (vR4 instanceof java/net/ContentHandler)!=0 goto B86;   
  -B77:   #1
        throw new java/net/UnknownServiceException(vR1);   
  +B86:   #1
        vR2 = (java/net/ContentHandler)(vR4);    
        b0 = vR2.getContent(vR0);    [RRRR R .... RR.] 
  +B97b0:   #3 reference
        return b0;   
  +H98<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        goto -B107;   [RRRR R .... ...]
  +H102<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        goto -B107;   [RRRR R .... ...]
  +H106<caught exception>:   #1 reference
        vR3 = <caught exception>;    
  -B107:   #2
        throw new java/net/UnknownServiceException(vR1);   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
33 - 97 handler 98 type 207
33 - 97 handler 102 type 209
33 - 97 handler 106 type 211
 }
// Register: rd 15/15 wr 19 swaps 2 any 2 found 1 getContent
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return vR0.url.toString@extra();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toString
 
 method <clinit>()V {
  +START:   #1
        b0 = new java/net/MimeTypeMapper();    [ R  i][ R  iR]
        fileNameMap = b0;   
        b0 = new java/util/Hashtable();    [ R  i.][ R  iR]
        def_req_props = b0;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 2 <clinit>
}
