class jx/net/protocol/udp/UDP$1 {
 
 method <init>(Ljx/net/protocol/udp/UDP;IILjx/net/PacketsConsumer1;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.val$srcPort = vi2;   
        vR0.val$dstPort = vi3;   
        vR0.val$lowerLayer = vR4;   
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method processMemory(Ljx/zero/Memory;II)Ljx/zero/Memory; {
  +START:   #1
        vR0.this$0.cpuManager.recordEvent(vR0.this$0.event_snd);    
        vR4 = vR1;    
        vi2 = (vi2-requiresSpace@special());    
        vR5 = new jx/net/protocol/udp/UDPFormat(vR4,vi2);    [ R  i][ R . iiRR]
        vR5.insertSourcePort(vR0.val$srcPort);   [RR R i iR..] 
        vR5.insertDestPort(vR0.val$dstPort);   [RR R ii iR..] 
        vR5.insertLength((vi3+8));   [RR R iii iR..] 
        vR6 = vR0.val$lowerLayer.processMemory(vR4,vi2,(requiresSpace@special()+vi3));    [RR R iiii iiRR] 
        return vR6;   
  +END:   #1
 }
// Register: rd 15/15 wr 9 swaps 4 any 2 found 1 processMemory
 
 method requiresSpace()I {
  +START:   #1
        return 8;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 requiresSpace
 
 method getMTU()I {
  +START:   #1
        return 1000;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getMTU
}
