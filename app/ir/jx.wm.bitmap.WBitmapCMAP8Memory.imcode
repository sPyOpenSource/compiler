class jx/wm/bitmap/WBitmapCMAP8Memory {
 
 method init(IIILjx/devices/fb/ColorSpace;)V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("WBitmap::init(").append@extra(vi1).append@extra(", ").append@extra(vi2).append@extra(", ").append@extra(vi3).append@extra(")").toString@extra());   [ RR iiii.i..... RR......] 
        vR0.m_cDisplayDriver = 0;   
        vR0.m_nBytesPerLine = vi1;   
        if vi3==-1 goto B82;   
  +B63:   #1
        if vR0.m_nBytesPerLine<=vi3 goto B77;   
  +B71:   #1
        vR0.m_nBytesPerLine = -1;   
        return;   
  +B77:   #1
        vR0.m_nBytesPerLine = vi3;   
  +B82:   #1
        vR0.m_nSize = (vi2*vR0.m_nBytesPerLine);   
        vR0.m_cMemory = allocMemory@special(vR0.m_nSize);   
        vR0.m_nOffset = 0;   
        vR0.m_eColorSpace = vR4;   
        vR0.m_nWidth = vi1;   
        vR0.m_nHeight = vi2;   
        b1 = new jx/devices/fb/PixelRect(0,0,(vR0.m_nWidth-1),(vR0.m_nHeight-1));    [ RR i.......... i.......][ RR i.......... iiiiiR..]
        vR0.m_cBounds = b1;   
        vR0.m_bIsVideoMemory = 0;   
        return;   
  +END:   #1
 }
// Register: rd 29/29 wr 17 swaps 7 any 1 found 0 init
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.m_eColorSpace.setValue(7);   [   iR] 
        vR0.m_nOffset = 0;   
        vR0.m_nBytesPerLine = 0;   
        vR0.m_nHeight = 0;   
        vR0.m_nWidth = 0;   
        vR0.m_cMemory = 0;   
        vR0.m_cBounds = 0;   
        vR0.m_cDisplayDriver = 0;   
        vR0.m_bIsVideoMemory = 0;   
        return;   
  +END:   #1
 }
// Register: rd 10/10 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(IILjx/devices/fb/ColorSpace;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.init@this(vi1,vi2,vi4,vR3);   [   RiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(II)V {
  +START:   #1
        vR0.<init>@special();   [ ????R  R] 
        b4 = new jx/devices/fb/ColorSpace(7);    [ ????R  i][ ????R . iiR]
        vR0.init@this(vi1,vi2,-1,b4);   [ ????R . RiiiR] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 <init>
 
 method <init>(Ljx/devices/fb/FramebufferDevice;IILjx/devices/fb/ColorSpace;ILjx/zero/Memory;I)V {
  +START:   #1
        vR0.<init>@special();   [ RR  R] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("WBitmap::init(").append@extra(vi2).append@extra(", ").append@extra(vi3).append@extra(", ").append@extra(vi5).append@extra(")").toString@extra());   [ RR iiii.i..... RR......] 
        vR0.m_cDisplayDriver = vR1;   
        vR0.m_nWidth = vi2;   
        vR0.m_nHeight = vi3;   
        vR0.m_eColorSpace = vR4;   
        vR0.m_nBytesPerLine = vi5;   
        vR0.m_cMemory = vR6;   
        vR0.m_nOffset = vi7;   
        vR0.m_nSize = vR6.size();   
        b1 = new jx/devices/fb/PixelRect(0,0,(vR0.m_nWidth-1),(vR0.m_nHeight-1));    [ RR iiii.i..... i.......][ RR iiii.i..... iiiiiR..]
        vR0.m_cBounds = b1;   
        vR0.m_bIsVideoMemory = 1;   
        return;   
  +END:   #1
 }
// Register: rd 25/25 wr 16 swaps 7 any 0 found 0 <init>
 
 method finalize()V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("WBitmap::finalize(").append@extra(vR0).append@extra(")").toString@extra());   [ RR iii.. RR..] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 8 swaps 3 any 0 found 0 finalize
 
 method drawLine_Unsafe(Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelColor;Ljx/devices/fb/DrawingMode;)V {
  +START:   #1
        cClipped.setTo@extra(vR1);   [  . RR] 
        vR2.clip@extra(vR0.m_cBounds);   [  i RR] 
        if vR2.isValid@extra()!=0 goto B23;   
  +B22:   #1
        return;   
  +B23:   #1
        if vR0.clipLine@this(vR2,cClipped)!=0 goto B35;   
  +B34:   #1
        return;   
  +B35:   #1
        if vR0.m_cDisplayDriver==null goto B62;   
  +B42:   #1
        if vR0.m_cDisplayDriver.drawLine(vR1,cClipped,vR3,vR4)!=0 goto B62;   
  +B61:   #1
        return;   
  +B62:   #2
        vR0.startFrameBufferUpdate@this();   [  . R....] 
        vR0.drawLineCMAP8@special(vR1,cClipped,vR3.toRGB16(),vR4);   [  is RsRRR] 
        vR0.endFrameBufferUpdate@this();   [  is R....] 
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 7 swaps 4 any 0 found 0 drawLine_Unsafe
 
 method drawLine(Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelColor;Ljx/devices/fb/DrawingMode;)V {
  +START:   #1
        vR5 = new jx/devices/fb/PixelRect(vR1);    [ RR  i][ RR . iRR]
        vR6 = new jx/devices/fb/PixelRect(vR2);    [ RR . i..][ RR . iRR]
        vR6.clip@extra(vR0.m_cBounds);   [RR RR i RR.] 
        if vR6.isValid@extra()!=0 goto B38;   
  +B37:   #1
        return;   
  +B38:   #1
        if vR0.clipLine@this(vR6,vR5)!=0 goto B50;   
  +B49:   #1
        return;   
  +B50:   #1
        if vR5.m_nX0<vR0.m_cBounds.m_nX0 goto B170;   
  +B65:   #1
        if vR5.m_nX0>vR0.m_cBounds.m_nX1 goto B170;   
  +B80:   #1
        if vR5.m_nX1<vR0.m_cBounds.m_nX0 goto B170;   
  +B95:   #1
        if vR5.m_nX1>vR0.m_cBounds.m_nX1 goto B170;   
  +B110:   #1
        if vR5.m_nY0<vR0.m_cBounds.m_nY0 goto B170;   
  +B125:   #1
        if vR5.m_nY0>vR0.m_cBounds.m_nY1 goto B170;   
  +B140:   #1
        if vR5.m_nY1<vR0.m_cBounds.m_nY0 goto B170;   
  +B155:   #1
        if vR5.m_nY1<=vR0.m_cBounds.m_nY1 goto B208;   
  +B170:   #7
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR . i..][ RR . iR.]
        b0.println(b1.append@extra("BUG() in drawLine ").append@extra(vR5).append@extra(" / ").append@extra(vR0.m_cBounds).toString@extra());   [RR RR iiii... RR...] 
  +B208:   #1
        if vR0.m_cDisplayDriver==null goto B234;   
  +B215:   #1
        if vR0.m_cDisplayDriver.drawLine(vR1,vR5,vR3,vR4)!=0 goto B234;   
  +B233:   #1
        return;   
  +B234:   #2
        vR0.startFrameBufferUpdate@this();   [RR RR ....... R....] 
        vR0.drawLineCMAP8@special(vR1,vR5,vR3.toRGB16(),vR4);   [RR RR i...... RsRRR] 
        vR0.endFrameBufferUpdate@this();   [RR RR i...... R....] 
        return;   
  +END:   #1
 }
// Register: rd 33/33 wr 16 swaps 6 any 0 found 0 drawLine
 
 method fillRect([Ljx/devices/fb/PixelRect;ILjx/devices/fb/PixelColor;Ljx/devices/fb/DrawingMode;)V {
  +START:   #1
        if vR0.m_cDisplayDriver==null goto B25;   
  +B7:   #1
        if vR0.m_cDisplayDriver.fillRect(vR1,vi2,vR3,vR4)!=0 goto B25;   
  +B24:   #1
        return;   
  +B25:   #2
        vR0.startFrameBufferUpdate@this();   [   R....] 
        vR0.endFrameBufferUpdate@this();   [   R....] 
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 fillRect
 
 method fillRect(Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelColor;Ljx/devices/fb/DrawingMode;)V {
  +START:   #1
        vR4 = new jx/devices/fb/PixelRect()[1];    
        vR4[0] = vR1;   
        vR0.fillRect@this(vR4,1,vR2,vR3);   [R   RRiRR] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 1 found 0 fillRect
 
 method drawLineCMAP8(Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;SLjx/devices/fb/DrawingMode;)V {
  -START:   #1
        throw new java/lang/Error("not impl.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 drawLineCMAP8
 
 method fillRectCMAP8([Ljx/devices/fb/PixelRect;ISLjx/devices/fb/DrawingMode;)V {
  -START:   #1
        throw new java/lang/Error("not impl.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 fillRectCMAP8
 
 method bitBlt([Ljx/devices/fb/PixelRect;[Ljx/devices/fb/PixelRect;I)V {
  +START:   #1
        vi8 = 0;    
  +B3:   #3
        if vi8>=vi3 goto B532;   
  +B9:   #1
        vR6 = vR1[vi8];    
        vR7 = vR2[vi8];    
        if vR6.m_nX1>=vR6.m_nX0 goto B40;   
  +B34:   #1
        vi8++;   
        goto +B3;   [??RRi   ]
  +B40:   #1
        if vR6.m_nX0>=0 goto B69;   
  +B48:   #1
        vR7.m_nX0 = (vR7.m_nX0-vR6.m_nX0);   
        vR6.m_nX0 = 0;   
  +B69:   #1
        if vR7.m_nX0>=0 goto B98;   
  +B77:   #1
        vR6.m_nX0 = (vR6.m_nX0-vR7.m_nX0);   
        vR7.m_nX0 = 0;   
  +B98:   #1
        if vR6.m_nY0>=0 goto B127;   
  +B106:   #1
        vR7.m_nY0 = (vR7.m_nY0-vR6.m_nY0);   
        vR6.m_nY0 = 0;   
  +B127:   #1
        if vR7.m_nY0>=0 goto B156;   
  +B135:   #1
        vR6.m_nY0 = (vR6.m_nY0-vR7.m_nY0);   
        vR7.m_nY0 = 0;   
  +B156:   #1
        if vR6.m_nX1<vR0.m_nWidth goto B201;   
  +B168:   #1
        vR7.m_nX1 = (vR7.m_nX1-((vR6.m_nX1-vR0.m_nWidth)+1));   
        vR6.m_nX1 = (vR0.m_nWidth-1);   
  +B201:   #1
        if vR7.m_nX1<vR0.m_nWidth goto B246;   
  +B213:   #1
        vR6.m_nX1 = (vR6.m_nX1-((vR7.m_nX1-vR0.m_nWidth)+1));   
        vR7.m_nX1 = (vR0.m_nWidth-1);   
  +B246:   #1
        if vR6.m_nY1<vR0.m_nHeight goto B291;   
  +B258:   #1
        vR7.m_nY1 = (vR7.m_nY1-((vR6.m_nY1-vR0.m_nHeight)+1));   
        vR6.m_nY1 = (vR0.m_nHeight-1);   
  +B291:   #1
        if vR7.m_nY1<vR0.m_nHeight goto B336;   
  +B303:   #1
        vR6.m_nY1 = (vR6.m_nY1-((vR7.m_nY1-vR0.m_nHeight)+1));   
        vR7.m_nY1 = (vR0.m_nHeight-1);   
  +B336:   #1
        if vR7.m_nX1<vR7.m_nX0 goto B388;   
  +B349:   #1
        if vR7.m_nY1<vR7.m_nY0 goto B388;   
  +B362:   #1
        if vR6.m_nX1<vR6.m_nX0 goto B388;   
  +B375:   #1
        if vR6.m_nY1>=vR6.m_nY0 goto B394;   
  +B388:   #3
        vi8++;   
        goto +B3;   [??RRi   ]
  +B394:   #1
        vi4 = (vR6.m_nX1-vR6.m_nX0);    
        vi5 = (vR7.m_nX1-vR7.m_nX0);    
        if vi4>=vi5 goto B440;   
  +B427:   #1
        vR7.m_nX1 = (vR7.m_nX0+vi4);   
  +B440:   #1
        if vi5>=vi4 goto B460;   
  +B447:   #1
        vR6.m_nX1 = (vR6.m_nX0+vi5);   
  +B460:   #1
        vi4 = (vR6.m_nY1-vR6.m_nY0);    
        vi5 = (vR7.m_nY1-vR7.m_nY0);    
        if vi4>=vi5 goto B506;   
  +B493:   #1
        vR7.m_nY1 = (vR7.m_nY0+vi4);   
  +B506:   #1
        if vi5>=vi4 goto B526;   
  +B513:   #1
        vR6.m_nY1 = (vR6.m_nY0+vi5);   
  +B526:   #1
        vi8++;   
        goto +B3;   [iiRRi   ]
  +B532:   #1
        if vR0.m_cDisplayDriver==null goto B555;   
  +B539:   #1
        if vR0.m_cDisplayDriver.bitBlt(vR1,vR2,vi3)!=0 goto B555;   
  +B554:   #1
        return;   
  +B555:   #2
        vR0.startFrameBufferUpdate@this();   [iiRRi   R...] 
        vi9 = 0;    
  +B562:   #1
        if vi9>=vi3 goto B586;   
  +B568:   #1
        vR0.bitBlt8@special(vR1[vi9],vR2[vi9]);   [iiRRii  iR RRR.] 
        vi9++;   
        goto +B562;   [iiRRii  iR ....]
  +B586:   #1
        vR0.endFrameBufferUpdate@this();   [iiRRii  .. R...] 
        return;   
  +END:   #1
 }
// Register: rd 111/111 wr 14 swaps 1 any 10 found 0 bitBlt
 
 method bitBlt8(Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;)V {
  +START:   #1
        if vR1.top@extra()>=vR2.top@extra() goto B112;   
  +B11:   #1
        vi4 = ((((vR2.bottom@extra()-vR2.top@extra())+vR1.top@extra())*vR0.m_nBytesPerLine)+vR1.left@extra());    
        vi5 = ((vR2.bottom@extra()*vR0.m_nBytesPerLine)+vR2.left@extra());    
        vi3 = vR2.bottom@extra();    [?ii  . R] 
  +B58:   #1
        if vi3<vR2.top@extra() goto B203;   
  +B66:   #1
        vR0.m_cMemory.move(vi5,vi4,(vR2.right@extra()-vR2.left@extra()));   [iii  i iiiR] 
        vi4 = (vi4-vR0.m_nBytesPerLine);    
        vi5 = (vi5-vR0.m_nBytesPerLine);    
        vi3--;   
        goto +B58;   [iii  i ....]
  +B112:   #1
        vi4 = ((vR1.top@extra()*vR0.m_nBytesPerLine)+vR1.left@extra());    
        vi5 = ((vR2.top@extra()*vR0.m_nBytesPerLine)+vR2.left@extra());    
        vi3 = vR2.top@extra();    [iii  . R...] 
  +B149:   #1
        if vi3>vR2.bottom@extra() goto B203;   
  +B157:   #1
        vR0.m_cMemory.move(vi5,vi4,(vR2.right@extra()-vR2.left@extra()));   [iii  i iiiR] 
        vi4 = (vi4+vR0.m_nBytesPerLine);    
        vi5 = (vi5+vR0.m_nBytesPerLine);    
        vi3++;   
        goto +B149;   [iii  i ....]
  +B203:   #2
        return;   
  +END:   #1
 }
// Register: rd 49/49 wr 23 swaps 2 any 8 found 2 bitBlt8
 
 method drawBitmap(Ljx/wm/WBitmap;Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;Ljx/devices/fb/DrawingMode;)V {
  +START:   #1
        if vR3.isValid@extra()!=0 goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        if vR2.isValid@extra()!=0 goto B16;   
  +B15:   #1
        return;   
  +B16:   #1
        vR10 = new jx/devices/fb/PixelRect(vR2);    [ R  i][ R . iRR]
        vR10.clip@extra(vR0.m_cBounds);   [????R R i RR.] 
        vR10.clip@extra(vR4);   [????R R i RR.] 
        if vR10.isValid@extra()!=0 goto B51;   
  +B50:   #1
        return;   
  +B51:   #1
        vR11 = new jx/devices/fb/PixelRect(vR3);    [ R . i..][ R . iRR]
        vR11.clip@extra(vR1.getBounds());   [????RR R i RR.] 
        if vR11.isValid@extra()!=0 goto B79;   
  +B78:   #1
        return;   
  +B79:   #1
        if vR11.width@extra()>=vR10.width@extra() goto B108;   
  +B92:   #1
        vR10.m_nX1 = (vR10.m_nX0+vR11.width@extra());   
  +B108:   #1
        if vR11.height@extra()>=vR10.height@extra() goto B137;   
  +B121:   #1
        vR10.m_nY1 = (vR10.m_nY0+vR11.height@extra());   
  +B137:   #1
        vi12 = 0;    
        if vR11.width@extra()==0 goto B155;   
  +B148:   #1
        if vR2.width@extra()!=0 goto B162;   
  +B155:   #1
        vi7 = 65536;    
        goto +B192;   [?i??RRi R . ...]
  +B162:   #1
        vi7 = ((vR11.width@extra() << 16)/vR2.width@extra());    
        if vR11.width@extra()==vR2.width@extra() goto B192;   
  +B189:   #1
        vi12 = 1;    
  +B192:   #2
        if vR11.height@extra()==0 goto B207;   
  +B200:   #1
        if vR2.height@extra()!=0 goto B214;   
  +B207:   #1
        vi6 = 65536;    
        goto +B244;   [ii??RRi R . ...]
  +B214:   #1
        vi6 = ((vR11.height@extra() << 16)/vR2.height@extra());    
        if vR11.height@extra()==vR2.height@extra() goto B244;   
  +B241:   #1
        vi12 = 1;    
  +B244:   #2
        vi8 = (((vR10.left@extra()-vR2.left@extra())+vR11.left@extra())*vi7);    
        vi9 = (((vR10.top@extra()-vR2.top@extra())+vR11.top@extra())*vi6);    
        vR0.startFrameBufferUpdate@this();   [iiiiRRi R . R..] 
        vR0.drawBitmapCMAP8@this(vR1,vR10,vi7,vi6,vi8,vi9,vR5);   [iiiiRRi R . RiiiiRRR] 
        vR0.endFrameBufferUpdate@this();   [iiiiRRi R . R.......] 
        return;   
  +END:   #1
 }
// Register: rd 58/58 wr 23 swaps 2 any 0 found 0 drawBitmap
 
 method drawBitmapCMAP8(Ljx/wm/WBitmap;Ljx/devices/fb/PixelRect;IIIILjx/devices/fb/DrawingMode;)V {
  -START:   #1
        throw new java/lang/Error("not impl.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 drawBitmapCMAP8
 
 method renderGlyph8(Ljx/wm/Glyph;IILjx/devices/fb/PixelRect;[I)V {
  +START:   #1
        vR10 = new jx/devices/fb/PixelRect(vR1.m_cBounds);    [ b  i][ b . iRR]
        vR10.m_nX0 = (vR10.m_nX0+vi2);   
        vR10.m_nY0 = (vR10.m_nY0+vi3);   
        vR10.m_nX1 = (vR10.m_nX1+(vi2-1));   
        vR10.m_nY1 = (vR10.m_nY1+(vi3-1));   
        vR11 = new jx/devices/fb/PixelRect(vR10);    [ b . i..][ b . iRR]
        vR11.clip@extra(vR4);   [????RR b . RR.] 
        if vR11.isValid@extra()!=0 goto B88;   
  +B87:   #1
        return;   
  +B88:   #1
        vi7 = vR11.top@extra();    [????RR b . R..] 
  +B95:   #1
        if vi7>vR11.bottom@extra() goto B211;   
  +B105:   #1
        vi9 = ((vi7*vR0.m_nBytesPerLine)+vR11.left@extra());    
        vi8 = ((vR11.left@extra()-vR10.left@extra())+((vi7-vR10.top@extra())*vR1.m_nBytesPerLine));    
        vi6 = vR11.left@extra();    [?iiiRR b . R..] 
  +B154:   #1
        if vi6>vR11.right@extra() goto B205;   
  +B164:   #1
        b0 = vR1.m_anRaster[vi8];    
        vi12 = b0;    
        if b0==0 goto B193;   
  +B177:   #1
        vR0.set8@this(vi9,(byte)vR5[(vi12 & 255)]);   [iiiiRRi b i iiR] 
  +B193:   #1
        vi9++;   
        vi8++;   
        vi6++;   
        goto +B154;   [iiiiRRi b . ...]
  +B205:   #1
        vi7++;   
        goto +B95;   [iiiiRRi b . ...]
  +B211:   #1
        return;   
  +END:   #1
 }
// Register: rd 49/49 wr 18 swaps 1 any 9 found 3 renderGlyph8
 
 method renderGlyph(Ljx/wm/Glyph;IILjx/devices/fb/PixelRect;[I)V {
  +START:   #1
        vR6 = new jx/devices/fb/PixelRect(vR4);    [ R  i][ R . iRR]
        vR6.clip@extra(vR0.m_cBounds);   [R R i RR.] 
        vR0.renderGlyph8@this(vR1,vi2,vi3,vR6,vR5);   [R R i RRiiRR] 
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 3 swaps 1 any 0 found 0 renderGlyph
 
 method drawCloneMap(Ljx/wm/WBitmap;Ljx/devices/fb/PixelRect;Ljx/devices/fb/PixelRect;)V {
  +START:   #1
        if vR2.isValid@extra()!=0 goto B8;   
  +B7:   #1
        return;   
  +B8:   #1
        vR7 = new jx/devices/fb/PixelRect(vR2);    [ R  i][ R . iRR]
        vR7.clip@extra(vR0.m_cBounds);   [???R R i RR.] 
        vR7.clip@extra(vR3);   [???R R i RR.] 
        if vR7.isValid@extra()!=0 goto B42;   
  +B41:   #1
        return;   
  +B42:   #1
        vR8 = new jx/devices/fb/PixelRect(vR1.getBounds());    [ R . i..][ R . iRR]
        if vR8.isValid@extra()!=0 goto B64;   
  +B63:   #1
        return;   
  +B64:   #1
        if vR0.isCloneMap@this(vR1)!=0 goto B81;   
  +B72:   #1
        out.println("!!!!!!! is not clone !!!!!!!!!!");   [???RR R i. RR.] 
        return;   
  +B81:   #1
        if vR8.width@extra()>=vR7.width@extra() goto B110;   
  +B94:   #1
        vR7.m_nX1 = (vR7.m_nX0+vR8.width@extra());   
  +B110:   #1
        if vR8.height@extra()>=vR7.height@extra() goto B139;   
  +B123:   #1
        vR7.m_nY1 = (vR7.m_nY0+vR8.height@extra());   
  +B139:   #1
        vi4 = 65536;    
        vi5 = ((vR7.left@extra()-vR2.left@extra())+vR8.left@extra());    
        vi6 = ((vR7.top@extra()-vR2.top@extra())+vR8.top@extra());    
        vR0.startFrameBufferUpdate@this();   [iiiRR R .. R..] 
        vR0.drawBitmapCMAP8@this(vR1,vR7,vi4,vi4,(vi5*vi4),(vi6*vi4),COPY);   [iiiRR R iRi RiiiiRRR] 
        vR0.endFrameBufferUpdate@this();   [iiiRR R iRi R.......] 
        return;   
  +END:   #1
 }
// Register: rd 44/44 wr 22 swaps 3 any 0 found 0 drawCloneMap
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("WBitmapCMAP8(").append@extra(vR0.m_nWidth).append@extra(",").append@extra(vR0.m_nHeight).append@extra(",").append@extra(vR0.m_nBytesPerLine).append@extra(",").append@extra(vR0.m_eColorSpace).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 5/5 wr 19 swaps 13 any 0 found 0 toString
 
 method <clinit>()V {
  +START:   #1
        b0 = new jx/devices/fb/PixelRect();    [ R  i][ R  iR]
        cClipped = b0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 1 <clinit>
}
