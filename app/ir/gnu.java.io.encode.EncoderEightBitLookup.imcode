class gnu/java/io/encode/EncoderEightBitLookup {
 
 method loadTable()V {
  +START:   #1
        encoding_table = new char[65535];   
        vi0 = 0;    
  +B9:   #1
        if vi0>=lookup_table.length goto B53;   
  +B17:   #1
        encoding_table[lookup_table[vi0]] = (char)vi0;   
        if lookup_table[vi0]!=0 goto B47;   
  +B36:   #1
        encoding_table[lookup_table[vi0]] = 65280;   
  +B47:   #1
        vi0++;   
        goto +B9;   [i  .. ..]
  +B53:   #1
        return;   
  +END:   #1
 }
// Register: rd 12/12 wr 7 swaps 0 any 3 found 1 loadTable
 
 method <init>(Ljava/io/OutputStream;)V {
  +START:   #1
        vR0.<init>@special(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method bytesInCharArray([CII)I {
  +START:   #1
        return vi3;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 bytesInCharArray
 
 method convertToBytes([CII[BI)[B {
  +START:   #1
        vi6 = 0;    
  +B3:   #1
        if vi6>=vi3 goto B145;   
  +B9:   #1
        if (encoding_table[vR1[(vi2+vi6)]] & 255)!=0 goto B116;   
  +B26:   #1
        if encoding_table[vR1[(vi2+vi6)]]!=65280 goto B53;   
  +B41:   #1
        vR4[(vi5+vi6)] = 0;   
        goto +B139;   [i RRR  .]
  +B53:   #1
        if vR0.bad_char_set==0 goto B84;   
  +B60:   #1
        vR4[(vi5+vi6)] = (byte)(encoding_table[vR0.bad_char] & 255);   
        goto +B139;   [i RRR  .]
  -B84:   #1
        b0 = new java/io/CharConversionException;    
        b1 = b0;    
        b2 = new java/lang/StringBuilder();    [ RRR  i][ RRR  iR]
        b1.<init>@special(b2.append@extra("Encountered unencodable character: ").append@extra(vR1[(vi2+vi6)]).toString@extra());   [i RRR iii. RR.] 
        throw b0;   
  +B116:   #1
        vR4[(vi5+vi6)] = (byte)(encoding_table[vR1[(vi2+vi6)]] & 255);   
  +B139:   #2
        vi6++;   
        goto +B3;   [i RRR .... ...]
  +B145:   #1
        return vR4;   
  +END:   #1
 }
// Register: rd 31/31 wr 10 swaps 3 any 3 found 0 convertToBytes
 
 method write([CII)V {
  +START:   #1
        vR4 = new byte[vi3];    
        vR0.convertToBytes@this(vR1,vi2,vi3,vR4,0);   [R   iRiiRR] 
        vR0.out.write(vR4);   [R   RR....] 
        return;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 0 found 0 write
}
