class java/security/MessageDigestSpi {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method engineGetDigestLength()I {
  +START:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 engineGetDigestLength
 
 method engineDigest([BII)I {
  +START:   #1
        if vR0.engineGetDigestLength@this()<=vi3 goto B18;   
  -B8:   #1
        throw new java/security/DigestException("Buffer is too small.");   
  +B18:   #1
        vR4 = vR0.engineDigest@this();    [ R . R..] 
        if vR4.length<=vi3 goto B41;   
  -B31:   #1
        throw new java/security/DigestException("Buffer is too small");   
  +B41:   #1
        arraycopy@special(vR4,0,vR1,vi2,vR4.length);   [R R i iiRiR]
        return vR4.length;   
  +END:   #1
 }
// Register: rd 9/9 wr 4 swaps 0 any 0 found 0 engineDigest
 
 method clone()Ljava/lang/Object; {
  +START:   #1
        if (vR0 instanceof java/lang/Cloneable)==0 goto B12;   
  +B7:   #1
        return vR0.clone@special();   
  -B12:   #1
        throw new java/lang/CloneNotSupportedException();   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 clone
}
