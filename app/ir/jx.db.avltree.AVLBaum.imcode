class jx/db/avltree/AVLBaum {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.balance = 0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.inhalt).append@extra("(").append@extra(vR0.balance).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 9 swaps 4 any 0 found 0 toString
 
 method insert(Ljx/db/avltree/Comparable;)Z {
  +START:   #1
        b2 = new jx/db/avltree/AVLBaum$Status();    [ ??R  i][ ??R  iR]
        return vR0.insertAVL@special(vR1,b2);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 insert
 
 method insertAVL(Ljx/db/avltree/Comparable;Ljx/db/avltree/AVLBaum$Status;)Z {
  +START:   #1
        if vR0.empty@this()==0 goto B41;   
  +B7:   #1
        vR0.inhalt = vR1;   
        b1 = new jx/db/avltree/AVLBaum();    [ ?R  i][ ?R  iR]
        vR0.links = b1;   
        b1 = new jx/db/avltree/AVLBaum();    [ ?R  i.][ ?R  iR]
        vR0.rechts = b1;   
        vR2.unbal = 1;   
        return 1;   
  +B41:   #1
        if (jx/db/avltree/Comparable)(vR0.value@this()).compareTo(vR1)!=0 goto B59;   
  +B57:   #1
        return 0;   
  +B59:   #1
        if (jx/db/avltree/Comparable)(vR0.value@this()).compareTo(vR1)<=0 goto B175;   
  +B75:   #1
        vi3 = (jx/db/avltree/AVLBaum)(vR0.left@this()).insertAVL@special(vR1,vR2);    [ ?R . RRR.] 
        if vR2.unbal==0 goto B275;   
  +B95:   #1
        lswitch (vR0.balance) { 
           0:B136
           1:B124
           ::B143
        };   
  +B124:   #1
        vR0.balance = 0;   
        vR2.unbal = 0;   
        return 1;   
  +B136:   #1
        vR0.balance = -1;   
        return 1;   
  +B143:   #1
        if (jx/db/avltree/AVLBaum)(vR0.links).balance!=-1 goto B164;   
  +B157:   #1
        vR0.rotateLL@this();   [i ?R . R...] 
        goto +B168;   [i ?R . ....]
  +B164:   #1
        vR0.rotateLR@this();   [i ?R . R...] 
  +B168:   #1
        vR2.unbal = 0;   
        return 1;   
  +B175:   #1
        vi3 = (jx/db/avltree/AVLBaum)(vR0.right@this()).insertAVL@special(vR1,vR2);    [i ?R . RRR.] 
        if vR2.unbal==0 goto B275;   
  +B195:   #1
        lswitch (vR0.balance) { 
           -1:B224
           0:B236
           ::B243
        };   
  +B224:   #1
        vR0.balance = 0;   
        vR2.unbal = 0;   
        return 1;   
  +B236:   #1
        vR0.balance = 1;   
        return 1;   
  +B243:   #1
        if (jx/db/avltree/AVLBaum)(vR0.rechts).balance!=1 goto B264;   
  +B257:   #1
        vR0.rotateRR@this();   [i ?R . R...] 
        goto +B268;   [i ?R . ....]
  +B264:   #1
        vR0.rotateRL@this();   [i ?R . R...] 
  +B268:   #1
        vR2.unbal = 0;   
        return 1;   
  +B275:   #2
        return vi3;   
  +END:   #1
 }
// Register: rd 37/37 wr 14 swaps 0 any 0 found 0 insertAVL
 
 method rotateLL()V {
  +START:   #1
        vR1 = (jx/db/avltree/AVLBaum)(vR0.links);    
        vR2 = (jx/db/avltree/AVLBaum)(vR0.rechts);    
        vR0.links = vR1.links;   
        vR0.rechts = vR1;   
        vR1.links = vR1.rechts;   
        vR1.rechts = vR2;   
        vR3 = vR1.inhalt;    
        vR1.inhalt = vR0.inhalt;   
        vR0.inhalt = vR3;   
        (jx/db/avltree/AVLBaum)(vR0.rechts).balance = 0;   
        vR0.balance = 0;   
        return;   
  +END:   #1
 }
// Register: rd 21/21 wr 7 swaps 0 any 0 found 0 rotateLL
 
 method rotateLR()V {
  +START:   #1
        vR1 = (jx/db/avltree/AVLBaum)(vR0.links);    
        vR2 = (jx/db/avltree/AVLBaum)(vR1.rechts);    
        vR1.rechts = vR2.links;   
        vR2.links = vR2.rechts;   
        vR2.rechts = vR0.rechts;   
        vR0.rechts = vR2;   
        vR3 = vR0.inhalt;    
        vR0.inhalt = vR0.rechts.inhalt;   
        vR0.rechts.inhalt = vR3;   
        if vR2.balance!=1 goto B91;   
  +B77:   #1
        (jx/db/avltree/AVLBaum)(vR0.links).balance = -1;   
        goto +B102;   [RRR  .. ..]
  +B91:   #1
        (jx/db/avltree/AVLBaum)(vR0.links).balance = 0;   
  +B102:   #1
        if vR2.balance!=-1 goto B124;   
  +B110:   #1
        (jx/db/avltree/AVLBaum)(vR0.rechts).balance = 1;   
        goto +B135;   [RRR  .. ..]
  +B124:   #1
        (jx/db/avltree/AVLBaum)(vR0.rechts).balance = 0;   
  +B135:   #1
        vR0.balance = 0;   
        return;   
  +END:   #1
 }
// Register: rd 32/32 wr 13 swaps 0 any 0 found 0 rotateLR
 
 method rotateRR()V {
  +START:   #1
        vR1 = (jx/db/avltree/AVLBaum)(vR0.rechts);    
        vR2 = (jx/db/avltree/AVLBaum)(vR0.links);    
        vR0.rechts = vR1.rechts;   
        vR0.links = vR1;   
        vR1.rechts = vR1.links;   
        vR1.links = vR2;   
        vR3 = vR1.inhalt;    
        vR1.inhalt = vR0.inhalt;   
        vR0.inhalt = vR3;   
        (jx/db/avltree/AVLBaum)(vR0.links).balance = 0;   
        vR0.balance = 0;   
        return;   
  +END:   #1
 }
// Register: rd 21/21 wr 7 swaps 0 any 0 found 0 rotateRR
 
 method rotateRL()V {
  +START:   #1
        vR1 = (jx/db/avltree/AVLBaum)(vR0.rechts);    
        vR2 = (jx/db/avltree/AVLBaum)(vR1.links);    
        vR1.links = vR2.rechts;   
        vR2.rechts = vR2.links;   
        vR2.links = vR0.links;   
        vR0.links = vR2;   
        vR3 = vR0.inhalt;    
        vR0.inhalt = vR0.links.inhalt;   
        vR0.links.inhalt = vR3;   
        if vR2.balance!=-1 goto B91;   
  +B77:   #1
        (jx/db/avltree/AVLBaum)(vR0.rechts).balance = 1;   
        goto +B102;   [RRR  .. ..]
  +B91:   #1
        (jx/db/avltree/AVLBaum)(vR0.rechts).balance = 0;   
  +B102:   #1
        if vR2.balance!=1 goto B124;   
  +B110:   #1
        (jx/db/avltree/AVLBaum)(vR0.links).balance = -1;   
        goto +B135;   [RRR  .. ..]
  +B124:   #1
        (jx/db/avltree/AVLBaum)(vR0.links).balance = 0;   
  +B135:   #1
        vR0.balance = 0;   
        return;   
  +END:   #1
 }
// Register: rd 32/32 wr 13 swaps 0 any 0 found 0 rotateRL
 
 method delete(Ljx/db/avltree/Comparable;)Z {
  +START:   #1
        b2 = new jx/db/avltree/AVLBaum$Status();    [ ??R  i][ ??R  iR]
        return vR0.deleteAVL@special(vR1,b2);   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 delete
 
 method deleteAVL(Ljx/db/avltree/Comparable;Ljx/db/avltree/AVLBaum$Status;)Z {
  +START:   #1
        if vR0.empty@this()==0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        if (jx/db/avltree/Comparable)(vR0.value@this()).compareTo(vR1)>=0 goto B53;   
  +B25:   #1
        vi3 = (jx/db/avltree/AVLBaum)(vR0.rechts).deleteAVL@special(vR1,vR2);    [  . RRR.] 
        if vR2.unbal!=1 goto B51;   
  +B46:   #1
        vR0.balance2@special(vR2);   [i  . RR..] 
  +B51:   #1
        return vi3;   
  +B53:   #1
        if (jx/db/avltree/Comparable)(vR0.value@this()).compareTo(vR1)<=0 goto B97;   
  +B69:   #1
        vi3 = (jx/db/avltree/AVLBaum)(vR0.links).deleteAVL@special(vR1,vR2);    [i  . RRR.] 
        if vR2.unbal!=1 goto B95;   
  +B90:   #1
        vR0.balance1@special(vR2);   [i  . RR..] 
  +B95:   #1
        return vi3;   
  +B97:   #1
        if vR0.rechts.empty()==0 goto B142;   
  +B107:   #1
        vR0.inhalt = vR0.links.inhalt;   
        vR0.links = vR0.links.links;   
        vR0.balance = 0;   
        vR2.unbal = 1;   
        goto +B214;   forward return[i  . ....]
  +B142:   #1
        if vR0.links.empty()==0 goto B187;   
  +B152:   #1
        vR0.inhalt = vR0.rechts.inhalt;   
        vR0.rechts = vR0.rechts.rechts;   
        vR0.balance = 0;   
        vR2.unbal = 1;   
        goto +B214;   forward return[i  . ....]
  +B187:   #1
        vR0.inhalt = (jx/db/avltree/AVLBaum)(vR0.links).del@special(vR2);   
        if vR2.unbal==0 goto B214;   
  +B209:   #1
        vR0.balance1@special(vR2);   [i  . RR..] 
  +B214:   #3
        return 1;   
  +END:   #1
 }
// Register: rd 34/34 wr 9 swaps 0 any 0 found 0 deleteAVL
 
 method del(Ljx/db/avltree/AVLBaum$Status;)Ljava/lang/Object; {
  +START:   #1
        if vR0.rechts.empty()!=0 goto B37;   
  +B10:   #1
        vR2 = (jx/db/avltree/AVLBaum)(vR0.rechts).del@special(vR1);    [  . RR.] 
        if vR1.unbal==0 goto B74;   
  +B29:   #1
        vR0.balance2@special(vR1);   [R  . RR.] 
        goto +B74;   forward return[R  . ...]
  +B37:   #1
        vR2 = vR0.inhalt;    
        vR0.inhalt = vR0.links.inhalt;   
        vR0.links = vR0.links.links;   
        vR0.balance = 0;   
        vR1.unbal = 1;   
  +B74:   #2
        return vR2;   
  +END:   #1
 }
// Register: rd 13/13 wr 3 swaps 0 any 0 found 0 del
 
 method balance1(Ljx/db/avltree/AVLBaum$Status;)V {
  +START:   #1
        lswitch (vR0.balance) { 
           -1:B32
           0:B40
           ::B53
        };   
  +B32:   #1
        vR0.balance = 0;   
        goto +B104;   forward return[i   ]
  +B40:   #1
        vR0.balance = 1;   
        vR1.unbal = 0;   
        goto +B104;   forward return[i   ]
  +B53:   #1
        vi2 = (jx/db/avltree/AVLBaum)(vR0.rechts).balance;    
        if vi2< 0 goto B100;   
  +B68:   #1
        vR0.rotateRR@this();   [i  . R.] 
        if vi2!=0 goto B104;   
  +B76:   #1
        vR0.balance = -1;   
        (jx/db/avltree/AVLBaum)(vR0.links).balance = 1;   
        vR1.unbal = 0;   
        goto +B104;   forward return[i  .. ..]
  +B100:   #1
        vR0.rotateRL@this();   [i  .. R.] 
  +B104:   #4
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 4 swaps 0 any 2 found 0 balance1
 
 method balance2(Ljx/db/avltree/AVLBaum$Status;)V {
  +START:   #1
        lswitch (vR0.balance) { 
           0:B40
           1:B32
           ::B53
        };   
  +B32:   #1
        vR0.balance = 0;   
        goto +B104;   forward return[i   ]
  +B40:   #1
        vR0.balance = -1;   
        vR1.unbal = 0;   
        goto +B104;   forward return[i   ]
  +B53:   #1
        vi2 = (jx/db/avltree/AVLBaum)(vR0.links).balance;    
        if vi2> 0 goto B100;   
  +B68:   #1
        vR0.rotateLL@this();   [i  . R.] 
        if vi2!=0 goto B104;   
  +B76:   #1
        vR0.balance = 1;   
        (jx/db/avltree/AVLBaum)(vR0.rechts).balance = -1;   
        vR1.unbal = 0;   
        goto +B104;   forward return[i  .. ..]
  +B100:   #1
        vR0.rotateLR@this();   [i  .. R.] 
  +B104:   #4
        return;   
  +END:   #1
 }
// Register: rd 15/15 wr 4 swaps 0 any 2 found 0 balance2
}
