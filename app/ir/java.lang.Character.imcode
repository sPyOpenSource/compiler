class java/lang/Character {
 
 method codePointAt([CI)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 codePointAt
 
 method codePointCountImpl([CII)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 codePointCountImpl
 
 method codePointBefore([CI)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 codePointBefore
 
 method offsetByCodePointsImpl([CIIII)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 offsetByCodePointsImpl
 
 method isBmpCodePoint(I)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 isBmpCodePoint
 
 method isValidCodePoint(I)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 isValidCodePoint
 
 method toSurrogates(I[CI)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 toSurrogates
 
 method isLowSurrogate(C)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 isLowSurrogate
 
 method isHighSurrogate(C)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 isHighSurrogate
 
 method <init>(C)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.fassela = 1;   
        vR0.value = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 <init>
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return valueOf@special(vR0.value);   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 toString
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1==null goto B11;   
  +B4:   #1
        if (vR1 instanceof java/lang/Character)!=0 goto B13;   
  +B11:   #1
        return 0;   
  +B13:   #1
        if (java/lang/Character)(vR1).value!=vR0.value goto B31;   
  +B27:   #1
        b0 = 1;    
        goto +B32b0;   forward return[ i  ..]
  +B31:   #1
        b0 = 0;    
  +B32b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 6/6 wr 1 swaps 0 any 1 found 1 equals
 
 method hashCode()I {
  +START:   #1
        return vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 hashCode
 
 method charValue()C {
  +START:   #1
        return vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 charValue
 
 method isDefined(C)Z {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 isDefined
 
 method isWhitespace(C)Z {
  -START:   #1
        throw new java/lang/Error("NOT IMPLEMENTED");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 isWhitespace
 
 method isLowerCase(C)Z {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        if vi1>=isLowerCaseTable.length goto B27;   
  +B10:   #1
        if vi0!=isLowerCaseTable[vi1] goto B21;   
  +B19:   #1
        return 1;   
  +B21:   #1
        vi1++;   
        goto +B2;   [i   .]
  +B27:   #1
        vi1 = 0;    
  +B29:   #1
        if vi1>=isLowerCaseRangeTable.length goto B67;   
  +B37:   #1
        if vi0<isLowerCaseRangeTable[vi1][0] goto B61;   
  +B48:   #1
        if vi0>isLowerCaseRangeTable[vi1][1] goto B61;   
  +B59:   #1
        return 1;   
  +B61:   #2
        vi1++;   
        goto +B29;   [i   .]
  +B67:   #1
        if (vi0%2)!=0 goto B116;   
  +B73:   #1
        vi1 = 0;    
  +B75:   #1
        if vi1>=isLowerCaseRangeEvenTable.length goto B113;   
  +B83:   #1
        if vi0<isLowerCaseRangeEvenTable[vi1][0] goto B107;   
  +B94:   #1
        if vi0>isLowerCaseRangeEvenTable[vi1][1] goto B107;   
  +B105:   #1
        return 1;   
  +B107:   #2
        vi1++;   
        goto +B75;   [i   .]
  +B113:   #1
        goto +B156;   forward return[i   .]
  +B116:   #1
        vi1 = 0;    
  +B118:   #1
        if vi1>=isLowerCaseRangeOddTable.length goto B156;   
  +B126:   #1
        if vi0<isLowerCaseRangeOddTable[vi1][0] goto B150;   
  +B137:   #1
        if vi0>isLowerCaseRangeOddTable[vi1][1] goto B150;   
  +B148:   #1
        return 1;   
  +B150:   #2
        vi1++;   
        goto +B118;   [i   .]
  +B156:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 34/34 wr 8 swaps 0 any 15 found 11 isLowerCase
 
 method isUpperCase(C)Z {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        if vi1>=isUpperCaseTable.length goto B27;   
  +B10:   #1
        if vi0!=isUpperCaseTable[vi1] goto B21;   
  +B19:   #1
        return 1;   
  +B21:   #1
        vi1++;   
        goto +B2;   [i   .]
  +B27:   #1
        vi1 = 0;    
  +B29:   #1
        if vi1>=isUpperCaseRangeTable.length goto B67;   
  +B37:   #1
        if vi0<isUpperCaseRangeTable[vi1][0] goto B61;   
  +B48:   #1
        if vi0>isUpperCaseRangeTable[vi1][1] goto B61;   
  +B59:   #1
        return 1;   
  +B61:   #2
        vi1++;   
        goto +B29;   [i   .]
  +B67:   #1
        if (vi0%2)!=0 goto B116;   
  +B73:   #1
        vi1 = 0;    
  +B75:   #1
        if vi1>=isUpperCaseRangeEvenTable.length goto B113;   
  +B83:   #1
        if vi0<isUpperCaseRangeEvenTable[vi1][0] goto B107;   
  +B94:   #1
        if vi0>isUpperCaseRangeEvenTable[vi1][1] goto B107;   
  +B105:   #1
        return 1;   
  +B107:   #2
        vi1++;   
        goto +B75;   [i   .]
  +B113:   #1
        goto +B156;   forward return[i   .]
  +B116:   #1
        vi1 = 0;    
  +B118:   #1
        if vi1>=isUpperCaseRangeOddTable.length goto B156;   
  +B126:   #1
        if vi0<isUpperCaseRangeOddTable[vi1][0] goto B150;   
  +B137:   #1
        if vi0>isUpperCaseRangeOddTable[vi1][1] goto B150;   
  +B148:   #1
        return 1;   
  +B150:   #2
        vi1++;   
        goto +B118;   [i   .]
  +B156:   #2
        return 0;   
  +END:   #1
 }
// Register: rd 34/34 wr 8 swaps 0 any 15 found 11 isUpperCase
 
 method isTitleCase(C)Z {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        if vi1>=isTitleCaseTable.length goto B27;   
  +B10:   #1
        if vi0!=isTitleCaseTable[vi1] goto B21;   
  +B19:   #1
        return 1;   
  +B21:   #1
        vi1++;   
        goto +B2;   [i   .]
  +B27:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 3 found 2 isTitleCase
 
 method isDigit(C)Z {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        if vi1>=isDigitRangeTable.length goto B40;   
  +B10:   #1
        if vi0<isDigitRangeTable[vi1][0] goto B34;   
  +B21:   #1
        if vi0>isDigitRangeTable[vi1][1] goto B34;   
  +B32:   #1
        return 1;   
  +B34:   #2
        vi1++;   
        goto +B2;   [i   .]
  +B40:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 0 any 4 found 3 isDigit
 
 method isLetter(C)Z {
  +START:   #1
        if isLetterOrDigit@special(vi0)==0 goto B18;   
  +B7:   #1
        if isDigit@special(vi0)!=0 goto B18;   
  +B14:   #1
        b0 = 1;    
        goto +B19b0;   forward return[ i  .]
  +B18:   #2
        b0 = 0;    
  +B19b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 isLetter
 
 method isLetterOrDigit(C)Z {
  +START:   #1
        vi1 = 0;    
  +B2:   #1
        if vi1>=isLetterOrDigitTable.length goto B27;   
  +B10:   #1
        if vi0!=isLetterOrDigitTable[vi1] goto B21;   
  +B19:   #1
        return 1;   
  +B21:   #1
        vi1++;   
        goto +B2;   [i   .]
  +B27:   #1
        vi1 = 0;    
  +B29:   #1
        if vi1>=isLetterOrDigitRangeTable.length goto B67;   
  +B37:   #1
        if vi0<isLetterOrDigitRangeTable[vi1][0] goto B61;   
  +B48:   #1
        if vi0>isLetterOrDigitRangeTable[vi1][1] goto B61;   
  +B59:   #1
        return 1;   
  +B61:   #2
        vi1++;   
        goto +B29;   [i   .]
  +B67:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 15/15 wr 4 swaps 0 any 7 found 5 isLetterOrDigit
 
 method isJavaLetter(C)Z {
  +START:   #1
        if vi0==36 goto B19;   
  +B6:   #1
        if vi0==95 goto B19;   
  +B12:   #1
        if isLetter@special(vi0)==0 goto B23;   
  +B19:   #2
        b0 = 1;    
        goto +B24b0;   forward return[ i  .]
  +B23:   #1
        b0 = 0;    
  +B24b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 2 found 0 isJavaLetter
 
 method isJavaLetterOrDigit(C)Z {
  +START:   #1
        if vi0==36 goto B19;   
  +B6:   #1
        if vi0==95 goto B19;   
  +B12:   #1
        if isLetterOrDigit@special(vi0)==0 goto B23;   
  +B19:   #2
        b0 = 1;    
        goto +B24b0;   forward return[ i  .]
  +B23:   #1
        b0 = 0;    
  +B24b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 3/3 wr 1 swaps 0 any 2 found 0 isJavaLetterOrDigit
 
 method toTitleCase(C)C {
  +START:   #1
        return vi0;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toTitleCase
 
 method digit(CI)I {
  +START:   #1
        if vi1<2 goto B11;   
  +B5:   #1
        if vi1<=36 goto B13;   
  +B11:   #1
        return -1;   
  +B13:   #1
        if isDigit@special(vi0)==0 goto B36;   
  +B20:   #1
        vi2 = (vi0-48);    
        if vi2>=vi1 goto B34;   
  +B30:   #1
        b0 = vi2;    
        goto +B35b0;   forward return[i i  .]
  +B34:   #1
        b0 = -1;    
  +B35b0:   #1 int
        return b0;   
  +B36:   #1
        if vi0<65 goto B62;   
  +B42:   #1
        if vi0>=(char)((vi1+65)-10) goto B62;   
  +B54:   #1
        return ((vi0-65)+10);   
  +B62:   #2
        if vi0<97 goto B88;   
  +B68:   #1
        if vi0>=(char)((vi1+97)-10) goto B88;   
  +B80:   #1
        return ((vi0-97)+10);   
  +B88:   #2
        return -1;   
  +END:   #1
 }
// Register: rd 15/15 wr 2 swaps 0 any 9 found 0 digit
 
 method forDigit(II)C {
  +START:   #1
        if vi1<2 goto B11;   
  +B5:   #1
        if vi1<=36 goto B13;   
  +B11:   #1
        return 0;   
  +B13:   #1
        if vi0< 0 goto B22;   
  +B17:   #1
        if vi0<vi1 goto B24;   
  +B22:   #1
        return 0;   
  +B24:   #1
        if vi0>=10 goto B36;   
  +B30:   #1
        return (char)(vi0+48);   
  +B36:   #1
        return (char)((vi0+97)-10);   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 5 found 0 forDigit
 
 method isSpace(C)Z {
  +START:   #1
        lswitch (vi0) { 
           9:B52
           10:B52
           12:B52
           13:B52
           32:B52
           ::B54
        };   
  +B52:   #5
        return 1;   
  +B54:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 1 found 0 isSpace
 
 method toLowerCase(C)C {
  +START:   #1
        if vi0<65 goto B21;   
  +B6:   #1
        if vi0>90 goto B21;   
  +B12:   #1
        return (char)((vi0+97)-65);   
  +B21:   #2
        return vi0;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 2 found 0 toLowerCase
 
 method toUpperCase(C)C {
  +START:   #1
        if vi0<97 goto B21;   
  +B6:   #1
        if vi0>122 goto B21;   
  +B12:   #1
        return (char)((vi0-97)-65);   
  +B21:   #2
        return vi0;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 2 found 0 toUpperCase
 
 method <clinit>()V {
  +START:   #1
        TYPE = getPrimitiveClass@special("char");   
        fasela = 1;   
        b0 = new int[1];    
        b0[0] = 1;   
        fasel = b0;   
        b0 = new char[27];    
        b0[0] = 387;   
        b0[1] = 389;   
        b0[2] = 392;   
        b0[3] = 402;   
        b0[4] = 405;   
        b0[5] = 414;   
        b0[6] = 424;   
        b0[7] = 427;   
        b0[8] = 429;   
        b0[9] = 432;   
        b0[10] = 436;   
        b0[11] = 438;   
        b0[12] = 445;   
        b0[13] = 454;   
        b0[14] = 457;   
        b0[15] = 496;   
        b0[16] = 499;   
        b0[17] = 501;   
        b0[18] = 629;   
        b0[19] = 666;   
        b0[20] = 672;   
        b0[21] = 912;   
        b0[22] = 1218;   
        b0[23] = 1220;   
        b0[24] = 1224;   
        b0[25] = 1228;   
        b0[26] = 1273;   
        isLowerCaseTable = b0;   
        b0 = new [C()[47];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 97;   
        b3[1] = 122;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 223;   
        b3[1] = 246;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 248;   
        b3[1] = 255;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 383;   
        b3[1] = 384;   
        b1[3] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 396;   
        b3[1] = 397;   
        b1[4] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 409;   
        b3[1] = 411;   
        b1[5] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 441;   
        b3[1] = 442;   
        b1[6] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 592;   
        b3[1] = 609;   
        b1[7] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 611;   
        b3[1] = 617;   
        b1[8] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 619;   
        b3[1] = 627;   
        b1[9] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 631;   
        b3[1] = 639;   
        b1[10] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 642;   
        b3[1] = 654;   
        b1[11] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 656;   
        b3[1] = 659;   
        b1[12] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 669;   
        b3[1] = 670;   
        b1[13] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 675;   
        b3[1] = 680;   
        b1[14] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 940;   
        b3[1] = 974;   
        b1[15] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 976;   
        b3[1] = 977;   
        b1[16] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 981;   
        b3[1] = 982;   
        b1[17] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1008;   
        b3[1] = 1009;   
        b1[18] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1072;   
        b3[1] = 1103;   
        b1[19] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1105;   
        b3[1] = 1116;   
        b1[20] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1118;   
        b3[1] = 1119;   
        b1[21] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1377;   
        b3[1] = 1415;   
        b1[22] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7830;   
        b3[1] = 7834;   
        b1[23] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7936;   
        b3[1] = 7943;   
        b1[24] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7952;   
        b3[1] = 7957;   
        b1[25] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7968;   
        b3[1] = 7975;   
        b1[26] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7984;   
        b3[1] = 7991;   
        b1[27] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8000;   
        b3[1] = 8005;   
        b1[28] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8016;   
        b3[1] = 8023;   
        b1[29] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8032;   
        b3[1] = 8039;   
        b1[30] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8048;   
        b3[1] = 8061;   
        b1[31] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8064;   
        b3[1] = 8071;   
        b1[32] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8080;   
        b3[1] = 8087;   
        b1[33] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8096;   
        b3[1] = 8103;   
        b1[34] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8112;   
        b3[1] = 8116;   
        b1[35] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8118;   
        b3[1] = 8119;   
        b1[36] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8130;   
        b3[1] = 8132;   
        b1[37] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8134;   
        b3[1] = 8135;   
        b1[38] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8144;   
        b3[1] = 8147;   
        b1[39] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8150;   
        b3[1] = 8151;   
        b1[40] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8160;   
        b3[1] = 8167;   
        b1[41] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8178;   
        b3[1] = 8180;   
        b1[42] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8182;   
        b3[1] = 8183;   
        b1[43] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64256;   
        b3[1] = 64262;   
        b1[44] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64275;   
        b3[1] = 64279;   
        b1[45] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65345;   
        b3[1] = 65370;   
        b1[46] = b3;   
        isLowerCaseRangeTable = b0;   
        b0 = new [C()[12];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 257;   
        b3[1] = 311;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 329;   
        b3[1] = 375;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 417;   
        b3[1] = 421;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 477;   
        b3[1] = 495;   
        b1[3] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 507;   
        b3[1] = 535;   
        b1[4] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 995;   
        b3[1] = 1007;   
        b1[5] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1121;   
        b3[1] = 1153;   
        b1[6] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1169;   
        b3[1] = 1215;   
        b1[7] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1233;   
        b3[1] = 1259;   
        b1[8] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1263;   
        b3[1] = 1269;   
        b1[9] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7681;   
        b3[1] = 7829;   
        b1[10] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7841;   
        b3[1] = 7929;   
        b1[11] = b3;   
        isLowerCaseRangeOddTable = b0;   
        b0 = new [C()[3];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 312;   
        b3[1] = 328;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 378;   
        b3[1] = 382;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 460;   
        b3[1] = 476;   
        b1[2] = b3;   
        isLowerCaseRangeEvenTable = b0;   
        b0 = new char[28];    
        b0[0] = 388;   
        b0[1] = 390;   
        b0[2] = 391;   
        b0[3] = 418;   
        b0[4] = 420;   
        b0[5] = 423;   
        b0[6] = 425;   
        b0[7] = 428;   
        b0[8] = 430;   
        b0[9] = 431;   
        b0[10] = 437;   
        b0[11] = 439;   
        b0[12] = 440;   
        b0[13] = 444;   
        b0[14] = 452;   
        b0[15] = 455;   
        b0[16] = 458;   
        b0[17] = 497;   
        b0[18] = 500;   
        b0[19] = 902;   
        b0[20] = 908;   
        b0[21] = 910;   
        b0[22] = 911;   
        b0[23] = 1217;   
        b0[24] = 1219;   
        b0[25] = 1223;   
        b0[26] = 1227;   
        b0[27] = 1272;   
        isUpperCaseTable = b0;   
        b0 = new [C()[33];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65;   
        b3[1] = 90;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 192;   
        b3[1] = 214;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 216;   
        b3[1] = 222;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 385;   
        b3[1] = 386;   
        b1[3] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 393;   
        b3[1] = 395;   
        b1[4] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 398;   
        b3[1] = 401;   
        b1[5] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 403;   
        b3[1] = 404;   
        b1[6] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 406;   
        b3[1] = 408;   
        b1[7] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 412;   
        b3[1] = 413;   
        b1[8] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 415;   
        b3[1] = 416;   
        b1[9] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 433;   
        b3[1] = 435;   
        b1[10] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 904;   
        b3[1] = 906;   
        b1[11] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 913;   
        b3[1] = 929;   
        b1[12] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 931;   
        b3[1] = 939;   
        b1[13] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1025;   
        b3[1] = 1036;   
        b1[14] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1038;   
        b3[1] = 1071;   
        b1[15] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1329;   
        b3[1] = 1366;   
        b1[16] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 4256;   
        b3[1] = 4293;   
        b1[17] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7944;   
        b3[1] = 7951;   
        b1[18] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7960;   
        b3[1] = 7965;   
        b1[19] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7976;   
        b3[1] = 7983;   
        b1[20] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7992;   
        b3[1] = 7999;   
        b1[21] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8008;   
        b3[1] = 8013;   
        b1[22] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8040;   
        b3[1] = 8047;   
        b1[23] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8072;   
        b3[1] = 8079;   
        b1[24] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8088;   
        b3[1] = 8095;   
        b1[25] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8104;   
        b3[1] = 8111;   
        b1[26] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8120;   
        b3[1] = 8124;   
        b1[27] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8136;   
        b3[1] = 8140;   
        b1[28] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8152;   
        b3[1] = 8155;   
        b1[29] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8168;   
        b3[1] = 8172;   
        b1[30] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8184;   
        b3[1] = 8188;   
        b1[31] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65313;   
        b3[1] = 65338;   
        b1[32] = b3;   
        isUpperCaseRangeTable = b0;   
        b0 = new [C()[4];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 313;   
        b3[1] = 327;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 377;   
        b3[1] = 381;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 461;   
        b3[1] = 475;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8025;   
        b3[1] = 8031;   
        b1[3] = b3;   
        isUpperCaseRangeOddTable = b0;   
        b0 = new [C()[11];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 256;   
        b3[1] = 310;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 330;   
        b3[1] = 376;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 478;   
        b3[1] = 494;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 506;   
        b3[1] = 534;   
        b1[3] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 994;   
        b3[1] = 1006;   
        b1[4] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1120;   
        b3[1] = 1152;   
        b1[5] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1168;   
        b3[1] = 1214;   
        b1[6] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1232;   
        b3[1] = 1258;   
        b1[7] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1262;   
        b3[1] = 1268;   
        b1[8] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7680;   
        b3[1] = 7828;   
        b1[9] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7840;   
        b3[1] = 7928;   
        b1[10] = b3;   
        isUpperCaseRangeEvenTable = b0;   
        b0 = new char[4];    
        b0[0] = 453;   
        b0[1] = 456;   
        b0[2] = 459;   
        b0[3] = 498;   
        isTitleCaseTable = b0;   
        b0 = new [C()[15];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 48;   
        b3[1] = 57;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1632;   
        b3[1] = 1641;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1776;   
        b3[1] = 1785;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2406;   
        b3[1] = 2415;   
        b1[3] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2534;   
        b3[1] = 2543;   
        b1[4] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2662;   
        b3[1] = 2671;   
        b1[5] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2790;   
        b3[1] = 2799;   
        b1[6] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2918;   
        b3[1] = 2927;   
        b1[7] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3047;   
        b3[1] = 3055;   
        b1[8] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3174;   
        b3[1] = 3183;   
        b1[9] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3302;   
        b3[1] = 3311;   
        b1[10] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3430;   
        b3[1] = 3439;   
        b1[11] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3664;   
        b3[1] = 3673;   
        b1[12] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3792;   
        b3[1] = 3801;   
        b1[13] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65296;   
        b3[1] = 65305;   
        b1[14] = b3;   
        isDigitRangeTable = b0;   
        b0 = new char[52];    
        b0[0] = 890;   
        b0[1] = 894;   
        b0[2] = 908;   
        b0[3] = 910;   
        b0[4] = 986;   
        b0[5] = 988;   
        b0[6] = 990;   
        b0[7] = 992;   
        b0[8] = 1417;   
        b0[9] = 1548;   
        b0[10] = 1563;   
        b0[11] = 1567;   
        b0[12] = 1569;   
        b0[13] = 2482;   
        b0[14] = 2492;   
        b0[15] = 2494;   
        b0[16] = 2519;   
        b0[17] = 2562;   
        b0[18] = 2620;   
        b0[19] = 2622;   
        b0[20] = 2654;   
        b0[21] = 2701;   
        b0[22] = 2703;   
        b0[23] = 2768;   
        b0[24] = 2784;   
        b0[25] = 2972;   
        b0[26] = 2974;   
        b0[27] = 2975;   
        b0[28] = 3031;   
        b0[29] = 3294;   
        b0[30] = 3296;   
        b0[31] = 3297;   
        b0[32] = 3415;   
        b0[33] = 3716;   
        b0[34] = 3722;   
        b0[35] = 3725;   
        b0[36] = 3749;   
        b0[37] = 3751;   
        b0[38] = 3782;   
        b0[39] = 3784;   
        b0[40] = 4347;   
        b0[41] = 8025;   
        b0[42] = 8027;   
        b0[43] = 8029;   
        b0[44] = 64318;   
        b0[45] = 64320;   
        b0[46] = 64321;   
        b0[47] = 64323;   
        b0[48] = 64324;   
        b0[49] = 64326;   
        b0[50] = 65140;   
        b0[51] = 65142;   
        isLetterOrDigitTable = b0;   
        b0 = new [C()[214];    
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 48;   
        b3[1] = 57;   
        b1[0] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65;   
        b3[1] = 90;   
        b1[1] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 97;   
        b3[1] = 122;   
        b1[2] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 192;   
        b3[1] = 214;   
        b1[3] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 216;   
        b3[1] = 246;   
        b1[4] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 248;   
        b3[1] = 501;   
        b1[5] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 506;   
        b3[1] = 535;   
        b1[6] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 592;   
        b3[1] = 680;   
        b1[7] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 688;   
        b3[1] = 734;   
        b1[8] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 736;   
        b3[1] = 745;   
        b1[9] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 768;   
        b3[1] = 837;   
        b1[10] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 864;   
        b3[1] = 865;   
        b1[11] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 884;   
        b3[1] = 885;   
        b1[12] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 900;   
        b3[1] = 906;   
        b1[13] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 911;   
        b3[1] = 929;   
        b1[14] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 931;   
        b3[1] = 974;   
        b1[15] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 976;   
        b3[1] = 982;   
        b1[16] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 986;   
        b3[1] = 994;   
        b1[17] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 994;   
        b3[1] = 1011;   
        b1[18] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1025;   
        b3[1] = 1036;   
        b1[19] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1038;   
        b3[1] = 1103;   
        b1[20] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1105;   
        b3[1] = 1116;   
        b1[21] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1118;   
        b3[1] = 1158;   
        b1[22] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1168;   
        b3[1] = 1220;   
        b1[23] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1223;   
        b3[1] = 1224;   
        b1[24] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1227;   
        b3[1] = 1228;   
        b1[25] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1232;   
        b3[1] = 1259;   
        b1[26] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1262;   
        b3[1] = 1269;   
        b1[27] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1272;   
        b3[1] = 1273;   
        b1[28] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1329;   
        b3[1] = 1366;   
        b1[29] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1369;   
        b3[1] = 1375;   
        b1[30] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1377;   
        b3[1] = 1415;   
        b1[31] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1456;   
        b3[1] = 1465;   
        b1[32] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1467;   
        b3[1] = 1475;   
        b1[33] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1488;   
        b3[1] = 1514;   
        b1[34] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1520;   
        b3[1] = 1524;   
        b1[35] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1570;   
        b3[1] = 1594;   
        b1[36] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1600;   
        b3[1] = 1618;   
        b1[37] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1632;   
        b3[1] = 1645;   
        b1[38] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1648;   
        b3[1] = 1719;   
        b1[39] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1722;   
        b3[1] = 1726;   
        b1[40] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1728;   
        b3[1] = 1742;   
        b1[41] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1744;   
        b3[1] = 1773;   
        b1[42] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 1776;   
        b3[1] = 1785;   
        b1[43] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2305;   
        b3[1] = 2307;   
        b1[44] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2309;   
        b3[1] = 2361;   
        b1[45] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2364;   
        b3[1] = 2381;   
        b1[46] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2384;   
        b3[1] = 2388;   
        b1[47] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2392;   
        b3[1] = 2416;   
        b1[48] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2433;   
        b3[1] = 2435;   
        b1[49] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2437;   
        b3[1] = 2444;   
        b1[50] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2447;   
        b3[1] = 2448;   
        b1[51] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2451;   
        b3[1] = 2472;   
        b1[52] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2474;   
        b3[1] = 2480;   
        b1[53] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2486;   
        b3[1] = 2489;   
        b1[54] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2495;   
        b3[1] = 2500;   
        b1[55] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2503;   
        b3[1] = 2504;   
        b1[56] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2507;   
        b3[1] = 2509;   
        b1[57] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2524;   
        b3[1] = 2525;   
        b1[58] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2527;   
        b3[1] = 2531;   
        b1[59] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2534;   
        b3[1] = 2554;   
        b1[60] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2565;   
        b3[1] = 2570;   
        b1[61] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2575;   
        b3[1] = 2576;   
        b1[62] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2579;   
        b3[1] = 2600;   
        b1[63] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2602;   
        b3[1] = 2608;   
        b1[64] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2610;   
        b3[1] = 2611;   
        b1[65] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2613;   
        b3[1] = 2614;   
        b1[66] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2616;   
        b3[1] = 2617;   
        b1[67] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2623;   
        b3[1] = 2626;   
        b1[68] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2631;   
        b3[1] = 2632;   
        b1[69] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2635;   
        b3[1] = 2637;   
        b1[70] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2649;   
        b3[1] = 2652;   
        b1[71] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2662;   
        b3[1] = 2676;   
        b1[72] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2689;   
        b3[1] = 2691;   
        b1[73] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2693;   
        b3[1] = 2699;   
        b1[74] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2704;   
        b3[1] = 2705;   
        b1[75] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2707;   
        b3[1] = 2728;   
        b1[76] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2730;   
        b3[1] = 2736;   
        b1[77] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2738;   
        b3[1] = 2739;   
        b1[78] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2741;   
        b3[1] = 2745;   
        b1[79] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2748;   
        b3[1] = 2757;   
        b1[80] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2759;   
        b3[1] = 2761;   
        b1[81] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2763;   
        b3[1] = 2765;   
        b1[82] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2790;   
        b3[1] = 2799;   
        b1[83] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2817;   
        b3[1] = 2819;   
        b1[84] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2821;   
        b3[1] = 2828;   
        b1[85] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2831;   
        b3[1] = 2832;   
        b1[86] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2835;   
        b3[1] = 2856;   
        b1[87] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2858;   
        b3[1] = 2864;   
        b1[88] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2866;   
        b3[1] = 2867;   
        b1[89] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2870;   
        b3[1] = 2873;   
        b1[90] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2876;   
        b3[1] = 2883;   
        b1[91] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2887;   
        b3[1] = 2888;   
        b1[92] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2891;   
        b3[1] = 2893;   
        b1[93] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2902;   
        b3[1] = 2903;   
        b1[94] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2908;   
        b3[1] = 2909;   
        b1[95] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2911;   
        b3[1] = 2913;   
        b1[96] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2918;   
        b3[1] = 2928;   
        b1[97] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2946;   
        b3[1] = 2947;   
        b1[98] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2949;   
        b3[1] = 2954;   
        b1[99] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2958;   
        b3[1] = 2960;   
        b1[100] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2962;   
        b3[1] = 2965;   
        b1[101] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2969;   
        b3[1] = 2970;   
        b1[102] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2979;   
        b3[1] = 2980;   
        b1[103] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2984;   
        b3[1] = 2986;   
        b1[104] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2990;   
        b3[1] = 2997;   
        b1[105] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 2999;   
        b3[1] = 3001;   
        b1[106] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3006;   
        b3[1] = 3010;   
        b1[107] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3014;   
        b3[1] = 3016;   
        b1[108] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3018;   
        b3[1] = 3021;   
        b1[109] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3047;   
        b3[1] = 3058;   
        b1[110] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3073;   
        b3[1] = 3075;   
        b1[111] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3077;   
        b3[1] = 3084;   
        b1[112] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3086;   
        b3[1] = 3088;   
        b1[113] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3090;   
        b3[1] = 3112;   
        b1[114] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3114;   
        b3[1] = 3123;   
        b1[115] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3125;   
        b3[1] = 3129;   
        b1[116] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3134;   
        b3[1] = 3140;   
        b1[117] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3142;   
        b3[1] = 3144;   
        b1[118] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3146;   
        b3[1] = 3149;   
        b1[119] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3157;   
        b3[1] = 3158;   
        b1[120] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3168;   
        b3[1] = 3169;   
        b1[121] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3174;   
        b3[1] = 3183;   
        b1[122] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3202;   
        b3[1] = 3203;   
        b1[123] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3205;   
        b3[1] = 3212;   
        b1[124] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3214;   
        b3[1] = 3216;   
        b1[125] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3218;   
        b3[1] = 3240;   
        b1[126] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3242;   
        b3[1] = 3251;   
        b1[127] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3253;   
        b3[1] = 3257;   
        b1[128] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3262;   
        b3[1] = 3268;   
        b1[129] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3270;   
        b3[1] = 3272;   
        b1[130] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3274;   
        b3[1] = 3277;   
        b1[131] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3285;   
        b3[1] = 3286;   
        b1[132] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3302;   
        b3[1] = 3311;   
        b1[133] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3330;   
        b3[1] = 3331;   
        b1[134] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3333;   
        b3[1] = 3340;   
        b1[135] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3342;   
        b3[1] = 3344;   
        b1[136] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3346;   
        b3[1] = 3368;   
        b1[137] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3370;   
        b3[1] = 3385;   
        b1[138] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3390;   
        b3[1] = 3395;   
        b1[139] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3398;   
        b3[1] = 3400;   
        b1[140] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3402;   
        b3[1] = 3405;   
        b1[141] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3424;   
        b3[1] = 3425;   
        b1[142] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3430;   
        b3[1] = 3439;   
        b1[143] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3585;   
        b3[1] = 3642;   
        b1[144] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3647;   
        b3[1] = 3675;   
        b1[145] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3713;   
        b3[1] = 3714;   
        b1[146] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3719;   
        b3[1] = 3720;   
        b1[147] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3732;   
        b3[1] = 3735;   
        b1[148] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3737;   
        b3[1] = 3743;   
        b1[149] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3745;   
        b3[1] = 3747;   
        b1[150] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3754;   
        b3[1] = 3755;   
        b1[151] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3757;   
        b3[1] = 3769;   
        b1[152] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3771;   
        b3[1] = 3773;   
        b1[153] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3776;   
        b3[1] = 3780;   
        b1[154] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3785;   
        b3[1] = 3789;   
        b1[155] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3792;   
        b3[1] = 3801;   
        b1[156] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 3804;   
        b3[1] = 3805;   
        b1[157] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 4256;   
        b3[1] = 4293;   
        b1[158] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 4304;   
        b3[1] = 4342;   
        b1[159] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 4352;   
        b3[1] = 4441;   
        b1[160] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 4447;   
        b3[1] = 4514;   
        b1[161] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 4520;   
        b3[1] = 4601;   
        b1[162] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7680;   
        b3[1] = 7834;   
        b1[163] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7840;   
        b3[1] = 7929;   
        b1[164] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7936;   
        b3[1] = 7957;   
        b1[165] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7960;   
        b3[1] = 7965;   
        b1[166] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 7968;   
        b3[1] = 8005;   
        b1[167] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8008;   
        b3[1] = 8013;   
        b1[168] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8016;   
        b3[1] = 8023;   
        b1[169] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8031;   
        b3[1] = 8061;   
        b1[170] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8064;   
        b3[1] = 8116;   
        b1[171] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8118;   
        b3[1] = 8132;   
        b1[172] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8134;   
        b3[1] = 8147;   
        b1[173] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8150;   
        b3[1] = 8155;   
        b1[174] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8157;   
        b3[1] = 8175;   
        b1[175] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8178;   
        b3[1] = 8180;   
        b1[176] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 8182;   
        b3[1] = 8190;   
        b1[177] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12353;   
        b3[1] = 12436;   
        b1[178] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12441;   
        b3[1] = 12446;   
        b1[179] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12449;   
        b3[1] = 12542;   
        b1[180] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12549;   
        b3[1] = 12588;   
        b1[181] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12593;   
        b3[1] = 12686;   
        b1[182] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12688;   
        b3[1] = 12703;   
        b1[183] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12800;   
        b3[1] = 12828;   
        b1[184] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12832;   
        b3[1] = 12867;   
        b1[185] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12896;   
        b3[1] = 12923;   
        b1[186] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12927;   
        b3[1] = 12976;   
        b1[187] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 12992;   
        b3[1] = 13003;   
        b1[188] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 13008;   
        b3[1] = 13054;   
        b1[189] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 13056;   
        b3[1] = 13174;   
        b1[190] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 13179;   
        b3[1] = 13277;   
        b1[191] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 13280;   
        b3[1] = 13310;   
        b1[192] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 13312;   
        b3[1] = 40869;   
        b1[193] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 63744;   
        b3[1] = 64045;   
        b1[194] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64256;   
        b3[1] = 64262;   
        b1[195] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64275;   
        b3[1] = 64279;   
        b1[196] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64286;   
        b3[1] = 64310;   
        b1[197] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64312;   
        b3[1] = 64316;   
        b1[198] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64327;   
        b3[1] = 64433;   
        b1[199] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64467;   
        b3[1] = 64831;   
        b1[200] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64848;   
        b3[1] = 64911;   
        b1[201] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 64914;   
        b3[1] = 64967;   
        b1[202] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65008;   
        b3[1] = 65019;   
        b1[203] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65136;   
        b3[1] = 65138;   
        b1[204] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65143;   
        b3[1] = 65276;   
        b1[205] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65296;   
        b3[1] = 65305;   
        b1[206] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65313;   
        b3[1] = 65338;   
        b1[207] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65345;   
        b3[1] = 65370;   
        b1[208] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65382;   
        b3[1] = 65470;   
        b1[209] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65474;   
        b3[1] = 65479;   
        b1[210] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65482;   
        b3[1] = 65487;   
        b1[211] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65490;   
        b3[1] = 65495;   
        b1[212] = b3;   
        b1 = b0;    
        b3 = new char[2];    
        b3[0] = 65498;   
        b3[1] = 65500;   
        b1[213] = b3;   
        isLetterOrDigitRangeTable = b0;   
        return;   
  +END:   #1
 }
// Register: rd 1835/1835 wr 694 swaps 0 any 678 found 13 <clinit>
}
