class metaxa/os/devices/net/BitPosition {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method bit_0()I {
  +START:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_0
 
 method bit_1()I {
  +START:   #1
        return 2;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_1
 
 method bit_2()I {
  +START:   #1
        return 4;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_2
 
 method bit_3()I {
  +START:   #1
        return 8;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_3
 
 method bit_4()I {
  +START:   #1
        return 16;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_4
 
 method bit_5()I {
  +START:   #1
        return 32;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_5
 
 method bit_6()I {
  +START:   #1
        return 64;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_6
 
 method bit_7()I {
  +START:   #1
        return 128;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_7
 
 method bit_8()I {
  +START:   #1
        return 256;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_8
 
 method bit_9()I {
  +START:   #1
        return 512;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_9
 
 method bit_10()I {
  +START:   #1
        return 1024;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_10
 
 method bit_11()I {
  +START:   #1
        return 2048;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_11
 
 method bit_12()I {
  +START:   #1
        return 4096;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_12
 
 method bit_13()I {
  +START:   #1
        return 8192;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_13
 
 method bit_14()I {
  +START:   #1
        return 16384;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_14
 
 method bit_15()I {
  +START:   #1
        return 32768;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_15
 
 method bit_16()I {
  +START:   #1
        return 65536;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_16
 
 method bit_17()I {
  +START:   #1
        return 131072;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_17
 
 method bit_18()I {
  +START:   #1
        return 262144;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_18
 
 method bit_19()I {
  +START:   #1
        return 524288;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_19
 
 method bit_20()I {
  +START:   #1
        return 1048576;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_20
 
 method bit_21()I {
  +START:   #1
        return 2097152;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_21
 
 method bit_22()I {
  +START:   #1
        return 4194304;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_22
 
 method bit_23()I {
  +START:   #1
        return 8388608;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_23
 
 method bit_24()I {
  +START:   #1
        return 16777216;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_24
 
 method bit_25()I {
  +START:   #1
        return 33554432;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_25
 
 method bit_26()I {
  +START:   #1
        return 67108864;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_26
 
 method bit_27()I {
  +START:   #1
        return 134217728;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_27
 
 method bit_28()I {
  +START:   #1
        return 268435456;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_28
 
 method bit_29()I {
  +START:   #1
        return 536870912;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_29
 
 method bit_30()I {
  +START:   #1
        return 1073741824;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_30
 
 method bit_31()I {
  +START:   #1
        return -2147483648;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 bit_31
 
 method printBinary(Ljava/lang/String;I)V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra(vR1).append@extra(", int: ").append@extra(vi2).append@extra(", binaer: ").toString@extra());   [ RR iii... RR...] 
        out.print(" ");   [ RR iiii.. RR...] 
        vi3 = 31;    
  +B45:   #1
        if vi3< 0 goto B82;   
  +B49:   #1
        if ((1 << vi3) & vi2)==0 goto B68;   
  +B57:   #1
        out.print("1");   [i RR i..... RR...] 
        goto +B76;   [i RR i..... .....]
  +B68:   #1
        out.print("0");   [i RR i..... RR...] 
  +B76:   #1
        vi3--;   
        goto +B45;   [i RR ...... .....]
  +B82:   #1
        out.println();   [i RR ...... R....] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 17 swaps 6 any 2 found 0 printBinary
 
 method printBinaryDebug(Ljava/lang/String;I)V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra(vR1).append@extra(", int: ").append@extra(vi2).append@extra(", binaer: ").toString@extra());   [ RR iii... RR...] 
        out.print(" ");   [ RR iiii.. RR...] 
        vi3 = 31;    
  +B45:   #1
        if vi3< 0 goto B90;   
  +B49:   #1
        if ((1 << vi3) & vi2)==0 goto B68;   
  +B57:   #1
        out.print("1");   [i RR i..... RR...] 
        goto +B84;   [i RR i..... .....]
  +B68:   #1
        out.println("0");   [i RR i..... RR...] 
        out.print("0");   [i RR ii.... RR...] 
  +B84:   #1
        vi3--;   
        goto +B45;   [i RR ...... .....]
  +B90:   #1
        out.println();   [i RR ...... R....] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 19 swaps 7 any 2 found 0 printBinaryDebug
 
 method printBinary(Ljava/lang/String;S)V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra(vR1).append@extra(", short: ").append@extra(vi2).append@extra(", binaer: ").toString@extra());   [ RR iii... RR...] 
        out.print(" ");   [ RR iiii.. RR...] 
        vi3 = 15;    
  +B45:   #1
        if vi3< 0 goto B82;   
  +B49:   #1
        if ((1 << vi3) & vi2)==0 goto B68;   
  +B57:   #1
        out.print("1");   [i RR i..... RR...] 
        goto +B76;   [i RR i..... .....]
  +B68:   #1
        out.print("0");   [i RR i..... RR...] 
  +B76:   #1
        vi3--;   
        goto +B45;   [i RR ...... .....]
  +B82:   #1
        out.println();   [i RR ...... R....] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 17 swaps 6 any 2 found 0 printBinary
 
 method printBinary(Ljava/lang/String;B)V {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra(vR1).append@extra(", byte: ").append@extra(vi2).append@extra(", binaer: ").toString@extra());   [ RR iii... RR...] 
        out.print(" ");   [ RR iiii.. RR...] 
        vi3 = 7;    
  +B45:   #1
        if vi3< 0 goto B82;   
  +B49:   #1
        if ((1 << vi3) & vi2)==0 goto B68;   
  +B57:   #1
        out.print("1");   [i RR i..... RR...] 
        goto +B76;   [i RR i..... .....]
  +B68:   #1
        out.print("0");   [i RR i..... RR...] 
  +B76:   #1
        vi3--;   
        goto +B45;   [i RR ...... .....]
  +B82:   #1
        out.println();   [i RR ...... R....] 
        return;   
  +END:   #1
 }
// Register: rd 6/6 wr 17 swaps 6 any 2 found 0 printBinary
 
 method isSet(II)Z {
  +START:   #1
        if vi2<32 goto B14;   
  -B6:   #1
        throw new metaxa/os/devices/net/BitNotExistingException();   
  +B14:   #1
        if ((1 << vi2) & vi1)==0 goto B26;   
  +B22:   #1
        b0 = 1;    
        goto +B27b0;   forward return[ i  ..]
  +B26:   #1
        b0 = 0;    
  +B27b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 isSet
 
 method setBit(II)I {
  +START:   #1
        if vi2<32 goto B14;   
  -B6:   #1
        throw new metaxa/os/devices/net/BitNotExistingException();   
  +B14:   #1
        vi1 = (vi1 | (1 << vi2));    
        return vi1;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 2 found 0 setBit
 
 method eraseBit(II)I {
  +START:   #1
        if vi2<32 goto B14;   
  -B6:   #1
        throw new metaxa/os/devices/net/BitNotExistingException();   
  +B14:   #1
        if vR0.isSet@this(vi1,vi2)==0 goto B29;   
  +B23:   #1
        vi1 = (vi1 ^ (1 << vi2));    
  +B29:   #1
        return vi1;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 2 found 0 eraseBit
 
 method isSet(SI)Z {
  +START:   #1
        if vi2<16 goto B14;   
  -B6:   #1
        throw new metaxa/os/devices/net/BitNotExistingException();   
  +B14:   #1
        if ((1 << vi2) & vi1)==0 goto B26;   
  +B22:   #1
        b0 = 1;    
        goto +B27b0;   forward return[ i  ..]
  +B26:   #1
        b0 = 0;    
  +B27b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 isSet
 
 method setBit(SI)S {
  +START:   #1
        if vi2<16 goto B14;   
  -B6:   #1
        throw new metaxa/os/devices/net/BitNotExistingException();   
  +B14:   #1
        vi1 = (short)(vi1 | (1 << vi2));    
        return vi1;   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 0 any 1 found 0 setBit
 
 method eraseBit(SI)S {
  +START:   #1
        if vi2<16 goto B14;   
  -B6:   #1
        throw new metaxa/os/devices/net/BitNotExistingException();   
  +B14:   #1
        if vR0.isSet@this(vi1,vi2)==0 goto B30;   
  +B23:   #1
        vi1 = (short)(vi1 ^ (1 << vi2));    
  +B30:   #1
        return vi1;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 1 found 0 eraseBit
 
 method hibyte(S)B {
  +START:   #1
        return (byte)(vi1 >> 8);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 hibyte
 
 method hibyte(I)B {
  +START:   #1
        return (byte)(vi1 >> 24);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 hibyte
 
 method lobyte(S)B {
  +START:   #1
        return (byte)(vi1 & 255);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lobyte
 
 method lobyte(I)B {
  +START:   #1
        return (byte)(vi1 & 255);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 lobyte
 
 method byte_to_unsigned(B)Ljava/lang/String; {
  +START:   #1
        if (-128 & vi1)!=0 goto B27;   
  +B7:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("").append@extra(vi1).toString@extra();   
  +B27:   #1
        vi2 = ((127 & vi1)+128);    
        b0 = new java/lang/StringBuilder();    [ R ... i..][ R ... iR.]
        return b0.append@extra("").append@extra(vi2).toString@extra();   
  +END:   #1
 }
// Register: rd 4/4 wr 9 swaps 2 any 0 found 0 byte_to_unsigned
}
