class jx/rdp/orders/LineOrder {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [ ?R  R] 
        vR0.mixmode = 0;   
        vR0.startx = 0;   
        vR0.starty = 0;   
        vR0.endx = 0;   
        vR0.endy = 0;   
        vR0.bgcolor = 0;   
        vR0.opcode = 0;   
        vR0.pen = 0;   
        b1 = new jx/rdp/orders/Pen();    [ ?R  i][ ?R  iR]
        vR0.pen = b1;   
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 1 swaps 0 any 0 found 0 <init>
 
 method getMixmode()I {
  +START:   #1
        return vR0.mixmode;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getMixmode
 
 method getStartX()I {
  +START:   #1
        return vR0.startx;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getStartX
 
 method getStartY()I {
  +START:   #1
        return vR0.starty;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getStartY
 
 method getEndX()I {
  +START:   #1
        return vR0.endx;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getEndX
 
 method getEndY()I {
  +START:   #1
        return vR0.endy;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getEndY
 
 method getBackgroundColor()I {
  +START:   #1
        return vR0.bgcolor;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getBackgroundColor
 
 method getOpcode()I {
  +START:   #1
        return vR0.opcode;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getOpcode
 
 method setMixmode(I)V {
  +START:   #1
        vR0.mixmode = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setMixmode
 
 method setStartX(I)V {
  +START:   #1
        vR0.startx = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setStartX
 
 method setStartY(I)V {
  +START:   #1
        vR0.starty = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setStartY
 
 method setEndX(I)V {
  +START:   #1
        vR0.endx = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setEndX
 
 method setEndY(I)V {
  +START:   #1
        vR0.endy = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setEndY
 
 method setBackgroundColor(I)V {
  +START:   #1
        vR0.bgcolor = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setBackgroundColor
 
 method setOpcode(I)V {
  +START:   #1
        vR0.opcode = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 setOpcode
 
 method reset()V {
  +START:   #1
        vR0.mixmode = 0;   
        vR0.startx = 0;   
        vR0.starty = 0;   
        vR0.endx = 0;   
        vR0.endy = 0;   
        vR0.bgcolor = 0;   
        vR0.opcode = 0;   
        vR0.pen.reset();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 0 found 0 reset
}
