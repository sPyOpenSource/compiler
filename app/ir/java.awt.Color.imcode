class java/awt/Color {
 
 method decode(Ljava/lang/String;)Ljava/awt/Color; {
  +START:   #1
        vR1 = decode@special(vR0);    [ R  R]
        return new java/awt/Color(vR1.intValue());   
  +END:   #1
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 decode
 
 method getColor(Ljava/lang/String;)Ljava/awt/Color; {
  +START:   #1
        return getColor@special(vR0,0);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getColor
 
 method getColor(Ljava/lang/String;I)Ljava/awt/Color; {
  +START:   #1
        b1 = new java/awt/Color(vi1);    [ ?R  i][ ?R . iiR]
        return getColor@special(vR0,b1);   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 getColor
 
 method getColor(Ljava/lang/String;Ljava/awt/Color;)Ljava/awt/Color; {
  +START:   #1
        vR2 = getProperty@special(vR0);    [ R  R]
        if vR2!=null goto B11;   
  +B9:   #1
        return vR1;   
  +B11:   #2
        b0 = decode@special(vR2);    [R R  R]
  +B15b0:   #1 reference
        return b0;   
  +H16<caught exception>:   #1 reference
        vR3 = <caught exception>;    
        return vR1;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
11 - 15 handler 16 type 30
 }
// Register: rd 4/4 wr 3 swaps 0 any 1 found 0 getColor
 
 method <init>(III)V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        vR0.value = -1;   
        if vi1< 0 goto B42;   
  +B13:   #1
        if vi1>255 goto B42;   
  +B20:   #1
        if vi2< 0 goto B42;   
  +B24:   #1
        if vi2>255 goto B42;   
  +B31:   #1
        if vi3< 0 goto B42;   
  +B35:   #1
        if vi3<=255 goto B52;   
  -B42:   #5
        throw new java/lang/IllegalArgumentException("Bad RGB values");   
  +B52:   #1
        vR0.value = ((vi3+(vi2 << 8))+(vi1 << 16));   
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 1 swaps 0 any 6 found 0 <init>
 
 method <init>(IIII)V {
  +START:   #1
        vR0.<init>@special();   [ R  R] 
        vR0.value = -1;   
        if vi1< 0 goto B42;   
  +B13:   #1
        if vi1>255 goto B42;   
  +B20:   #1
        if vi2< 0 goto B42;   
  +B24:   #1
        if vi2>255 goto B42;   
  +B31:   #1
        if vi3< 0 goto B42;   
  +B35:   #1
        if vi3<=255 goto B52;   
  -B42:   #5
        throw new java/lang/IllegalArgumentException("Bad RGB values");   
  +B52:   #1
        vR0.value = (((vi3+(vi2 << 8))+(vi1 << 16))+(vi4 << 24));   
        return;   
  +END:   #1
 }
// Register: rd 14/14 wr 1 swaps 0 any 6 found 0 <init>
 
 method <init>(I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.value = -1;   
        vR0.value = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 <init>
 
 method <init>(IZ)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.value = -1;   
        vR0.value = vi1;   
        if vi2!=0 goto B29;   
  +B18:   #1
        vR0.value = (vR0.value | -16777216);   
  +B29:   #1
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 1 found 0 <init>
 
 method getRed()I {
  +START:   #1
        vi1 = ((vR0.value & 16711680) >> 16);    
        return vi1;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 getRed
 
 method getGreen()I {
  +START:   #1
        vi1 = ((vR0.value & 65280) >> 8);    
        return vi1;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 getGreen
 
 method getBlue()I {
  +START:   #1
        vi1 = (vR0.value & 255);    
        return vi1;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 getBlue
 
 method getAlpha()I {
  +START:   #1
        vi1 = (vR0.value & -16777216);    
        return vi1;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 getAlpha
 
 method getRGB()I {
  +START:   #1
        return vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getRGB
 
 method brighter()Ljava/awt/Color; {
  +START:   #1
        return new java/awt/Color(min@special(255,(vR0.getRed@this()+48)),min@special(255,(vR0.getGreen@this()+48)),min@special(255,(vR0.getBlue@this()+48)),vR0.getAlpha@this());   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 brighter
 
 method darker()Ljava/awt/Color; {
  +START:   #1
        return new java/awt/Color(max@special(0,(vR0.getRed@this()-48)),max@special(0,(vR0.getGreen@this()-48)),max@special(0,(vR0.getBlue@this()-48)),vR0.getAlpha@this());   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 darker
 
 method hashCode()I {
  +START:   #1
        return vR0.value;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 hashCode
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if (vR1 instanceof java/awt/Color)!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        vR2 = (java/awt/Color)(vR1);    
        if vR0.value!=vR2.value goto B29;   
  +B25:   #1
        b0 = 1;    
        goto +B30b0;   forward return[R i  ..]
  +B29:   #1
        b0 = 0;    
  +B30b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 1 found 1 equals
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("(red=").append@extra(vR0.getRed@this()).append@extra(",green=").append@extra(vR0.getGreen@this()).append@extra(",blue=").append@extra(vR0.getBlue@this()).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 5/5 wr 18 swaps 8 any 0 found 0 toString
 
 method <clinit>()V {
  +START:   #1
        b0 = new java/awt/Color(255,255,255,255);    [ R  i][ R . iiiiiR]
        white = b0;   
        b0 = new java/awt/Color(192,192,192,255);    [ R . i.....][ R . iiiiiR]
        lightGray = b0;   
        b0 = new java/awt/Color(128,128,128,255);    [ R . i.....][ R . iiiiiR]
        gray = b0;   
        b0 = new java/awt/Color(64,64,64,255);    [ R . i.....][ R . iiiiiR]
        darkGray = b0;   
        b0 = new java/awt/Color(0,0,0,255);    [ R . i.....][ R . iiiiiR]
        black = b0;   
        b0 = new java/awt/Color(255,0,0,255);    [ R . i.....][ R . iiiiiR]
        red = b0;   
        b0 = new java/awt/Color(255,175,175,255);    [ R . i.....][ R . iiiiiR]
        pink = b0;   
        b0 = new java/awt/Color(255,200,0,255);    [ R . i.....][ R . iiiiiR]
        orange = b0;   
        b0 = new java/awt/Color(255,255,0,255);    [ R . i.....][ R . iiiiiR]
        yellow = b0;   
        b0 = new java/awt/Color(0,255,0,255);    [ R . i.....][ R . iiiiiR]
        green = b0;   
        b0 = new java/awt/Color(255,0,255,255);    [ R . i.....][ R . iiiiiR]
        magenta = b0;   
        b0 = new java/awt/Color(0,255,255,255);    [ R . i.....][ R . iiiiiR]
        cyan = b0;   
        b0 = new java/awt/Color(0,0,255,255);    [ R . i.....][ R . iiiiiR]
        blue = b0;   
        return;   
  +END:   #1
 }
// Register: rd 39/39 wr 26 swaps 0 any 0 found 13 <clinit>
}
