class jx/devices/pci/PCICapability {
 
 method <init>(ILjx/devices/pci/PCIDevice;I)V {
  +START:   #1
        vR0.<init>@special((byte)vi1,vR2,vi3);   [  i iRiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 <init>
 
 method <init>(BLjx/devices/pci/PCIDevice;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.id = vi1;   
        vR0.device = vR2;   
        vR0.baseRegister = vi3;   
        return;   
  +END:   #1
 }
// Register: rd 7/7 wr 0 swaps 0 any 0 found 0 <init>
 
 method getID()B {
  +START:   #1
        return vR0.id;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getID
 
 method getBaseRegister()I {
  +START:   #1
        return vR0.baseRegister;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getBaseRegister
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("capability(0x").append@extra(toHexString@special(vR0.id)).append@extra(", ").append@extra(toHexString@special(vR0.baseRegister)).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 13 swaps 5 any 0 found 0 toString
 
 method createCapability(Ljx/devices/pci/PCIDevice;I)Ljx/devices/pci/PCICapability; {
  +START:   #1
        vi2 = vR0.readPackedConfig(vi1,255,0);    [ R  iiiR] 
        tswitch (vi2) B48 B58 B68 B78 B88 : B98;   
  +B48:   #1
        return new jx/devices/pci/CapabilityPM(vR0,vi1);   
  +B58:   #1
        return new jx/devices/pci/CapabilityAGP(vR0,vi1);   
  +B68:   #1
        return new jx/devices/pci/CapabilityVPD(vR0,vi1);   
  +B78:   #1
        return new jx/devices/pci/CapabilitySI(vR0,vi1);   
  +B88:   #1
        return new jx/devices/pci/CapabilityVPD(vR0,vi1);   
  +B98:   #1
        return new jx/devices/pci/PCICapability(vi2,vR0,vi1);   
  +END:   #1
 }
// Register: rd 21/21 wr 7 swaps 0 any 1 found 0 createCapability
}
