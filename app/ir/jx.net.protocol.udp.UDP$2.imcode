class jx/net/protocol/udp/UDP$2 {
 
 method <init>(Ljx/net/protocol/udp/UDP;IILjx/net/PacketsConsumer;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.val$srcPort = vi2;   
        vR0.val$dstPort = vi3;   
        vR0.val$lowerLayer = vR4;   
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method processMemory(Ljx/zero/Memory;)Ljx/zero/Memory; {
  +START:   #1
        vR0.this$0.cpuManager.recordEvent(vR0.this$0.event_snd);    
        vR2 = vR1;    
        vR3 = new jx/net/protocol/udp/UDPFormat(vR2);    [ R  i][ R . iRR]
        vR3.insertSourcePort(vR0.val$srcPort);   [RR R i iR.] 
        vR3.insertDestPort(vR0.val$dstPort);   [RR R ii iR.] 
        vR3.insertLength((vR2.size()-34));   [RR R iii iR.] 
        vR4 = vR0.val$lowerLayer.processMemory(vR2);    [RR R iii RR.] 
        return vR4;   
  +END:   #1
 }
// Register: rd 11/11 wr 7 swaps 3 any 1 found 0 processMemory
 
 method requiresSpace()I {
  +START:   #1
        return 8;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 requiresSpace
 
 method getMTU()I {
  +START:   #1
        return 1000;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getMTU
}
