class java/util/LinkedHashMap$LinkedHashIterator {
 
 method <init>(Ljava/util/LinkedHashMap;)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.next = vR1.head;   
        vR0.expectedModCount = vR1.modCount;   
        vR0.current = 0;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 0 swaps 0 any 0 found 0 <init>
 
 method hasNext()Z {
  +START:   #1
        if vR0.next==null goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  ]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 hasNext
 
 method nextNode()Ljava/util/LinkedHashMap$Entry; {
  +START:   #1
        vR1 = vR0.next;    
        if vR0.this$0.modCount==vR0.expectedModCount goto B27;   
  -B19:   #1
        throw new java/util/ConcurrentModificationException();   
  +B27:   #1
        if vR1!=null goto B39;   
  -B31:   #1
        throw new java/util/NoSuchElementException();   
  +B39:   #1
        vR0.current = vR1;   
        vR0.next = vR1.after;   
        return vR1;   
  +END:   #1
 }
// Register: rd 9/9 wr 1 swaps 0 any 1 found 0 nextNode
 
 method remove()V {
  +START:   #1
        vR1 = vR0.current;    
        if vR1!=null goto B17;   
  -B9:   #1
        throw new java/lang/IllegalStateException();   
  +B17:   #1
        if vR0.this$0.modCount==vR0.expectedModCount goto B39;   
  -B31:   #1
        throw new java/util/ConcurrentModificationException();   
  +B39:   #1
        vR0.current = 0;   
        vR2 = vR1.key;    
        vR0.this$0.removeNode(hash@special(vR2),vR2,0,0,0);   [RR R i iiRRiR] 
        vR0.expectedModCount = vR0.this$0.modCount;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 3 swaps 1 any 1 found 0 remove
}
