class java/util/ArrayList$SubList {
 
 method <init>(Ljava/util/ArrayList;Ljava/util/AbstractList;III)V {
  +START:   #1
        vR0.this$0 = vR1;   
        vR0.<init>@special();   [   R] 
        vR0.parent = vR2;   
        vR0.parentOffset = vi4;   
        vR0.offset = (vi3+vi4);   
        vR0.size = (vi5-vi4);   
        return;   
  +END:   #1
 }
// Register: rd 13/13 wr 0 swaps 0 any 0 found 0 <init>
 
 method set(ILjava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        vR0.rangeCheck@special(vi1);   [   iR] 
        vR3 = vR0.this$0.elementData((vR0.offset+vi1));    [  i iR] 
        vR0.this$0.elementData[(vR0.offset+vi1)] = vR2;   
        return vR3;   
  +END:   #1
 }
// Register: rd 9/9 wr 2 swaps 1 any 1 found 0 set
 
 method get(I)Ljava/lang/Object; {
  +START:   #1
        vR0.rangeCheck@special(vi1);   [   iR] 
        return vR0.this$0.elementData((vR0.offset+vi1));   
  +END:   #1
 }
// Register: rd 4/4 wr 1 swaps 1 any 0 found 0 get
 
 method size()I {
  +START:   #1
        return vR0.size;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method subList(II)Ljava/util/List; {
  +START:   #1
        subListRangeCheck@special(vi1,vi2,vR0.size);   [ R i iii]
        return new java/util/ArrayList$SubList(vR0.this$0,vR0,vR0.offset,vi1,vi2);   
  +END:   #1
 }
// Register: rd 7/7 wr 2 swaps 0 any 0 found 0 subList
 
 method rangeCheck(I)V {
  +START:   #1
        if vi1< 0 goto B12;   
  +B4:   #1
        if vi1<vR0.size goto B25;   
  -B12:   #1
        throw new java/lang/IndexOutOfBoundsException(vR0.outOfBoundsMsg@special(vi1));   
  +B25:   #1
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 2 found 0 rangeCheck
 
 method rangeCheckForAdd(I)V {
  +START:   #1
        if vi1< 0 goto B12;   
  +B4:   #1
        if vi1<=vR0.size goto B25;   
  -B12:   #1
        throw new java/lang/IndexOutOfBoundsException(vR0.outOfBoundsMsg@special(vi1));   
  +B25:   #1
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 2 found 0 rangeCheckForAdd
 
 method outOfBoundsMsg(I)Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("Index: ").append@extra(vi1).append@extra(", Size: ").append@extra(vR0.size).toString@extra();   
  +END:   #1
 }
// Register: rd 2/2 wr 8 swaps 3 any 0 found 0 outOfBoundsMsg
 
 method listIterator()Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method listIterator(I)Ljava/util/ListIterator; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 listIterator
 
 method add(ILjava/lang/Object;)V {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 add
 
 method indexOf(Ljava/lang/Object;)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 indexOf
 
 method lastIndexOf(Ljava/lang/Object;)I {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 lastIndexOf
}
