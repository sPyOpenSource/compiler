class jx/rpc/RPCFormatterAuthUnix {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method write(Ljx/rpc/RPCBuffer;Ljx/rpc/AuthUnix;)V {
  +START:   #1
        writeInt@special(vR0,length@special(vR1));   [  i iR]
        writeInt@special(vR0,vR1.stamp);   [  ii iR]
        writeString@special(vR0,vR1.machinename);   [  iiR RR]
        writeInt@special(vR0,vR1.uid);   [  iiRi iR]
        writeInt@special(vR0,vR1.gid);   [  iiRii iR]
        writeIntArray@special(vR0,vR1.gids);   [  iiRiiR RR]
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 6 swaps 0 any 0 found 0 write
 
 method read(Ljx/rpc/RPCBuffer;)Ljx/rpc/AuthUnix; {
  +START:   #1
        vR1 = new jx/rpc/AuthUnix();    [ R  i][ R  iR]
        vi2 = readInt@special(vR0);    [R R  R.]
        vR1.stamp = readInt@special(vR0);   
        vR1.machinename = readString@special(vR0);   
        vR1.uid = readInt@special(vR0);   
        vR1.gid = readInt@special(vR0);   
        vR1.gids = readIntArray@special(vR0);   
        return vR1;   
  +END:   #1
 }
// Register: rd 6/6 wr 2 swaps 0 any 0 found 0 read
 
 method length(Ljx/rpc/AuthUnix;)I {
  +START:   #1
        vi1 = 0;    
        vi1 = (vi1+lengthInt@special(vR0.stamp));    
        vi1 = (vi1+lengthString@special(vR0.machinename));    
        vi1 = (vi1+lengthInt@special(vR0.uid));    
        vi1 = (vi1+lengthInt@special(vR0.gid));    
        vi1 = (vi1+lengthIntArray@special(vR0.gids));    
        return vi1;   
  +END:   #1
 }
// Register: rd 16/16 wr 11 swaps 0 any 5 found 5 length
}
