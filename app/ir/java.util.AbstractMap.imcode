class java/util/AbstractMap {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method clear()V {
  +START:   #1
        vR0.entrySet@this().clear();   [  . R] [  R R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 clear
 
 method containsKey(Ljava/lang/Object;)Z {
  +START:   #1
        vR3 = vR0.entrySet@this();    [   R] 
        vR4 = vR3.iterator();    [?R   R] 
        vi5 = vR0.size@this();    [?RR   R] 
        vi6 = 0;    
  +B22:   #1
        if vi6>=vi5 goto B72;   
  +B29:   #1
        vR2 = (java/util/Map$Entry)(vR4.next()).getKey();    [?RRii  . R.] 
        if vR1!=null goto B56;   
  +B49:   #1
        if vR2!=null goto B66;   
  +B53:   #1
        goto +B64;   forward return[RRRii  . ..]
  +B56:   #1
        if vR1.equals(vR2)==0 goto B66;   
  +B64:   #1
        return 1;   
  +B66:   #2
        vi6++;   
        goto +B22;   [RRRii  . ..]
  +B72:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 11/11 wr 8 swaps 0 any 4 found 0 containsKey
 
 method containsValue(Ljava/lang/Object;)Z {
  +START:   #1
        vR3 = vR0.entrySet@this();    [   R] 
        vR4 = vR3.iterator();    [?R   R] 
        vi5 = vR0.size@this();    [?RR   R] 
        vi6 = 0;    
  +B22:   #1
        if vi6>=vi5 goto B72;   
  +B29:   #1
        vR2 = (java/util/Map$Entry)(vR4.next()).getValue();    [?RRii  . R.] 
        if vR1!=null goto B56;   
  +B49:   #1
        if vR2!=null goto B66;   
  +B53:   #1
        goto +B64;   forward return[RRRii  . ..]
  +B56:   #1
        if vR1.equals(vR2)==0 goto B66;   
  +B64:   #1
        return 1;   
  +B66:   #2
        vi6++;   
        goto +B22;   [RRRii  . ..]
  +B72:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 11/11 wr 8 swaps 0 any 4 found 0 containsValue
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if vR1!=vR0 goto B7;   
  +B5:   #1
        return 1;   
  +B7:   #1
        if (vR1 instanceof java/util/Map)!=0 goto B16;   
  +B14:   #1
        return 0;   
  +B16:   #1
        vR2 = (java/util/Map)(vR1);    
        vR3 = vR2.entrySet();    [R   R.] 
        vR4 = vR0.entrySet@this().iterator();    [RR  . R.] [RR  R R.] 
        vi5 = vR0.size@this();    [RRR  . R.] 
        if vR2.size()==vi5 goto B58;   
  +B56:   #1
        return 0;   
  +B58:   #1
        vi6 = 0;    
  +B61:   #1
        if vi6>=vi5 goto B92;   
  +B68:   #1
        if vR3.contains(vR4.next())!=0 goto B86;   
  +B84:   #1
        return 0;   
  +B86:   #1
        vi6++;   
        goto +B61;   [RRRii  . ..]
  +B92:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 15/15 wr 8 swaps 1 any 4 found 1 equals
 
 method get(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        vR2 = vR0.entrySet@this();    [   R] 
        vR3 = vR2.iterator();    [R   R] 
        vi4 = vR0.size@this();    [RR   R] 
        vi5 = 0;    
  +B21:   #1
        if vi5>=vi4 goto B83;   
  +B28:   #1
        vR6 = (java/util/Map$Entry)(vR3.next());    
        vR7 = vR6.getKey();    [RRiiR  . R.] 
        if vR1!=null goto B60;   
  +B52:   #1
        if vR7!=null goto B77;   
  +B57:   #1
        goto +B69;   forward return[RRiiRR  . ..]
  +B60:   #1
        if vR1.equals(vR7)==0 goto B77;   
  +B69:   #1
        return vR6.getValue();   
  +B77:   #2
        vi5++;   
        goto +B21;   [RRiiRR  . ..]
  +B83:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 13/13 wr 8 swaps 0 any 4 found 0 get
 
 method hashCode()I {
  +START:   #1
        vi1 = 0;    
        vR2 = vR0.entrySet@this().iterator();    [i  . R] [i  R R] 
        vi3 = vR0.size@this();    [iR  . R] 
        vi4 = 0;    
  +B20:   #1
        if vi4>=vi3 goto B44;   
  +B26:   #1
        vi1 = (vi1+vR2.next().hashCode());    
        vi4++;   
        goto +B20;   [iRii  . .]
  +B44:   #1
        return vi1;   
  +END:   #1
 }
// Register: rd 9/9 wr 8 swaps 0 any 3 found 1 hashCode
 
 method isEmpty()Z {
  +START:   #1
        if vR0.size@this()!=0 goto B11;   
  +B7:   #1
        b0 = 1;    
        goto +B12b0;   forward return[ i  .]
  +B11:   #1
        b0 = 0;    
  +B12b0:   #1 int
        return b0;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 0 any 0 found 0 isEmpty
 
 method keySet()Ljava/util/Set; {
  +START:   #1
        return vR0.keySet;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 keySet
 
 method put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException();   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 put
 
 method putAll(Ljava/util/Map;)V {
  +START:   #1
        vR3 = vR1.entrySet().iterator();    [  . R] [  R R] 
        vi4 = vR1.size();    [?R  . R] 
        vi5 = 0;    
  +B23:   #1
        if vi5>=vi4 goto B63;   
  +B30:   #1
        vR2 = (java/util/Map$Entry)(vR3.next());    
        vR0.put@this(vR2.getKey(),vR2.getValue());   [RRii  iR RRR] 
        vi5++;   
        goto +B23;   [RRii  iR ...]
  +B63:   #1
        return;   
  +END:   #1
 }
// Register: rd 11/11 wr 10 swaps 1 any 2 found 0 putAll
 
 method remove(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        vR2 = vR0.entrySet@this().iterator();    [  . R] [  R R] 
        vi3 = vR0.size@this();    [R  . R] 
        vi4 = 0;    
  +B18:   #1
        if vi4>=vi3 goto B89;   
  +B24:   #1
        vR5 = (java/util/Map$Entry)(vR2.next());    
        vR6 = vR5.getKey();    [RiiR  . R.] 
        if vR1!=null goto B56;   
  +B48:   #1
        if vR6!=null goto B83;   
  +B53:   #1
        goto +B65;   [RiiRR  . ..]
  +B56:   #1
        if vR1.equals(vR6)==0 goto B83;   
  +B65:   #1
        vR7 = vR5.getValue();    [RiiRR  . R.] 
        vR2.remove();   [RiiRRR  . R.] 
        return vR7;   
  +B83:   #2
        vi4++;   
        goto +B18;   [RiiRRR  . ..]
  +B89:   #1
        return 0;   
  +END:   #1
 }
// Register: rd 14/14 wr 9 swaps 0 any 4 found 0 remove
 
 method size()I {
  +START:   #1
        return vR0.entrySet@this().size();   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 size
 
 method toString()Ljava/lang/String; {
  +START:   #1
        vR1 = vR0.entrySet@this().iterator();    [ R . R] [ R R R] 
        vi2 = vR0.size@this();    [R R . R] 
        vR3 = "{";    
        vi4 = 0;    
  +B21:   #1
        if vi4>=vi2 goto B85;   
  +B27:   #1
        b0 = new java/lang/StringBuilder();    [ R . i][ R . iR]
        vR3 = b0.append@extra(vR3).append@extra(vR1.next()).toString@extra();    [RiRi R .i. R..] [RiRi R Ri. RR.] [RiRi R RiR RRR] 
        if vi4>=(vi2-1) goto B79;   
  +B59:   #1
        b0 = new java/lang/StringBuilder();    [ R ... i..][ R ... iR.]
        vR3 = b0.append@extra(vR3).append@extra(", ").toString@extra();    [RiRi R i.. R..] [RiRi R iR. RR.] [RiRi R iRR RRR] 
  +B79:   #1
        vi4++;   
        goto +B21;   [RiRi R ... ...]
  +B85:   #1
        b0 = new java/lang/StringBuilder();    [ R ... i..][ R ... iR.]
        vR3 = b0.append@extra(vR3).append@extra("}").toString@extra();    [RiRi R i.. R..] [RiRi R iR. RR.] [RiRi R iRR RRR] 
        return vR3;   
  +END:   #1
 }
// Register: rd 12/12 wr 21 swaps 3 any 3 found 0 toString
 
 method values()Ljava/util/Collection; {
  +START:   #1
        return vR0.values;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 values
}
