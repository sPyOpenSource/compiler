class jx/netmanager/IPSender {
 
 method <init>(Ljx/netmanager/NetInit;Ljx/net/IPAddress;I)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.dst = vR2;   
        vR4 = vR1.arp.lookup(vR2);    [   RR] 
        vR0.etherLayer = vR1.ether.getTransmitter(vR4,"IP");   
        vR0.ipSender = vR1.ip.getTransmitter(vR0.etherLayer,vR2,vi3);   
        vR5 = vR1.ether.getTransmitter1(vR4,"IP");    [R  iii RRR.] 
        vR0.ipSender1 = vR1.ip.getTransmitter1(vR5,vR2,vi3);   
        return;   
  +END:   #1
 }
// Register: rd 12/12 wr 5 swaps 3 any 0 found 0 <init>
 
 method send(Ljx/zero/Memory;II)Ljx/zero/Memory; {
  +START:   #1
        return vR0.ipSender1.processMemory(vR1,vi2,vi3);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 send
 
 method send(Ljx/zero/Memory;)Ljx/zero/Memory; {
  +START:   #1
        return vR0.ipSender.processMemory(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 send
 
 method close()V {
  +START:   #1
        return;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 close
 
 method getDestination()Ljx/net/IPAddress; {
  +START:   #1
        return vR0.dst;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 getDestination
}
