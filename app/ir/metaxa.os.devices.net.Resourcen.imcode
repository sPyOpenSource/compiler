class metaxa/os/devices/net/Resourcen {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.Timer = 0;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method set_ReceiveCount(I)V {
  +START:   #1
        vR0.ReceiveCount = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_ReceiveCount
 
 method set_SendCount(I)V {
  +START:   #1
        vR0.SendCount = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SendCount
 
 method set_SharedMemorySize(I)V {
  +START:   #1
        vR0.SharedMemorySize = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SharedMemorySize
 
 method set_SharedMemoryVirtual(B)V {
  +START:   #1
        vR0.SharedMemoryVirtual = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_SharedMemoryVirtual
 
 method set_Timer(Lmetaxa/os/devices/net/TimerList;Lmetaxa/os/devices/net/TimerList;II)V {
  +START:   #1
        if vR0.Timer==null goto B16;   
  +B7:   #1
        out.println("Timer schon gesetzt");   [ ?R i. RR] 
        return;   
  +B16:   #1
        b1 = new metaxa/os/devices/net/TimerList(vR1,vR2,vi3,vi4);    [ ?R .. i.][ ?R .. iiiRRR]
        vR0.Timer = b1;   
        return;   
  +END:   #1
 }
// Register: rd 8/8 wr 4 swaps 1 any 0 found 0 set_Timer
 
 method set_TimerInterval(I)V {
  +START:   #1
        vR0.TimerInterval = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_TimerInterval
 
 method set_DownPollRate(I)V {
  +START:   #1
        vR0.DownPollRate = vi1;   
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 set_DownPollRate
 
 method get_ReceiveCount()I {
  +START:   #1
        return vR0.ReceiveCount;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_ReceiveCount
 
 method get_SendCount()I {
  +START:   #1
        return vR0.SendCount;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SendCount
 
 method get_SharedMemorySize()I {
  +START:   #1
        return vR0.SharedMemorySize;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SharedMemorySize
 
 method get_SharedMemoryVirtual()B {
  +START:   #1
        return vR0.SharedMemoryVirtual;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_SharedMemoryVirtual
 
 method get_Timer()Lmetaxa/os/devices/net/TimerList; {
  +START:   #1
        vR1 = (metaxa/os/devices/net/TimerList)(vR0.Timer.clone());    
        return vR1;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 0 found 0 get_Timer
 
 method get_TimerInterval()I {
  +START:   #1
        return vR0.TimerInterval;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_TimerInterval
 
 method get_DownPollRate()I {
  +START:   #1
        return vR0.DownPollRate;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 get_DownPollRate
}
