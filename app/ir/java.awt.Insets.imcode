class java/awt/Insets {
 
 method <init>(IIII)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.top = vi1;   
        vR0.left = vi2;   
        vR0.bottom = vi3;   
        vR0.right = vi4;   
        return;   
  +END:   #1
 }
// Register: rd 9/9 wr 0 swaps 0 any 0 found 0 <init>
 
 method equals(Ljava/lang/Object;)Z {
  +START:   #1
        if (vR1 instanceof java/awt/Insets)!=0 goto B9;   
  +B7:   #1
        return 0;   
  +B9:   #1
        vR2 = (java/awt/Insets)(vR1);    
        if vR2.top==vR0.top goto B27;   
  +B25:   #1
        return 0;   
  +B27:   #1
        if vR2.bottom==vR0.bottom goto B40;   
  +B38:   #1
        return 0;   
  +B40:   #1
        if vR2.left==vR0.left goto B53;   
  +B51:   #1
        return 0;   
  +B53:   #1
        if vR2.right==vR0.right goto B66;   
  +B64:   #1
        return 0;   
  +B66:   #1
        return 1;   
  +END:   #1
 }
// Register: rd 11/11 wr 1 swaps 0 any 1 found 1 equals
 
 method hashCode()I {
  +START:   #1
        return (((vR0.top+vR0.bottom)+vR0.left)+vR0.right);   
  +END:   #1
 }
// Register: rd 4/4 wr 0 swaps 0 any 0 found 0 hashCode
 
 method toString()Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra(vR0.getClass@this().getName@extra()).append@extra("(top=").append@extra(vR0.top).append@extra(",bottom=").append@extra(vR0.bottom).append@extra(",left=").append@extra(vR0.left).append@extra(",right=").append@extra(vR0.right).append@extra(")").toString@extra();   
  +END:   #1
 }
// Register: rd 6/6 wr 22 swaps 16 any 0 found 0 toString
 
 method clone()Ljava/lang/Object; {
  +START:   #2
        b0 = vR0.clone@special();    [ R  R] 
  +B4b0:   #1 reference
        return b0;   
  +H5<caught exception>:   #1 reference
        vR1 = <caught exception>;    
        return 0;   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
0 - 4 handler 5 type 59
 }
// Register: rd 2/2 wr 2 swaps 0 any 0 found 0 clone
}
