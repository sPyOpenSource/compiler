class java/util/Collections$CheckedCollection {
 
 method typeCheck(Ljava/lang/Object;)Ljava/lang/Object; {
  +START:   #1
        if vR1==null goto B28;   
  +B4:   #1
        if vR0.type.isInstance@extra(vR1)!=0 goto B28;   
  -B15:   #1
        throw new java/lang/ClassCastException(vR0.badElementMsg@special(vR1));   
  +B28:   #2
        return vR1;   
  +END:   #1
 }
// Register: rd 5/5 wr 1 swaps 0 any 1 found 0 typeCheck
 
 method badElementMsg(Ljava/lang/Object;)Ljava/lang/String; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        return b0.append@extra("Attempt to insert ").append@extra(vR1.getClass()).append@extra(" element into collection with element type ").append@extra(vR0.type).toString@extra();   
  +END:   #1
 }
// Register: rd 3/3 wr 9 swaps 4 any 0 found 0 badElementMsg
 
 method <init>(Ljava/util/Collection;Ljava/lang/Class;)V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        vR0.c = (java/util/Collection)(requireNonNull@special(vR1,"c"));   
        vR0.type = (java/lang/Class)(requireNonNull@special(vR2,"type"));   
        return;   
  +END:   #1
 }
// Register: rd 5/5 wr 4 swaps 0 any 0 found 0 <init>
 
 method size()I {
  +START:   #1
        return vR0.c.size();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 size
 
 method isEmpty()Z {
  +START:   #1
        return vR0.c.isEmpty();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 isEmpty
 
 method contains(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.c.contains(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 contains
 
 method toArray()[Ljava/lang/Object; {
  +START:   #1
        return vR0.c.toArray();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toArray
 
 method toString()Ljava/lang/String; {
  +START:   #1
        return vR0.c.toString();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 toString
 
 method remove(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.c.remove(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 remove
 
 method clear()V {
  +START:   #1
        vR0.c.clear();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 clear
 
 method containsAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.c.containsAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 containsAll
 
 method removeAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.c.removeAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 removeAll
 
 method retainAll(Ljava/util/Collection;)Z {
  +START:   #1
        return vR0.c.retainAll(vR1);   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 retainAll
 
 method iterator()Ljava/util/Iterator; {
  +START:   #1
        vR1 = vR0.c.iterator();    [ R  R] 
        return new java/util/Collections$CheckedCollection$1(vR0,vR1);   
  +END:   #1
 }
// Register: rd 4/4 wr 2 swaps 0 any 0 found 0 iterator
 
 method add(Ljava/lang/Object;)Z {
  +START:   #1
        return vR0.c.add(vR0.typeCheck@this(vR1));   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 add
 
 method zeroLengthElementArray()[Ljava/lang/Object; {
  +START:   #1
        if vR0.zeroLengthElementArray==null goto B14;   
  +B7:   #1
        b0 = vR0.zeroLengthElementArray;    
        goto +B26b0;   forward return[ RR  ]
  +B14:   #1
        b1 = zeroLengthArray@special(vR0.type);    [ RR R R]
        b0 = b1;    
        vR0.zeroLengthElementArray = b1;   
  +B26b0:   #1 reference
        return b0;   
  +END:   #1
 }
// Register: rd 7/7 wr 4 swaps 0 any 1 found 0 zeroLengthElementArray
 
 method forEach(Ljava/util/function/Consumer;)V {
  +START:   #1
        vR0.c.forEach(vR1);   [   RR] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 forEach
 
 method spliterator()Ljava/util/Spliterator; {
  +START:   #1
        return vR0.c.spliterator();   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 spliterator
 
 method addAll(Ljava/util/Collection;)Z {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 addAll
 
 method toArray([Ljava/lang/Object;)[Ljava/lang/Object; {
  -START:   #1
        throw new java/lang/UnsupportedOperationException("Not supported yet.");   
  +END:   #1
 }
// Register: rd 1/1 wr 1 swaps 0 any 0 found 0 toArray
}
