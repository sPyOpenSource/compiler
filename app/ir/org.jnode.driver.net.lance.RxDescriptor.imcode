class org/jnode/driver/net/lance/RxDescriptor {
 
 method <init>(Ljx/zero/Memory;II)V {
  +START:   #1
        vR0.<init>@special(vR1,vi2,vi3);   [   iiRR] 
        vR0.setOwnerSelf@this(0);   [   iR..] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 0 swaps 0 any 0 found 0 <init>
 
 method clearStatus()V {
  +START:   #1
        vR0.mem.set16(((vR0.offset+6) >> 1),-32768);   [  i iiR] 
        return;   
  +END:   #1
 }
// Register: rd 2/2 wr 1 swaps 1 any 0 found 0 clearStatus
 
 method getMessageByteCount()S {
  +START:   #1
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR  i][ RR  iR]
        b0.println(b1.append@extra("b0: ").append@extra(vR0.mem.get8((vR0.offset+8))).toString@extra());   [ RR iiii. RR.] 
        b0 = out;    
        b1 = new java/lang/StringBuilder();    [ RR iiii. i..][ RR iiii. iR.]
        b0.println(b1.append@extra("b1: ").append@extra(vR0.mem.get8(((vR0.offset+1)+8))).toString@extra());   [ RR iiiiiiii. RR.] 
        return vR0.mem.get16(((vR0.offset+8) >> 1));   
  +END:   #1
 }
// Register: rd 10/10 wr 17 swaps 9 any 0 found 0 getMessageByteCount
 
 method getDataBuffer(Ljx/zero/MemoryManager;)Ljx/zero/Memory; {
  +START:   #1
        vR2 = vR1.alloc(vR0.getMessageByteCount@this());    [  i sR] 
        vR2.copyFromMemory(vR0.mem,vR0.dataBufferOffset,0,vR2.size());   [R  iiii iiiRR] 
        return vR2;   
  +END:   #1
 }
// Register: rd 9/9 wr 7 swaps 2 any 0 found 0 getDataBuffer
}
