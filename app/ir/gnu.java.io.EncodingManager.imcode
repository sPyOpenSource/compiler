class gnu/java/io/EncodingManager {
 
 method <init>()V {
  +START:   #1
        vR0.<init>@special();   [   R] 
        return;   
  +END:   #1
 }
// Register: rd 1/1 wr 0 swaps 0 any 0 found 0 <init>
 
 method findDecoderConstructor(Ljava/lang/String;Z)Ljava/lang/reflect/Constructor; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        vR2 = getProperty@special(b0.append@extra("gnu.java.io.encoding_scheme_alias.").append@extra(vR0).toString@extra());    [ R iR. R..]
        if vR2==null goto B29;   
  +B27:   #1
        vR0 = vR2;    
  +B29:   #1
        vR3 = new java/util/StringTokenizer(encoding_path,":");    [ R ... i..][ R ... iRRR]
  +B42:   #1
        if vR3.hasMoreTokens()==0 goto B130;   
  +B49:   #1
        b0 = new java/lang/StringBuilder();    [ R ... i...][ R ... iR..]
        vR4 = b0.append@extra(vR3.nextToken()).append@extra(".decode.Decoder").append@extra(vR0).toString@extra();    [RR R i...i R...] [RR R iR..i RR..] [RR R iRR.i RRR.] [RR R iRRRi RRRR] 
  +B77:   #1
        vR5 = forName@special(vR4);    [RRR R ..... R...]
        vR6 = new java/lang/Class()[1];    
        vR6[0] = forName@special("java.io.InputStream");   
        vR7 = vR5.getConstructor@extra(vR6);    [RRRRR R R.... RR..] 
        if vi1==0 goto B122;   
  +B112:   #1
        decoder_cons.put(vR0,vR7);   [RRRRRR R ..... RRR.] 
  +B122:   #1
        b0 = vR7;    
  +B124b0:   #1 reference
        return b0;   
  +H125<caught exception>:   #1 reference
        vR5 = <caught exception>;    
        goto +B42;   [RRRRRR R ..... ....]
  -B130:   #1
        throw new java/io/UnsupportedEncodingException(vR0);   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
77 - 124 handler 125 type 21
 }
// Register: rd 14/14 wr 24 swaps 3 any 4 found 0 findDecoderConstructor
 
 method findEncoderConstructor(Ljava/lang/String;Z)Ljava/lang/reflect/Constructor; {
  +START:   #1
        b0 = new java/lang/StringBuilder();    [ R  i][ R  iR]
        vR2 = getProperty@special(b0.append@extra("gnu.java.io.encoding_scheme_alias.").append@extra(vR0).toString@extra());    [ R iR. R..]
        if vR2==null goto B29;   
  +B27:   #1
        vR0 = vR2;    
  +B29:   #1
        vR3 = new java/util/StringTokenizer(encoding_path,":");    [ R ... i..][ R ... iRRR]
  +B42:   #1
        if vR3.hasMoreTokens()==0 goto B130;   
  +B49:   #1
        b0 = new java/lang/StringBuilder();    [ R ... i...][ R ... iR..]
        vR4 = b0.append@extra(vR3.nextToken()).append@extra(".encode.Encoder").append@extra(vR0).toString@extra();    [RR R i...i R...] [RR R iR..i RR..] [RR R iRR.i RRR.] [RR R iRRRi RRRR] 
  +B77:   #1
        vR5 = forName@special(vR4);    [RRR R ..... R...]
        vR6 = new java/lang/Class()[1];    
        vR6[0] = forName@special("java.io.OutputStream");   
        vR7 = vR5.getConstructor@extra(vR6);    [RRRRR R R.... RR..] 
        if vi1==0 goto B122;   
  +B112:   #1
        encoder_cons.put(vR0,vR7);   [RRRRRR R ..... RRR.] 
  +B122:   #1
        b0 = vR7;    
  +B124b0:   #1 reference
        return b0;   
  +H125<caught exception>:   #1 reference
        vR5 = <caught exception>;    
        goto +B42;   [RRRRRR R ..... ....]
  -B130:   #1
        throw new java/io/UnsupportedEncodingException(vR0);   
  +END:   #1
EXCEPTIONHANDLER-TABLE:
77 - 124 handler 125 type 21
 }
// Register: rd 14/14 wr 24 swaps 3 any 4 found 0 findEncoderConstructor
 
 method getDecoder()Lgnu/java/io/decode/Decoder; {
  +START:   #1
        return default_decoder_instance;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDecoder
 
 method getDecoder(Ljava/lang/String;)Lgnu/java/io/decode/Decoder; {
  +START:   #1
        return getDecoder@special(vR0,1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDecoder
 
 method getDecoder(Ljava/lang/String;Z)Lgnu/java/io/decode/Decoder; {
  +START:   #1
        vR2 = (gnu/java/io/decode/Decoder)(decoder_instances.get(vR0));    
        if vR2==null goto B17;   
  +B15:   #1
        return vR2;   
  +B17:   #1
        vR2 = getDecoder@special(0,vR0,vi1);    [R  . iRR]
        if vi1==0 goto B37;   
  +B28:   #1
        decoder_instances.put(vR0,vR2);   [R  . RRR] 
  +B37:   #1
        return vR2;   
  +END:   #1
 }
// Register: rd 5/5 wr 5 swaps 0 any 2 found 0 getDecoder
 
 method getDecoder(Ljava/io/InputStream;)Lgnu/java/io/decode/Decoder; {
  +START:   #1
        vR1 = new java/lang/Object()[1];    
        vR1[0] = vR0;   
        vR2 = 0;    
        return vR2;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 1 found 0 getDecoder
 
 method getDecoder(Ljava/io/InputStream;Ljava/lang/String;)Lgnu/java/io/decode/Decoder; {
  +START:   #1
        return getDecoder@special(vR0,vR1,1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getDecoder
 
 method getDecoder(Ljava/io/InputStream;Ljava/lang/String;Z)Lgnu/java/io/decode/Decoder; {
  +START:   #1
        vR3 = findDecoderConstructor@special(vR1,vi2);    [   iR]
        vR4 = new java/lang/Object()[1];    
        vR4[0] = vR0;   
        vR5 = 0;    
        return vR5;   
  +END:   #1
 }
// Register: rd 3/3 wr 3 swaps 0 any 1 found 0 getDecoder
 
 method getEncoder()Lgnu/java/io/encode/Encoder; {
  +START:   #1
        return default_encoder_instance;   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getEncoder
 
 method getEncoder(Ljava/lang/String;)Lgnu/java/io/encode/Encoder; {
  +START:   #1
        return getEncoder@special(vR0,1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getEncoder
 
 method getEncoder(Ljava/lang/String;Z)Lgnu/java/io/encode/Encoder; {
  +START:   #1
        vR2 = (gnu/java/io/encode/Encoder)(encoder_instances.get(vR0));    
        if vR2==null goto B17;   
  +B15:   #1
        return vR2;   
  +B17:   #1
        vR2 = getEncoder@special(0,vR0,vi1);    [R  . iRR]
        if vi1==0 goto B37;   
  +B28:   #1
        encoder_instances.put(vR0,vR2);   [R  . RRR] 
  +B37:   #1
        return vR2;   
  +END:   #1
 }
// Register: rd 5/5 wr 5 swaps 0 any 2 found 0 getEncoder
 
 method getEncoder(Ljava/io/OutputStream;)Lgnu/java/io/encode/Encoder; {
  +START:   #1
        vR1 = new java/lang/Object()[1];    
        vR1[0] = vR0;   
        vR2 = 0;    
        return vR2;   
  +END:   #1
 }
// Register: rd 3/3 wr 2 swaps 0 any 1 found 0 getEncoder
 
 method getEncoder(Ljava/io/OutputStream;Ljava/lang/String;)Lgnu/java/io/encode/Encoder; {
  +START:   #1
        return getEncoder@special(vR0,vR1,1);   
  +END:   #1
 }
// Register: rd 0/0 wr 0 swaps 0 any 0 found 0 getEncoder
 
 method getEncoder(Ljava/io/OutputStream;Ljava/lang/String;Z)Lgnu/java/io/encode/Encoder; {
  +START:   #1
        vR3 = findEncoderConstructor@special(vR1,vi2);    [   iR]
        vR4 = new java/lang/Object()[1];    
        vR4[0] = vR0;   
        vR5 = 0;    
        return vR5;   
  +END:   #1
 }
// Register: rd 3/3 wr 3 swaps 0 any 1 found 0 getEncoder
}
