#BlueJ class context
comment0.target=BasicRAM
comment0.text=\n\ Class\ representing\ a\ basic\ RAM\ memory\ block\ including\ byte\ order\ handling\n\ \n\ @author\ Patrick\ Schmidt\n\ @version\ 090207\ added\ copyright\ notice\n\ \ version\ 060608\ initial\ version\n
comment1.params=size\ order
comment1.target=BasicRAM(int,\ boolean)
comment1.text=\n\ Standard\ constructor\n\ \n\ @param\ startAddr\ the\ starting\ address\ of\ this\ block\n\ @param\ size\ the\ size\ of\ this\ memory\ block\n\ @param\ order\ the\ byte\ order\ for\ this\ block,\ true\ for\ little\ endian,\ false\n\ for\ big\ endian\n
comment10.params=address\ raw
comment10.target=void\ initRAM(int,\ byte[])
comment10.text=\n\ Method\ initializing\ the\ basic\ ram\ with\ a\ given\ image\ at\ the\ starting\n\ address\n\ @param\ address\ the\ address\ to\ copy\ the\ image\ to\n\ @param\ raw\ the\ image\ to\ copy\n
comment2.params=address\ b
comment2.target=void\ write8(int,\ byte)
comment2.text=\n\ @see\ AddressRange\#write8(int,\ byte)\n
comment3.params=address\ s
comment3.target=void\ write16(int,\ short)
comment3.text=\n\ @see\ AddressRange\#write16(int,\ short)\n
comment4.params=address\ i
comment4.target=void\ write32(int,\ int)
comment4.text=\n\ @see\ AddressRange\#write32(int,\ int)\n
comment5.params=address\ l
comment5.target=void\ write64(int,\ long)
comment5.text=\n\ @see\ AddressRange\#write64(int,\ long)\n
comment6.params=address
comment6.target=byte\ read8(int)
comment6.text=\n\ @see\ AddressRange\#read8(int)\n
comment7.params=address
comment7.target=short\ read16(int)
comment7.text=\n\ @see\ AddressRange\#read16(int)\n
comment8.params=address
comment8.target=int\ read32(int)
comment8.text=\n\ @see\ AddressRange\#read32(int)\n
comment9.params=address
comment9.target=long\ read64(int)
comment9.text=\n\ @see\ AddressRange\#read64(int)\n
numComments=11
