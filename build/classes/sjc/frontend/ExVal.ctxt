#BlueJ class context
comment0.target=ExVal
comment0.text=\n\ ExVal\:\ constant\ value\n\ \n\ @author\ S.\ Frenz\n\ @version\ 120925\ added\ support\ for\ code\ printer\n\ \ version\ 101015\ adopted\ changed\ Expr\n\ \ version\ 101014\ fixed\ implicit\ char\ conversion\n\ \ version\ 091209\ moved\ to\ frontend\ package\n\ \ version\ 091018\ simplified\ setting\ of\ preferredType,\ declining\ original\ float\ base\ type\n\ \ version\ 091017\ fixed\ setting\ of\ preferredType\ for\ original\ float\ base\ type\n\ \ version\ 091005\ adopted\ changed\ Expr\ with\ support\ for\ preferredType\ in\ resolving\n\ \ version\ 090724\ adopted\ changed\ Expr\n\ \ version\ 090718\ adopted\ move\ of\ modifier\ flags\ from\ Vrbl\ to\ AccVar,\ adopted\ changed\ Expr\n\ \ version\ 090207\ added\ copyright\ notice\ and\ replaced\ genLoadConstNullAddr\ by\ genLoadConstVal\n\ \ version\ 070909\ optimized\ signature\ of\ Expr.resolve\n\ \ version\ 070809\ added\ support\ for\ float\ and\ double\n\ \ version\ 070727\ replaced\ exSubResolve\ by\ resolve\ as\ there\ is\ nothing\ done\ anymore,\ optimized\ genOutputVal\n\ \ version\ 070628\ adopted\ changes\ for\ "Expr\ extends\ TypeRef"\n\ \ version\ 070114\ reduced\ access\ level\ where\ possible\n\ \ version\ 070111\ adapted\ change\ in\ printPos\ and\ compErr\n\ \ version\ 070106\ removed\ genOutputAddr\n\ \ version\ 061229\ removed\ access\ to\ firstInstr\n\ \ version\ 061203\ optimized\ calls\ to\ printPos\ and\ compErr\n\ \ version\ 061127\ optimized\ genOutputCondJmp\n\ \ version\ 060607\ initial\ version\n
comment1.params=fid\ il\ ic
comment1.target=ExVal(int,\ int,\ int)
comment2.params=codePrnt
comment2.target=void\ printExpression(sjc.debug.CodePrinter)
comment3.params=unitContext\ mthdContext\ resolveFlags\ preferredType\ ctx
comment3.target=boolean\ resolve(sjc.compbase.Unit,\ sjc.compbase.Mthd,\ int,\ sjc.compbase.TypeRef,\ sjc.compbase.Context)
comment4.params=
comment4.target=boolean\ isConstZero()
comment5.params=ctx
comment5.target=int\ calcConstantType(sjc.compbase.Context)
comment6.params=ctx
comment6.target=int\ getConstIntValue(sjc.compbase.Context)
comment7.params=ctx
comment7.target=long\ getConstLongValue(sjc.compbase.Context)
comment8.params=reg\ ctx
comment8.target=void\ genOutputVal(int,\ sjc.compbase.Context)
comment9.params=jumpDest\ isTrue\ elseDest\ ctx
comment9.target=void\ genOutputCondJmp(sjc.backend.Instruction,\ boolean,\ sjc.backend.Instruction,\ sjc.compbase.Context)
numComments=10
