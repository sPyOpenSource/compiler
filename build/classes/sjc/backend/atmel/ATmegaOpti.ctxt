#BlueJ class context
comment0.target=ATmegaOpti
comment0.text=\n\ ATmegaOpti\:\ optimizer\ for\ ATmega\ backend\ implementation\n\ \n\ @author\ S.\ Frenz\n\ @version\ 100620\ fixed\ bsh\ optimization\n\ \ version\ 100502\ added\ optimization\ for\ shift\ with\ imm.\ 1\n\ \ version\ 100501\ fixed\ ROL/LSR\ flag-reading\ information,\ fixed\ instruction\ kill\ after\ SBRC\n\ \ version\ 100115\ adopted\ changed\ error\ reporting\n\ \ version\ 090702\ added\ support\ for\ stack\ extreme\ check\n\ \ version\ 090207\ added\ copyright\ notice\n\ \ version\ 090116\ added\ support\ for\ SBRC\ instruction\n\ \ version\ 090109\ bugfix\ in\ SBI\ and\ CBI\ which\ is\ not\ allowed\ for\ destinations\ >\=0x20\n\ \ version\ 081123\ added\ multiple\ optimization\ for\ constant\ pointer\ arithmetic\n\ \ version\ 081109\ bugfix\ in\ searchValueSetting\n\ \ version\ 081108\ added\ optimization\ for\ constant\ pop,\ unneccessary\ MOVW,\ push/pop-detection\ beyond\ calls,\ several\ bugfixes\n\ \ version\ 081107\ added\ flow\ analysis\ for\ noReadWriteUntil\ and\ searchCorrespPush\n\ \ version\ 081106\ added\ dead\ code\ elimination,\ andi/ori\ optimization\ including\ sbi/cbi\ reducement\n\ \ version\ 081105\ added\ support\ for\ constant\ parameter\ loading,\ prepared\ constant\ memory\ address\ access\n\ \ version\ 081023\ bugfix\ in\ searchPointerSetting\n\ \ version\ 081022\ several\ bugfixes,\ better\ I_MOVregreg\ optimization\n\ \ version\ 081021\ added\ more\ instruction\ optimizations\ and\ push-pop\ analysis\n\ \ version\ 081020\ added\ stack\ frame\ analysis\ and\ register\ renaming\ for\ I_MOVregreg\ elimination,\ IN/OUT-usage\n\ \ version\ 081019\ added\ flag\ handling\n\ \ version\ 081018\ added\ basic\ ValueInfo\ utilization\n\ \ version\ 081017\ fixed\ CPI-optimization\n\ \ version\ 081016\ added\ support\ for\ ctx.printCode\n\ \ version\ 081015\ redesign\ with\ flow\ analysis\n\ \ version\ 080615\ first\ optimizations\n\ \ version\ 080613\ better\ comments\n\ \ version\ 080611\ adopted\ changes\ for\ language\ throwables\n\ \ version\ 080525\ adopted\ changed\ jump\ conditioning,\ fixed\ jump-optimize-bug\n\ \ version\ 070725\ initial\ version,\ jump\ optimization\n
comment1.params=
comment1.target=sjc.backend.Instruction\ createNewInstruction()
comment10.params=i\ reg
comment10.target=boolean\ isRead(sjc.backend.Instruction,\ int)
comment11.params=i\ reg
comment11.target=boolean\ isWrite(sjc.backend.Instruction,\ int)
comment12.params=i\ type\ reg0\ reg1\ imm
comment12.target=void\ set(sjc.backend.Instruction,\ int,\ int,\ int,\ int)
comment13.params=first\ last
comment13.target=void\ optimize(sjc.backend.Instruction,\ sjc.backend.Instruction)
comment14.params=i
comment14.target=void\ kill(sjc.backend.Instruction)
comment15.params=now
comment15.target=void\ markReachableCode(sjc.backend.Instruction)
comment16.params=now
comment16.target=void\ handleJumpDest(sjc.backend.Instruction)
comment17.params=
comment17.target=ValueInfo\ getEmptyValueInfo()
comment18.params=vi
comment18.target=void\ ungetValueInfo(ValueInfo)
comment19.params=i\ flagMask
comment19.target=int\ flagRelevance(sjc.backend.Instruction,\ int)
comment2.params=first
comment2.target=void\ finalizeInstructions(sjc.backend.Instruction)
comment20.params=from\ to\ reg\ noRead\ noWrite
comment20.target=boolean\ noReadWriteUntil(sjc.backend.Instruction,\ sjc.backend.Instruction,\ int,\ boolean,\ boolean)
comment21.params=i\ end\ oldReg\ newReg
comment21.target=boolean\ tryReplaceRegisterReading(sjc.backend.Instruction,\ sjc.backend.Instruction,\ int,\ int)
comment22.params=i
comment22.target=boolean\ tryReplaceRegImmADC(sjc.backend.Instruction)
comment23.params=i\ reg
comment23.target=ValueInfo\ searchPointerSetting(sjc.backend.Instruction,\ int)
comment24.params=i\ reg
comment24.target=ValueInfo\ searchValueSetting(sjc.backend.Instruction,\ int)
comment25.params=i\ flagWriteMask
comment25.target=int\ searchFlagSetting(sjc.backend.Instruction,\ int)
comment26.params=i\ reg\ includeInstruction
comment26.target=sjc.backend.Instruction\ searchWriteBefore(sjc.backend.Instruction,\ int,\ boolean)
comment27.params=i\ imm
comment27.target=ValueInfo\ searchLocalSetting(sjc.backend.Instruction,\ int)
comment28.params=i\ imm
comment28.target=sjc.backend.Instruction\ searchStackFrameWriteBefore(sjc.backend.Instruction,\ int)
comment29.params=i\ imm
comment29.target=sjc.backend.Instruction\ searchStackFrameReadAfter(sjc.backend.Instruction,\ int)
comment3.params=jump
comment3.target=boolean\ fixJump(sjc.backend.Instruction)
comment30.params=i\ popCnt
comment30.target=sjc.backend.Instruction\ searchCorrespPush(sjc.backend.Instruction,\ int)
comment31.params=i\ reg
comment31.target=sjc.backend.Instruction\ searchReadStartingAt(sjc.backend.Instruction,\ int)
comment32.params=a\ b
comment32.target=boolean\ sameInstruction(sjc.backend.Instruction,\ sjc.backend.Instruction)
comment33.params=i
comment33.target=sjc.backend.Instruction\ getNextRealIns(sjc.backend.Instruction)
comment34.params=i\ end
comment34.target=boolean\ noJumpDestBetween(sjc.backend.Instruction,\ sjc.backend.Instruction)
comment4.params=type\ reg0\ reg1\ imm
comment4.target=void\ ins(int,\ int,\ int,\ int)
comment5.params=type\ reg0\ reg1\ imm\ dest
comment5.target=void\ ins(int,\ int,\ int,\ int,\ sjc.backend.Instruction)
comment6.params=now
comment6.target=sjc.backend.Instruction\ insertInsAfter(sjc.backend.Instruction)
comment7.params=refMthd\ parSize
comment7.target=sjc.backend.Instruction\ insPatchedCall(sjc.compbase.Mthd,\ int)
comment8.params=reg
comment8.target=long\ readReg(int)
comment9.params=reg
comment9.target=long\ writeReg(int)
numComments=35
