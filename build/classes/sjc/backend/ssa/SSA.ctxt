#BlueJ class context
comment0.target=SSA
comment0.text=\n\ SSA\:\ backend\ for\ artificial\ machine\ with\ "write\ once"\ register\ semantic\ \n\ \n\ @author\ S.\ Frenz\n\ @version\ 110127\ added\ I_ASSIGNcmplx\ and\ I_LOADcmplx\ instructions\ used\ by\ SSA-optimizer\n\ \ version\ 101210\ adopted\ changed\ Architecture\n\ \ version\ 101102\ fixed\ maximum\ size\ of\ instruction\ after\ extending\ I_DEREF\n\ \ version\ 101101\ adopted\ changed\ Architecture\ (extended\ I_DEREF)\n\ \ version\ 101031\ fixed\ instruction\ print\ for\ I_MAGC\n\ \ version\ 100927\ fixed\ unsignedness\ of\ chars\n\ \ version\ 100922\ removed\ optimization\ for\ genLoadVarVal\ if\ base\ address\ is\ R_BASE\n\ \ version\ 100823\ implemented\ insertZeroHint\n\ \ version\ 100427\ added\ printCode\ functions\n\ \ version\ 100115\ adopted\ changed\ error\ reporting\n\ \ version\ 100114\ removed\ unused\ method\n\ \ version\ 091004\ fixed\ inlineVarOffset\ after\ memory\ interface\ change\n\ \ version\ 091001\ adopted\ changed\ memory\ interface\n\ \ version\ 090717\ added\ support\ for\ stack\ extreme\ check\ and\ adopted\ changed\ Architecture\n\ \ version\ 090626\ adopted\ changed\ Architecture\n\ \ version\ 090319\ added\ check\ for\ optimizable\ case\ in\ genLoadVarVal\n\ \ version\ 090310\ fixed\ internal\ error\ detection\ in\ fixJDest\ and\ finalizeInstructions\n\ \ version\ 090219\ adopted\ changed\ Architecture\ (genCopyInstContext<->getClssInstReg)\n\ \ version\ 090208\ removed\ genClearMem\n\ \ version\ 090207\ added\ copyright\ notice\ and\ removed\ genLoadNullAddr\ as\ it\ is\ no\ longer\ used\n\ \ version\ 081021\ adopted\ changes\ in\ Architecture\n\ \ version\ 080622\ adopted\ changed\ naming\ of\ inlineVarOffset-parameter\ (no\ effect\ for\ SSA)\n\ \ version\ 080616\ added\ support\ for\ language\ throwables,\ changed\ allocation\ of\ instructions\ to\ enable\ full\ sized\ inline\ instructions\n\ \ version\ 080525\ adopted\ changed\ genCondJmp\ signature,\ removed\ genMarker\n\ \ version\ 080518\ moved\ createNewInstruction\ to\ LittleEndian\n\ \ version\ 080508\ added\ insertFlowHint\n\ \ version\ 080207\ changed\ semantics\ of\ I_IVOF\ to\ hold\ all\ parameters\n\ \ version\ 080203\ added\ support\ for\ method\ inlining,\ added\ prepareFinalization\ to\ support\ SSAToNative,\ changed\ float/double\ handling\n\ \ version\ 080123\ added\ seetting\ of\ mthd-object\ for\ enter-\ and\ leave-instruction\n\ \ version\ 080122\ fixed\ linefeed\ in\ error-message\n\ \ version\ 080105\ added\ genSavePrimary\ and\ genRestPrimary\n\ \ version\ 070913\ added\ new\ instruction\ for\ inlineVarOffset,\ genClearMem\n\ \ version\ 070809\ prepared\ for\ float\ and\ double\n\ \ version\ 070628\ added\ allocClearBits\n\ \ version\ 070615\ removed\ no\ longer\ needed\ getRef\n\ \ version\ 070606\ shortened\ internal\ error\ messages\n\ \ version\ 070601\ optimized\ codeInstruction\n\ \ version\ 070531\ adopted\ removal\ of\ Architecture.genLoadFromMem\n\ \ version\ 070505\ changed\ naming\ of\ Clss\ to\ Unit,\ changed\ OutputObject\ to\ int\n\ \ version\ 070501\ optimized\ insPatched\n\ \ version\ 070114\ added\ parSize\ in\ genCall,\ removed\ never\ called\ methods,\ reduced\ access\ level\ where\ possible\n\ \ version\ 070113\ adopted\ change\ of\ genCheckNull\ to\ genCompPtrToNull\n\ \ version\ 070101\ fixed\ fixJump,\ adopted\ change\ in\ genCall\n\ \ version\ 061231\ fixed\ invalid\ jump\ elimination\n\ \ version\ 061229\ removed\ access\ to\ firstInstr\n\ \ version\ 061225\ adopted\ change\ in\ codeProlog\n\ \ version\ 061203\ optimized\ calls\ to\ printPos\ and\ compErr\n\ \ version\ 061202\ adopted\ change\ of\ genCall\n\ \ version\ 061112\ bugfix\ in\ genUnaOp\n\ \ version\ 061111\ adopted\ change\ of\ Architecture.codeEpilog\n\ \ version\ 061109\ added\ support\ for\ Ops.C_BO\n\ \ version\ 060628\ added\ support\ for\ static\ compilation\n\ \ version\ 060620\ added\ kill-on-jump\n\ \ version\ 060619\ added\ length\ of\ method\ after\ leave-instruction\n\ \ version\ 060616\ inserted\ genCopyInstContext\n\ \ version\ 060611\ added\ register\ chain\ to\ support\ ensureFreeRegs\n\ \ version\ 060610\ changed\ jump\ conditions\ to\ SSAdef\n\ \ version\ 060608\ fixed\ long-constant\n\ \ version\ 060607\ initial\ version\n
comment1.params=iRB
comment1.target=SSA(int)
comment10.params=hint\ id
comment10.target=int\ insertFlowHint(int,\ int)
comment11.params=objReg\ offset\ type
comment11.target=void\ insertZeroHint(int,\ int,\ int)
comment12.params=type
comment12.target=int\ getTypeID(int)
comment13.params=first
comment13.target=void\ optimize(sjc.backend.Instruction)
comment14.params=first
comment14.target=void\ prepareFinalization(sjc.backend.Instruction)
comment15.params=first
comment15.target=void\ finalizeInstructions(sjc.backend.Instruction)
comment16.params=mthd
comment16.target=sjc.compbase.Mthd\ prepareMethodCoding(sjc.compbase.Mthd)
comment17.params=
comment17.target=void\ codeProlog()
comment18.params=outline
comment18.target=void\ codeEpilog(sjc.compbase.Mthd)
comment19.params=dst\ val\ type
comment19.target=void\ genLoadConstVal(int,\ int,\ int)
comment2.params=
comment2.target=sjc.backend.Instruction\ createNewInstruction()
comment20.params=dst\ val\ asDouble
comment20.target=void\ genLoadConstDoubleOrLongVal(int,\ long,\ boolean)
comment21.params=dst\ src\ loc\ off
comment21.target=void\ genLoadVarAddr(int,\ int,\ java.lang.Object,\ int)
comment22.params=dst\ src\ loc\ off\ type
comment22.target=void\ genLoadVarVal(int,\ int,\ java.lang.Object,\ int,\ int)
comment23.params=dst\ src\ toType\ fromType
comment23.target=void\ genConvertVal(int,\ int,\ int,\ int)
comment24.params=dst\ src\ type
comment24.target=void\ genDup(int,\ int,\ int)
comment25.params=val\ type
comment25.target=void\ genPushConstVal(int,\ int)
comment26.params=val\ asDouble
comment26.target=void\ genPushConstDoubleOrLongVal(long,\ boolean)
comment27.params=src\ type
comment27.target=void\ genPush(int,\ int)
comment28.params=dst\ type
comment28.target=void\ genPop(int,\ int)
comment29.params=dst\ src\ type
comment29.target=void\ genAssign(int,\ int,\ int)
comment3.params=loc\ offset\ ptr\ ptrOff
comment3.target=void\ putRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment30.params=dst\ src1\ src2\ op\ type
comment30.target=void\ genBinOp(int,\ int,\ int,\ int,\ int)
comment31.params=dst\ src\ op\ type
comment31.target=void\ genUnaOp(int,\ int,\ int,\ int)
comment32.params=dst\ type
comment32.target=void\ genIncMem(int,\ int)
comment33.params=dst\ type
comment33.target=void\ genDecMem(int,\ int)
comment34.params=
comment34.target=void\ genSaveUnitContext()
comment35.params=
comment35.target=void\ genRestUnitContext()
comment36.params=dst\ off
comment36.target=void\ genLoadUnitContext(int,\ int)
comment37.params=dst\ unitLoc
comment37.target=void\ genLoadConstUnitContext(int,\ java.lang.Object)
comment38.params=
comment38.target=void\ genSaveInstContext()
comment39.params=
comment39.target=void\ genRestInstContext()
comment4.params=loc\ offset\ ptr\ ptrOff
comment4.target=void\ putCodeRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment40.params=src
comment40.target=void\ genLoadInstContext(int)
comment41.params=off\ clssReg\ parSize
comment41.target=void\ genCall(int,\ int,\ int)
comment42.params=intfReg\ off\ parSize
comment42.target=void\ genCallIndexed(int,\ int,\ int)
comment43.params=obj\ parSize
comment43.target=void\ genCallConst(sjc.compbase.Mthd,\ int)
comment44.params=dest
comment44.target=void\ genJmp(sjc.backend.Instruction)
comment45.params=dest\ cond
comment45.target=void\ genCondJmp(sjc.backend.Instruction,\ int)
comment46.params=src1\ src2\ type\ cond
comment46.target=int\ genComp(int,\ int,\ int,\ int)
comment47.params=src\ val\ type\ cond
comment47.target=int\ genCompValToConstVal(int,\ int,\ int,\ int)
comment48.params=src\ val\ asDouble\ cond
comment48.target=int\ genCompValToConstDoubleOrLongVal(int,\ long,\ boolean,\ int)
comment49.params=dst\ src\ type\ memLoc
comment49.target=void\ genWriteIO(int,\ int,\ int,\ int)
comment5.params=ignoreReg1\ ignoreReg2\ keepReg1\ keepReg2
comment5.target=int\ ensureFreeRegs(int,\ int,\ int,\ int)
comment50.params=dst\ src\ type\ memLoc
comment50.target=void\ genReadIO(int,\ int,\ int,\ int)
comment51.params=addr\ off\ checkToOffset\ onSuccess
comment51.target=void\ genCheckBounds(int,\ int,\ int,\ sjc.backend.Instruction)
comment52.params=maxValueReg\ onSuccess
comment52.target=void\ genCheckStackExtreme(int,\ sjc.backend.Instruction)
comment53.params=
comment53.target=void\ genNativeBoundException()
comment54.params=reg\ cond
comment54.target=int\ genCompPtrToNull(int,\ int)
comment55.params=destReg\ objReg\ indReg\ baseOffset\ entrySize
comment55.target=void\ genLoadDerefAddr(int,\ int,\ int,\ int,\ int)
comment56.params=src\ type
comment56.target=void\ genMoveToPrimary(int,\ int)
comment57.params=dst\ type
comment57.target=void\ genMoveFromPrimary(int,\ int)
comment58.params=dst
comment58.target=void\ genMoveIntfMapFromPrimary(int)
comment59.params=type
comment59.target=void\ genSavePrimary(int)
comment6.params=avoidReg1\ avoidReg2\ reUseReg\ type
comment6.target=int\ prepareFreeReg(int,\ int,\ int,\ int)
comment60.params=type
comment60.target=void\ genRestPrimary(int)
comment61.params=inlineMode\ mode\ loc\ offset\ baseValue
comment61.target=void\ inlineVarOffset(int,\ int,\ java.lang.Object,\ int,\ int)
comment62.params=globalAddrReg\ dest\ throwBlockOffset
comment62.target=void\ genThrowFrameBuild(int,\ sjc.backend.Instruction,\ int)
comment63.params=oldDest\ newDest\ throwBlockOffset
comment63.target=void\ genThrowFrameUpdate(sjc.backend.Instruction,\ sjc.backend.Instruction,\ int)
comment64.params=globalAddrReg\ throwBlockOffset
comment64.target=void\ genThrowFrameReset(int,\ int)
comment65.params=dest\ cond
comment65.target=void\ insJump(sjc.backend.Instruction,\ int)
comment66.params=mthd\ iPar2
comment66.target=void\ insPatchedCall(sjc.compbase.Mthd,\ int)
comment67.params=type\ reg0\ dest\ tfo
comment67.target=void\ insPatchedThrowFrameInstruction(int,\ int,\ sjc.backend.Instruction,\ int)
comment68.params=type
comment68.target=sjc.backend.Instruction\ ins(int)
comment69.params=type\ reg0
comment69.target=sjc.backend.Instruction\ ins(int,\ int)
comment7.params=
comment7.target=int\ allocReg()
comment70.params=type\ reg0\ reg1
comment70.target=sjc.backend.Instruction\ ins(int,\ int,\ int)
comment71.params=type\ reg0\ reg1\ reg2\ iPar1
comment71.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int)
comment72.params=type\ reg0\ reg1\ reg2\ iPar1\ lPar
comment72.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int,\ long)
comment73.params=type\ reg0\ reg1\ reg2\ iPar1\ lPar\ iPar2
comment73.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int,\ long,\ int)
comment74.params=i
comment74.target=void\ codeInstruction(sjc.backend.Instruction)
comment75.params=me
comment75.target=void\ fixJDest(sjc.backend.Instruction)
comment76.params=first
comment76.target=void\ printCode(sjc.backend.Instruction)
comment77.params=i
comment77.target=int\ print(sjc.backend.Instruction)
comment8.params=deallocRegs\ keepRegs\ restore
comment8.target=void\ deallocRestoreReg(int,\ int,\ int)
comment9.params=deallocRegs
comment9.target=void\ insertKillHint(int)
numComments=78
