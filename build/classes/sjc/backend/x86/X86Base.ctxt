#BlueJ class context
comment0.target=X86Base
comment0.text=\n\ X86Base\:\ instructions\ for\ x86-architectures\n\ \n\ @author\ S.\ Frenz\n\ @version\ 160201\ added\ pointer\ naming\ for\ plain\ addresses\ in\ asmMode\n\ \ version\ 151226\ added\ more\ optimization\ for\ jump\ encoding\n\ \ version\ 151108\ adopted\ changed\ buildAssemblerText\ concept\n\ \ version\ 151026\ added\ support\ for\ assembler\ output\n\ \ version\ 140420\ fixed\ print\ of\ OUT\ instruction\n\ \ version\ 110127\ add\ I_CMPmemreg,\ I_CBW\ and\ I_CWD\ for\ 64\ bit\ optimizer\n\ \ version\ 101119\ added\ I_MOVSXD*\n\ \ version\ 101104\ added\ some\ instruction\ types\ (used\ in\ optimizer)\n\ \ version\ 101027\ fixed\ print\ of\ CL-based\ shift\ instructions\n\ \ version\ 101018\ optimized\ finalizeInstructions\n\ \ version\ 100922\ added\ I_ANDmemreg\ and\ I_XORmemreg\n\ \ version\ 100813\ fixed\ jump\ destination\ check\n\ \ version\ 100504\ removed\ no\ longer\ used\ genNativeReturnMissing\n\ \ version\ 100415\ fixed\ register\ maintainance\ for\ calls\ with\ special\ regs\n\ \ version\ 100115\ adopted\ changed\ error\ reporting\n\ \ version\ 100114\ removed\ unused\ method\n\ \ version\ 100113\ added\ POPdummy\ in\ printCode\n\ \ version\ 091109\ added\ POPdummy\n\ \ version\ 091103\ removed\ unused\ variables/methods\n\ \ version\ 091102\ added\ call\ to\ source\ token\ printing\n\ \ version\ 091004\ fixed\ inlineVarOffset\ after\ memory\ interface\ change\n\ \ version\ 091001\ adopted\ changed\ memory\ interface\n\ \ version\ 090626\ added\ support\ for\ stack\ extreme\ check\n\ \ version\ 090619\ adopted\ changed\ Architecture\n\ \ version\ 090430\ added\ support\ for\ "return\ missing"\ hint\n\ \ version\ 090219\ got\ basic\ getReg\ functionality\ and\ adopted\ changed\ Architecture\ (genCopyInstContext<->getClssInstReg)\n\ \ version\ 090208\ removed\ error\ message\ for\ genClearMem\n\ \ version\ 090207\ added\ copyright\ notice\ and\ removed\ genLoadNullAddr/genPushNull\n\ \ version\ 090206\ added\ error\ string\ ERR_INVMODE_GENSTOREVARX\n\ \ version\ 081231\ made\ insJump\ and\ insPatched*\ public\ to\ support\ SRB\ architectures\n\ \ version\ 081209\ added\ support\ for\ method\ printing\n\ \ version\ 081021\ adopted\ changes\ in\ Architecture\n\ \ version\ 080615\ adopted\ changes\ in\ Architecture\n\ \ version\ 080605\ added\ support\ for\ language\ throwables\n\ \ version\ 080525\ adopted\ changed\ genCondJmp\ signature,\ removed\ genMarker\n\ \ version\ 080518\ moved\ createNewInstruction\ to\ LittleEndian\n\ \ version\ 070915\ added\ FWAIT\n\ \ version\ 070913\ added\ support\ for\ inlineVarOffset,\ genClearMem,\ changed\ order\ of\ IM_P0/IM_P1\n\ \ version\ 070814\ added\ support\ for\ float/double\ instructions\ and\ registers\n\ \ version\ 070812\ prevented\ hasFltDblError\ from\ printing\ message\ multiple\ times\n\ \ version\ 070809\ added\ support\ for\ float/double\ error\n\ \ version\ 070610\ optimized\ access\ to\ different\ jump\ offset\ sizes\n\ \ version\ 070606\ got\ common\ methods\ and\ variables\ of\ childs\n\ \ version\ 070601\ got\ externalizable\ Strings\ of\ childs\n\ \ version\ 070513\ added\ ADD/SUB/AND/XOR/OR-regmem\n\ \ version\ 070114\ added\ I_MOVZXregmem\ and\ I_CMPmemimm\n\ \ version\ 070108\ changed\ SHLreg1,\ added\ SHLregimm\n\ \ version\ 061231\ added\ ari-mem-ops\n\ \ version\ 060703\ initial\ version\n
comment1.params=mask\ type
comment1.target=int\ freeRegSearch(int,\ int)
comment10.params=type\ reg0\ reg1\ disp
comment10.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int)
comment11.params=imem\ ilev\ ictx
comment11.target=void\ init(sjc.memory.MemoryImage,\ int,\ sjc.compbase.Context)
comment12.params=preInitCtx
comment12.target=java.lang.String\ checkBuildAssembler(sjc.compbase.Context)
comment13.params=generatingMthd\ first
comment13.target=void\ attachMethodAssemblerText(sjc.compbase.Mthd,\ sjc.backend.Instruction)
comment14.params=ignoreReg1\ ignoreReg2\ keepReg1\ keepReg2
comment14.target=int\ ensureFreeRegs(int,\ int,\ int,\ int)
comment15.params=avoidReg1\ avoidReg2\ reUseReg\ type
comment15.target=int\ prepareFreeReg(int,\ int,\ int,\ int)
comment16.params=
comment16.target=int\ allocReg()
comment17.params=deallocRegs\ keepRegs\ restore
comment17.target=void\ deallocRestoreReg(int,\ int,\ int)
comment18.params=nr\ reg\ type\ firstWrite
comment18.target=int\ getReg(int,\ int,\ int,\ boolean)
comment19.params=regs
comment19.target=void\ deallocReg(int)
comment2.params=regs
comment2.target=int\ storeReg(int)
comment20.params=value\ hit\ prefere
comment20.target=int\ bitSearch(int,\ int,\ int)
comment21.params=first
comment21.target=void\ finalizeInstructions(sjc.backend.Instruction)
comment22.params=
comment22.target=void\ genSaveUnitContext()
comment23.params=
comment23.target=void\ genRestUnitContext()
comment24.params=dst\ off
comment24.target=void\ genLoadUnitContext(int,\ int)
comment25.params=src
comment25.target=void\ genLoadInstContext(int)
comment26.params=
comment26.target=void\ genSaveInstContext()
comment27.params=
comment27.target=void\ genRestInstContext()
comment28.params=dstR\ srcR\ op\ type
comment28.target=void\ genDefaultUnaOp(int,\ int,\ int,\ int)
comment29.params=dest
comment29.target=void\ genJmp(sjc.backend.Instruction)
comment3.params=regs
comment3.target=void\ restoreReg(int)
comment30.params=dest\ cond
comment30.target=void\ genCondJmp(sjc.backend.Instruction,\ int)
comment31.params=addrR\ valR\ type\ memLoc
comment31.target=void\ genWriteIO(int,\ int,\ int,\ int)
comment32.params=valR\ addrR\ type\ memLoc
comment32.target=void\ genReadIO(int,\ int,\ int,\ int)
comment33.params=addr\ off\ checkToOffset\ onSuccess
comment33.target=void\ genCheckBounds(int,\ int,\ int,\ sjc.backend.Instruction)
comment34.params=maxValueReg\ onSuccess
comment34.target=void\ genCheckStackExtreme(int,\ sjc.backend.Instruction)
comment35.params=
comment35.target=void\ genNativeBoundException()
comment36.params=reg\ cond
comment36.target=int\ genCompPtrToNull(int,\ int)
comment37.params=byteCount\ objReg\ loc\ offset\ additionalOffset
comment37.target=void\ inlineVarOffset(int,\ int,\ java.lang.Object,\ int,\ int)
comment38.params=globalAddrReg\ dest\ throwBlockOffset
comment38.target=void\ genThrowFrameBuild(int,\ sjc.backend.Instruction,\ int)
comment39.params=oldDest\ newDest\ throwBlockOffset
comment39.target=void\ genThrowFrameUpdate(sjc.backend.Instruction,\ sjc.backend.Instruction,\ int)
comment4.params=i\ regs\ type\ firstWrite
comment4.target=int\ internalGetReg(int,\ int,\ int,\ boolean)
comment40.params=globalAddrReg\ throwBlockOffset
comment40.target=void\ genThrowFrameReset(int,\ int)
comment41.params=dest\ cond
comment41.target=void\ insJump(sjc.backend.Instruction,\ int)
comment42.params=refMthd\ par
comment42.target=void\ insPatchedCall(sjc.compbase.Mthd,\ int)
comment43.params=mode\ i1\ i2
comment43.target=void\ insPatchedAdd(int,\ sjc.backend.Instruction,\ sjc.backend.Instruction)
comment44.params=me
comment44.target=boolean\ fixJump(sjc.backend.Instruction)
comment45.params=me
comment45.target=boolean\ fixAdd(sjc.backend.Instruction)
comment46.params=me
comment46.target=boolean\ fixStackExtremeAdd(sjc.backend.Instruction)
comment47.params=
comment47.target=void\ hasFltDblWarning()
comment48.params=
comment48.target=void\ errorFPU()
comment49.params=v\ first\ comment\ asmMode
comment49.target=void\ printCode(sjc.osio.TextPrinter,\ sjc.backend.Instruction,\ java.lang.String,\ boolean)
comment5.params=me\ stackCells
comment5.target=void\ internalFixStackExtremeAdd(sjc.backend.Instruction,\ int)
comment50.params=reg
comment50.target=java.lang.String\ getRegName(int)
comment51.params=v\ reg
comment51.target=void\ printReg(sjc.osio.TextPrinter,\ int)
comment52.params=v\ reg\ disp\ asmMode
comment52.target=void\ printMem(sjc.osio.TextPrinter,\ int,\ int,\ boolean)
comment53.params=v\ par
comment53.target=void\ printSize(sjc.osio.TextPrinter,\ int)
comment54.params=v\ dest
comment54.target=void\ printJumpDest(sjc.osio.TextPrinter,\ sjc.backend.Instruction)
comment55.params=v\ i\ asmMode
comment55.target=int\ print(sjc.osio.TextPrinter,\ sjc.backend.Instruction,\ boolean)
comment6.params=type\ reg0\ reg1\ disp\ imm
comment6.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int)
comment7.params=type
comment7.target=sjc.backend.Instruction\ ins(int)
comment8.params=type\ reg0
comment8.target=sjc.backend.Instruction\ ins(int,\ int)
comment9.params=type\ reg0\ reg1
comment9.target=sjc.backend.Instruction\ ins(int,\ int,\ int)
numComments=56
