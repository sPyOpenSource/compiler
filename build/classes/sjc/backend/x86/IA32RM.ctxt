#BlueJ class context
comment0.target=IA32RM
comment0.text=\n\ IA32RM\:\ architecture\ implementation\ for\ 32\ bit\ protected\ mode\ IA32\ processors\n\ \n\ @author\ S.\ Frenz\n\ @version\ 110609\ fixed\ entrySize\ check\ in\ genLoadDerefAddr\n\ \ version\ 101210\ adopted\ changed\ Architecture\n\ \ version\ 101101\ adopted\ changed\ Architecture\n\ \ version\ 101027\ fixed\ sign\ handling\ for\ logical\ bitshift\ of\ byte\ and\ short\ values\n\ \ version\ 100927\ fixed\ unsignedness\ of\ chars\n\ \ version\ 100115\ adopted\ changed\ error\ reporting\ and\ codeStart-movement\n\ \ version\ 091001\ adopted\ changed\ memory\ interface\n\ \ version\ 090717\ adopted\ changed\ Architecture\n\ \ version\ 090626\ added\ support\ for\ stack\ extreme\ check\n\ \ version\ 090619\ adopted\ changed\ Architecture\n\ \ version\ 090430\ added\ support\ for\ native\ "return\ missing"\ hint\n\ \ version\ 090219\ adopted\ changed\ X86Base\n\ \ version\ 090208\ removed\ genClearMem\n\ \ version\ 081209\ added\ support\ for\ method\ printing\n\ \ version\ 081021\ adopted\ changes\ in\ Architecture\n\ \ version\ 080608\ added\ support\ for\ language\ throwables\n\ \ version\ 080525\ adopted\ changed\ genCondJmp\ signature\n\ \ version\ 080122\ fixed\ setting\ of\ usedRegs\ in\ getReg\ on\ firstWrite\n\ \ version\ 080105\ added\ genSavePrimary\ and\ genRestPrimary\n\ \ version\ 070917\ pre-initialization\ of\ stack\ variables\ with\ "0"\n\ \ version\ 070913\ moved\ curVarOffParam\ to\ X86Base,\ added\ support\ for\ genClearMem\n\ \ version\ 070814\ adopted\ renaming\ of\ hasFltDblWarning\n\ \ version\ 070809\ adopted\ changes\ for\ float/double\n\ \ version\ 070809\ adopted\ changes\ for\ float/double\n\ \ version\ 070705\ fixed\ genCompValToConstLongVal\n\ \ version\ 070628\ added\ allocClearBits\n\ \ version\ 070615\ removed\ no\ longer\ needed\ getRef\n\ \ version\ 070610\ optimized\ access\ to\ different\ jump\ offset\ sizes\n\ \ version\ 070606\ moved\ common\ methods\ and\ variables\ to\ X86Base\n\ \ version\ 070601\ optimized\ genBinOp,\ externalized\ Strings\ to\ X86Base\n\ \ version\ 070531\ adopted\ removal\ of\ Architecture.genLoadFromMem\n\ \ version\ 070505\ changed\ naming\ of\ Clss\ to\ Unit,\ changed\ OutputObject\ to\ int\n\ \ version\ 070501\ optimized\ insPatched\n\ \ version\ 070423\ fixed\ interrupt\ pro-\ and\ epilog\n\ \ version\ 070127\ optimized\ access\ to\ err-flag\n\ \ version\ 070114\ removed\ never\ called\ genGetClassOfResult,\ reduced\ access\ level\ where\ possible\n\ \ version\ 070113\ adopted\ change\ of\ genCheckNull\ to\ genCompPtrToNull\n\ \ version\ 070104\ optimized\ register\ allocation\n\ \ version\ 070101\ fixed\ fixJump,\ adopted\ change\ in\ genCall\n\ \ version\ 061231\ removed\ coding\ of\ unused\ instruction,\ rolled\ out\ coding\ of\ ari-instructions\n\ \ version\ 061229\ removed\ access\ to\ firstInstr\n\ \ version\ 061225\ adopted\ change\ in\ codeProlog\n\ \ version\ 061203\ optimized\ assign/check\ and\ calls\ to\ printPos\ and\ compErr\n\ \ version\ 061202\ adopted\ change\ of\ genCall\n\ \ version\ 061111\ adopted\ change\ of\ Architecture.codeEpilog\n\ \ version\ 061109\ adapted\ Ops.C_BO\n\ \ version\ 060630\ initial\ version\n
comment1.params=
comment1.target=IA32RM()
comment10.params=outline
comment10.target=void\ codeEpilog(sjc.compbase.Mthd)
comment11.params=dst\ val\ type
comment11.target=void\ genLoadConstVal(int,\ int,\ int)
comment12.params=dst\ val\ asDouble
comment12.target=void\ genLoadConstDoubleOrLongVal(int,\ long,\ boolean)
comment13.params=dst\ src\ loc\ off
comment13.target=void\ genLoadVarAddr(int,\ int,\ java.lang.Object,\ int)
comment14.params=dstR\ src\ loc\ off\ type
comment14.target=void\ genLoadVarVal(int,\ int,\ java.lang.Object,\ int,\ int)
comment15.params=dstR\ srcR\ toType\ fromType
comment15.target=void\ genConvertVal(int,\ int,\ int,\ int)
comment16.params=dstR\ srcR\ type
comment16.target=void\ genDup(int,\ int,\ int)
comment17.params=val\ type
comment17.target=void\ genPushConstVal(int,\ int)
comment18.params=val\ asDouble
comment18.target=void\ genPushConstDoubleOrLongVal(long,\ boolean)
comment19.params=srcR\ type
comment19.target=void\ genPush(int,\ int)
comment2.params=loc\ offset\ ptr\ ptrOff
comment2.target=void\ putRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment20.params=dstR\ type
comment20.target=void\ genPop(int,\ int)
comment21.params=dst\ srcR\ type
comment21.target=void\ genAssign(int,\ int,\ int)
comment22.params=src1Hi\ src1Lo\ src2Hi\ src2Lo
comment22.target=void\ longDeshuffle(int,\ int,\ int,\ int)
comment23.params=dstHi\ dstLo
comment23.target=void\ longMoveRes(int,\ int)
comment24.params=dstR\ src1R\ src2R\ op\ type
comment24.target=void\ genBinOp(int,\ int,\ int,\ int,\ int)
comment25.params=dstR\ srcR\ op\ type
comment25.target=void\ genUnaOp(int,\ int,\ int,\ int)
comment26.params=dst\ type
comment26.target=void\ genIncMem(int,\ int)
comment27.params=dst\ type
comment27.target=void\ genDecMem(int,\ int)
comment28.params=dst\ unitLoc
comment28.target=void\ genLoadConstUnitContext(int,\ java.lang.Object)
comment29.params=off\ clssReg\ parSize
comment29.target=void\ genCall(int,\ int,\ int)
comment3.params=loc\ offset\ ptr\ ptrOff
comment3.target=void\ putCodeRef(java.lang.Object,\ int,\ java.lang.Object,\ int)
comment30.params=intfReg\ off\ parSize
comment30.target=void\ genCallIndexed(int,\ int,\ int)
comment31.params=mthd\ parSize
comment31.target=void\ genCallConst(sjc.compbase.Mthd,\ int)
comment32.params=src1R\ src2R\ type\ cond
comment32.target=int\ genComp(int,\ int,\ int,\ int)
comment33.params=src\ val\ type\ cond
comment33.target=int\ genCompValToConstVal(int,\ int,\ int,\ int)
comment34.params=src\ val\ asDouble\ cond
comment34.target=int\ genCompValToConstDoubleOrLongVal(int,\ long,\ boolean,\ int)
comment35.params=destReg\ objReg\ indReg\ baseOffset\ entrySize
comment35.target=void\ genLoadDerefAddr(int,\ int,\ int,\ int,\ int)
comment36.params=srcR\ type
comment36.target=void\ genMoveToPrimary(int,\ int)
comment37.params=dstR\ type
comment37.target=void\ genMoveFromPrimary(int,\ int)
comment38.params=dst
comment38.target=void\ genMoveIntfMapFromPrimary(int)
comment39.params=type
comment39.target=void\ genSavePrimary(int)
comment4.params=mask\ type
comment4.target=int\ freeRegSearch(int,\ int)
comment40.params=type
comment40.target=void\ genRestPrimary(int)
comment41.params=type\ sizeprefix\ wordflag\ reg\ mem\ disp\ imm\ par
comment41.target=void\ insMem(int,\ boolean,\ int,\ int,\ int,\ int,\ int,\ int)
comment42.params=me\ stackCells
comment42.target=void\ internalFixStackExtremeAdd(sjc.backend.Instruction,\ int)
comment43.params=type\ reg0\ reg1\ disp\ imm
comment43.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int)
comment44.params=type\ reg0\ reg1\ disp\ imm\ par
comment44.target=sjc.backend.Instruction\ ins(int,\ int,\ int,\ int,\ int,\ int)
comment45.params=i\ code\ sizeprefix\ wordflag\ reg0\ imm
comment45.target=void\ codeAriRegImm(sjc.backend.Instruction,\ int,\ boolean,\ int,\ int,\ int)
comment46.params=i\ code\ sizeprefix\ wordflag\ reg0\ imm
comment46.target=void\ codeShiftRegImm(sjc.backend.Instruction,\ int,\ boolean,\ int,\ int,\ int)
comment47.params=i\ reg0\ reg1
comment47.target=void\ putRegReg(sjc.backend.Instruction,\ int,\ int)
comment48.params=i\ reg0\ reg1\ disp
comment48.target=void\ putMem(sjc.backend.Instruction,\ int,\ int,\ int)
comment49.params=i\ reg0\ imm
comment49.target=void\ putImm(sjc.backend.Instruction,\ int,\ int)
comment5.params=regs
comment5.target=int\ storeReg(int)
comment6.params=regs
comment6.target=void\ restoreReg(int)
comment7.params=nr\ reg\ type\ firstWrite
comment7.target=int\ internalGetReg(int,\ int,\ int,\ boolean)
comment8.params=mthd
comment8.target=sjc.compbase.Mthd\ prepareMethodCoding(sjc.compbase.Mthd)
comment9.params=
comment9.target=void\ codeProlog()
numComments=50
